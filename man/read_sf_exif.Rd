% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_sf_exif.R
\name{read_sf_exif}
\alias{read_sf_exif}
\alias{write_exif}
\title{Read EXIF location data from images to a simple feature object}
\usage{
read_sf_exif(
  path = NULL,
  filetype = NULL,
  bbox = NULL,
  sort = "lon",
  tags = NULL,
  ...
)

write_exif(
  path = NULL,
  filetype = NULL,
  title = NULL,
  author = NULL,
  date = NULL,
  keywords = NULL,
  args = NULL,
  overwrite = TRUE
)
}
\arguments{
\item{path}{path to folder of one or more files with EXIF location metadata}

\item{filetype}{file extension or file type; defaults to "jpg"}

\item{bbox}{bounding box to crop sf file (excluding images with location data
outside the bounding box). If bbox is provided the returned data will match
the crs of the bbox.}

\item{sort}{variable to sort by. Currently supports "lon" (default), "lat",
or "filename"}

\item{tags}{EXIF tags to read from files. Must include GPS tags to create an
sf object.}

\item{...}{Additional EXIF tags to pass to \code{exiftoolr::exif_read}}

\item{title}{Title to add to file metadata with exiftoolr, Default: \code{NULL}.}

\item{author}{Author to add to file metadata with exiftoolr, Default: \code{NULL}.}

\item{date}{Date to add to file metadata with exiftoolr (not currently
working), Default: \code{NULL}.}

\item{keywords}{Keyword(s) added to file metadata with with exiftoolr,
Default: \code{NULL}.}

\item{args}{Alternate arguments passed to \code{\link[exiftoolr:exif_call]{exiftoolr::exif_call()}}. If args
is not \code{NULL}, title, author, date, and keywords are ignored; defaults to
\code{NULL}.}

\item{overwrite}{If TRUE, overwrite any existing EXIF metadata present in the
provided fields; defaults to TRUE}
}
\description{
Read EXIF data from folder of images.
}
\section{Writing EXIF metadata}{
NA
}

\examples{
path <- system.file("extdata", package = "overedge")

read_sf_exif(
  path = file.path(path, "photos"),
  filetype = "jpeg"
)
}
\seealso{
Other read_write: 
\code{\link{make_filename}()},
\code{\link{read_sf_ext}}
}
\concept{read_write}
