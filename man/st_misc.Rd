% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/st_misc.R
\name{st_misc}
\alias{st_misc}
\alias{st_scale_rotate}
\alias{st_center}
\alias{st_square}
\alias{st_inscribed_square}
\alias{st_circle}
\alias{st_circumscribed_circle}
\title{Modify the geometry of a simple feature or bounding box object}
\usage{
st_scale_rotate(x, scale = 1, rotate = 0)

st_center(x, ext = TRUE, ...)

st_square(x, scale = 1, rotate = 0, inscribed = FALSE)

st_inscribed_square(x, scale = 1, rotate = 0)

st_circle(x, scale = 1, inscribed = FALSE)

st_circumscribed_circle(x, scale = 1)
}
\arguments{
\item{x}{A sf, sfc, or bbox object}

\item{scale}{numeric; scale factor, Default: 1}

\item{rotate}{numeric; degrees to rotate (-360 to 360), Default: 0}

\item{ext}{If \code{TRUE}, st_center returns a list with the centroid as a sfc object, as an sf object (with lon and lat values), the original geometry (x), and the original crs.
objects; defaults TRUE. If \code{FALSE}, return an sf object.}

\item{...}{Additional parameters passed to \code{sf::st_centroid()} by st_center}

\item{inscribed}{If \code{TRUE}, make circle or square inscribed within x, if \code{FALSE}, make it circumscribed.}
}
\description{
Support both bbox and sf objects as inputs.
}
\details{
\itemize{
\item Scale or rotate a simple feature or bounding box object using affine transformations
\item Get the center point for a sf object
\item Get a circumscribed square or approximate inscribed square in a sf object
\item Get a circumscribed circle or incscribed circle in a sf object
}

st_inscribed_square wraps \code{sf::st_inscribed_circle()} but limits the
circle to 1 segment per quadrant (\code{nQuadSegs} = 1) and then rotates the resulting geometry 45
degrees to provide a (mostly) inscribed square. A different rotation value
can be provided to change the orientation of the shape, e.g. rotate = -45 to
return a diamond shape. st_square wraps \link{st_bbox_ext} with asp = 1.
}
\examples{
library(ggplot2)

nc <- sf::st_read(system.file("shape/nc.shp", package = "sf"))
nc_rotated <- st_scale_rotate(nc, scale = 0.5, rotate = 15)

ggplot2::ggplot() +
  ggplot2::geom_sf(data = nc) +
  ggplot2::geom_sf(data = nc_rotated, fill = NA, color = "red")
}
\seealso{
\itemize{
\item \link[sf:geos_unary]{sf::geos_unary}
}
}
