% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sf_to_df.R
\name{sf_to_df}
\alias{sf_to_df}
\alias{df_to_sf}
\alias{check_coords}
\alias{has_coords}
\title{Convert between simple feature and data frame objects}
\usage{
sf_to_df(
  x,
  crs = 4326,
  coords = c("lon", "lat"),
  geometry = "centroid",
  keep_all = TRUE
)

df_to_sf(
  x,
  crs = NULL,
  coords = c("lon", "lat"),
  from_crs = 4326,
  into = NULL,
  sep = ",",
  rev = TRUE,
  remove_coords = FALSE
)

check_coords(x = NULL, coords = NULL, default = c("lon", "lat"), rev = FALSE)

has_coords(x, coords = NULL, value = TRUE)
}
\arguments{
\item{x}{A \code{sf} or \code{sfc} object or a data frame with lat/lon coordinates in a
single column or two separated columns.}

\item{crs}{Cordinate reference system to return, Default: 4326 for \link{sf_to_df}
and NULL for \link{df_to_sf}}

\item{coords}{Coordinate columns for input dataframe or output sf object (if
geometry is 'centroid' or 'point') Default: c("lon", "lat").}

\item{geometry}{Type of geometry to include in data frame. options include
"drop", "wkt", "centroid", "point", Default: 'centroid'.}

\item{keep_all}{If \code{FALSE}, drop all columns other than those named in
coords, Default: \code{TRUE}.}

\item{from_crs}{For \link{df_to_sf}, coordinate reference system used by
coordinates or well known text in data frame.}

\item{into}{If coords is a single column name with both longitude and
latitude, \code{into} is used as the names of the new columns that coords is
separated into. Passed to \link[tidyr:separate]{tidyr::separate}.}

\item{sep}{If coords is a single column name with both longitude and
latitude, \code{sep} is used as the separator between coordinate values. Passed
to \link[tidyr:separate]{tidyr::separate}.}

\item{rev}{If TRUE, reverse c("lat", "lon") coords to c("lon", "lat").
check_coords only.}

\item{remove_coords}{For \link{df_to_sf}, if \code{TRUE}, remove the coordinate columns
after converting a data frame to simple feature object; defaults to
\code{FALSE}.}

\item{default}{c("lon", "lat").}

\item{value}{If TRUE, return the value of the coordinate column names. Used by \link{has_coords}.}
}
\value{
\code{\link[=sf_to_df]{sf_to_df()}} returns a data frame with geometry dropped or converted
to wkt or coordinates for the centroid or point on surface; \code{\link[=df_to_sf]{df_to_sf()}}
returns a simple feature object with POINT geometry.
}
\description{
Helper function to convert a simple feature object to data frame by dropping
geometry, converting geometry to well known text, or (if the geometry type is
not POINT) getting coordinates for a centroid or point on surface. If an sfc
object is provided,the "drop" geometry option is not supported.
}
\details{
\code{\link[=check_coords]{check_coords()}} is a helper function used by \code{\link[=df_to_sf]{df_to_sf()}} to suggest the
appropriate coordinate column names based on the column names in the provided
data frame.
}
\examples{
nc <- sf::st_read(system.file("shape/nc.shp", package = "sf"))

nc_coords <-
  suppressWarnings(sf::st_coordinates(sf::st_centroid(nc)))

nc_df <-
  dplyr::bind_cols(sf::st_drop_geometry(nc), nc_coords)

nc_df <- janitor::clean_names(nc_df)
df_to_sf(nc_df, coords = c("x", "y"), remove_coords = TRUE)
nc_df$xy <- paste(nc_df$x, nc_df$y, sep = ",")
df_to_sf(nc_df, coords = "xy", into = c("lon", "lat"))
}
\seealso{
\code{\link[sf]{st_coordinates}}

\code{\link[ggspatial]{df_spatial}}
\code{\link[sf]{st_as_sf}}
}
