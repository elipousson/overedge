[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 overedge authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"/articles/get_location.html","id":"supported-location-types","dir":"Articles","previous_headings":"Get location","what":"Supported location types","title":"Get locations and location data","text":"“type” location data can access get_location() flexible. can provide: simple feature object url spatial data file compatible sf::read_sf() url ArcGIS MapServer FeatureServer file path can also provide name simple feature object either already loaded global environment available load installed package. Data packages include exported data available package loaded, data available system files loaded (may sometimes undocumented), data default cache folder path rappdirs::user_cache_dir(). want use package data cached different location, need provide file path (filename directory) order use get_location(). parameters passed get_location() get_location_data() following section vignette includes details general function works. Finally, can alternatively pass named list index serves look-table matching “type” sf object.","code":""},{"path":"/articles/get_location.html","id":"supported-parameters-to-accessing-a-location","dir":"Articles","previous_headings":"Get location","what":"Supported parameters to accessing a location","title":"Get locations and location data","text":"basic parameters accessing specific location : name (name_col matching column filter) id (id_col matching column filter) passed value name coerced character id coerced numeric , “id” column type location character format, need treat “name” instead. Alternatively can use location parameter supports either: valid street address (geocoded tidygeocoder::geo()) simple feature object bounding box Note: 2022-02-14, get_location() currently supports single address time expect update function supports multiple addresses). provide sf bbox object, object used spatial filter either reading data (using bbox parameter read_sf_path read_sf_url) returning data using sf::st_filter() function.","code":""},{"path":"/articles/get_location.html","id":"working-with-union-and-label-parameters","dir":"Articles","previous_headings":"Get location > Supported parameters to accessing a location","what":"Working with union and label parameters","title":"Get locations and location data","text":"Location types administrative boundaries can often grouped together larger areas. union parameter makes easy .","code":""},{"path":[]},{"path":"/articles/get_location.html","id":"building-custom-look-up-functions","dir":"Articles","previous_headings":"Get location > What is get_location() good for?","what":"Building custom look-up functions","title":"Get locations and location data","text":"examples showing can use get_location() create new custom look-functions. location data another package, can use package parameters passed get_location_data() access data even without loading package. approach works best package data uses consistent naming scheme columns data support. makes easy turn names parameters example using nycgeo package. location data sourced ArcGIS MapServer FeatureServer, can use locationname locationname_col parameters underlying get_esri_data() function. avoids need download full dataset every time. Location data can also loaded URL GeoJSON spatial data file.","code":"# NOTE: install nycgeo from GitHub not CRAN # remotes::install_github(\"mfherman/nycgeo\") get_nyc_borough <- function(name = NULL, id = NULL, type = \"simple\") {   data <- \"borough_sf\"   if (type == \"simple\") {     data <- paste(data, type, sep = \"_\")   }    package <- \"nycgeo\"    get_location(     type = data,     package = package,     name = name,     id = id,     name_col = \"borough_name\",     id_col = \"borough_id\"   ) }  get_nyc_borough(\"Manhattan\") #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> Simple feature collection with 1 feature and 6 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 971160 ymin: 188438.4 xmax: 1010065 ymax: 259550.8 #> Projected CRS: NAD83 / New York Long Island (ftUS) #> # A tibble: 1 × 7 #>   geoid state_fips county_fips county_name borough_name borough_id #>   <chr> <chr>      <chr>       <chr>       <chr>        <chr>      #> 1 36061 36         061         New York    Manhattan    1          #> # … with 1 more variable: geometry <MULTIPOLYGON [US_survey_foot]> # get_anc looks up the Advisory Neighborhood Council # Data from Open Data DC https://opendata.dc.gov/datasets/fcfbf29074e549d8aff9b9c708179291  get_anc <- function(name) {   url <- \"https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Administrative_Other_Boundaries_WebMercator/MapServer/1\"    get_location(     type = url,     locationname = toupper(name),     locationname_col = \"name\"   ) }  get_anc(name = \"5B\") #> Layer Type: Feature Layer #> Geometry Type: esriGeometryPolygon #> Service Coordinate Reference System: 3857 #> Output Coordinate Reference System: 4326 #> Simple feature collection with 1 feature and 11 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -76.99753 ymin: 38.92135 xmax: -76.96666 ymax: 38.95024 #> Geodetic CRS:  WGS 84 #>   objectid anc_id                                                    web_url #> 1        9 ANC 5B http://anc.dc.gov/page/advisory-neighborhood-commission-5b #>   name shape_area shape_len                               globalid creator #> 1   5B          0         0 {6DBCF9C2-E269-41C6-AE4D-AC645FFC101D}      NA #>   created editor       edited                          geoms #> 1      NA  DCGIS 1.573036e+12 MULTIPOLYGON (((-76.98239 3..."},{"path":"/articles/get_location.html","id":"accessing-overlapping-geographies","dir":"Articles","previous_headings":"Get location > What is get_location() good for?","what":"Accessing overlapping geographies","title":"Get locations and location data","text":"Since location supports addresses sf objects, can pull individual locations without knowing name id area. example, can use address: can also combine multiple approaches create look-function returns overlapping geography named characteristic. example, following function takes name school returns Baltimore City neighborhoods overlap school’s attendance zone.","code":"# NOTE: mapbaltimore is not currently available on CRAN # remotes::install_github(\"elipousson/mapbaltimore\") lookup_tract <- function(address) {   get_location(     type = \"baltimore_tracts\",     package = \"mapbaltimore\",     location = address   ) }  lookup_tract(\"100 Holliday St, Baltimore, MD 21202\") #> Passing 1 address to the Nominatim single address geocoder #> Query completed in: 1 seconds #> Simple feature collection with 1 feature and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 432552.6 ymin: 179852.2 xmax: 434068 ymax: 180839.8 #> Projected CRS: NAD83(HARN) / Maryland #>   tractce       geoid name         namelsad   aland awater    intptlat #> 1  040100 24510040100  401 Census Tract 401 1191002   1430 +39.2902267 #>       intptlon                       geometry #> 1 -076.6145019 POLYGON ((432552.6 180801.8... lookup_school_neighborhoods <- function(school_name) {   school <-     get_location(       type = \"bcps_es_zones_SY2021\",       package = \"bcpss\",       name = school_name,       name_col = \"program_name_short\"     )    school_neighborhoods <- get_location(     type = \"neighborhoods\",     package = \"mapbaltimore\",     location = school   )    return(school_neighborhoods) }  lookup_school_neighborhoods(\"Eutaw-Marshburn E\") #> Simple feature collection with 4 features and 5 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 430345 ymin: 180859.9 xmax: 432750.5 ymax: 182536.5 #> Projected CRS: NAD83(HARN) / Maryland #> # A tibble: 4 × 6 #>   name                type       acres osm_id wikidata                  geometry #> * <chr>               <chr>      <dbl> <chr>  <chr>           <MULTIPOLYGON [m]> #> 1 Druid Heights       Residenti…  57.9 12792… NA       (((431569.6 181988, 4315… #> 2 Madison Park        Residenti… 102.  12792… NA       (((432337.1 181728.9, 43… #> 3 Sandtown-Winchester Residenti… 260.  12800… Q7416984 (((430729.9 182481.6, 43… #> 4 Upton               Residenti… 188.  12792… Q7899346 (((432361 181396.1, 4323…"},{"path":"/articles/get_location.html","id":"get-location-data","dir":"Articles","previous_headings":"Get location","what":"Get location data","title":"Get locations and location data","text":"noted previous section, get_location() largely built around get_location_data(). , get_location_data() also helpful function just . data parameter supports options type parameter described prior section, get_location_data() also supports named parameters path url. Note: vignette work progress additional details added soon.","code":"params <- list(   type = \"council_districts\",   id = 12,   dist = 0.125,   diag_ratio = NULL,   unit = \"mi\",   package = \"mapbaltimore\",   layers = c(\"streets\", \"neighborhoods\", \"trees\") )  district <-   get_location(     type = params$type,     package = params$package,     id = params$id   )"},{"path":"/articles/get_location.html","id":"selecting-a-page-size","dir":"Articles","previous_headings":"","what":"Selecting a page size","title":"Get locations and location data","text":"can use get_paper function look one common paper sizes standard image sizes: can also use geometry specified location set orientation page suggested aspect ratio using sf_bbox_asp function: Based information, looks like map way work well Instagram post. one additional consideration setting aspect ratio map area: aspect ratio content block marings applied. less significant Instagram post full bleed images appropriate, example shows get aspect ratio plot, text, map block margins added page. “px” units associated Instagram post paper currently used header footer option passed “npc” units manually set margin rather using preset options. Finally, final selections can used create bounding box reduces need pass variables similar functions. can also works way effectively saving different “zoom levels” map based different buffer units.","code":"paper_options <- get_paper(standard = c(\"Twitter\", \"Instagram\")) knitr::kable(paper_options) sf_bbox_asp(sf::st_bbox(district)) #> [1] 0.930126  sf_bbox_asp((sf::st_bbox(district)), orientation = TRUE) #> [1] \"square\" params$paper <- \"Instagram post\"  # Get a paper by name  paper <-    get_paper(     paper = params$paper   )  # Move width, height, aspect ratio (asp), and units (for map) into params params$width <- paper$width params$height <- paper$height params$asp <- paper$asp # NOTE: px units are not fully supported by all functions # NOTE: units supports map-scale options (\"in\") rather than the unit parameter used by st_buffer_ext params$units <- paper$units get_asp(   paper = \"letter\",   block_asp = FALSE) #> [1] 0.7727273  get_asp(   paper = \"letter\",   margin = c(1, 1, 1.5, 1),   block_asp = TRUE) #> [1] 0.7647059 # This information  district_bbox <-   st_bbox_ext(     x = district,     dist = params$dist,     diag_ratio = params$diag_ratio,     asp = params$asp   ) district_trees <-   get_location_data(     location = district_bbox,     data = \"trees\",     package = \"mapbaltimore\",     filetype = \"gpkg\"   )  gt::gt(dplyr::slice_head(district_trees, n = 10)) ggplot() +   layer_location_data(     data = district_trees,     mapping = aes(color = condition),     size = 0.3,     alpha = 0.4   ) +   layer_mask(     data = district,     dist = 100,     color = \"gray70\",     neatline = TRUE   ) +   theme_legend(     position = \"bottomleft\"   ) +   theme_text(     font_family = \"Fira Code\"   ) +   labs(     color = \"Condition\"   ) +   scale_color_brewer(palette = \"RdYlGn\")"},{"path":"/articles/get_remote_data.html","id":"get-data-from-an-arcgis-featureserver-or-mapserver","dir":"Articles","previous_headings":"","what":"Get data from an ArcGIS FeatureServer or MapServer","title":"Getting remote data and photos using API functions","text":"large number cities adopted ArcGIS Hub open data platform spatial non-spatial data. get_esri_data wraps esri2sf package facilitate getting spatial data bounding box area name. example, FeatureServer Open Baltimore provides list designated landmarks Downtown Baltimore.  Even non-spatial Tables can filtered location table includes latitude longitude columns.","code":"# https://data.baltimorecity.gov/datasets/landmarks-1/explore url <- \"https://opendata.baltimorecity.gov/egis/rest/services/Hosted/Landmarks/FeatureServer/0\"  landmarks <-   get_esri_data(     location = location,     url = url   ) #> Layer Type: Feature Layer #> Geometry Type: esriGeometryPoint #> Service Coordinate Reference System: 3857  landmarks <-   dplyr::select(landmarks, fid, name, address)  basemap +   layer_location_data(     data = landmarks   ) +   layer_location_data(     data = landmarks,     geom = \"text_repel\",     size = 2   ) +   layer_neatline(     data = location   )"},{"path":"/articles/get_remote_data.html","id":"get-data-from-open-street-map","dir":"Articles","previous_headings":"","what":"Get data from Open Street Map","title":"Getting remote data and photos using API functions","text":"get data Open Street Map, may need refer OSM Wiki information keys tags tourism artwork.","code":"osm_artwork <-   get_osm_data(     location = location,     key = \"tourism\",     value = \"artwork\",     geometry = \"point\"   )  basemap +   layer_location_data(     data = osm_artwork,     aes(color = material)   ) +   layer_neatline(     data = location,     expand = TRUE   ) +   theme_legend(position = \"topleft\")"},{"path":"/articles/get_remote_data.html","id":"get-data-about-photos-from-flickr","dir":"Articles","previous_headings":"","what":"Get data about photos from Flickr","title":"Getting remote data and photos using API functions","text":"get_flickr_photos function depends development version FlickrAPI package currently able render vignette show following experimental function using leafpop package make interactive photo map based photos Flickr.","code":"photos_sf <-   get_flickr_photos(     location = location,     img_size = \"s\",     tags = \"monument\",     orientation = \"landscape\",     geometry = TRUE # this is the default   ) mapview_flickr <- function(photos,                            img_size = \"s\") {   img_size <-     match.arg(       img_size,       c(\"sq\", \"t\", \"s\", \"q\", \"m\", \"n\", \"z\", \"c\", \"l\", \"o\")     )    leaflet_map <-     leaflet::leaflet() %>%     leaflet::addTiles() %>%     leaflet::addCircleMarkers(data = photos, group = \"photos\")    img_url <- photos$img_url   img_width <- photos$img_width   img_height <- photos$img_height    photo_map <-     leafpop::addPopupImages(       map = leaflet_map,       image = img_url,       width = img_width,       height = img_height,       group = \"photos\"     )    return(photo_map) }   mapview_flickr(photos = photos_sf, img_size = \"s\")"},{"path":[]},{"path":"/articles/ggsave_ext.html","id":"set-parameters-for-the-map-and-location","dir":"Articles","previous_headings":"Getting started","what":"Set parameters for the map and location","title":"Map layout and themes with ggplot2 utility functions","text":"overedge designed easily support workflow page image size, page margin, map area (defined location along dist diag_ratio parameters) used repeatly across range related functions map making layout functions. example, location name, location type, package type data used get sf object Baltimore neighborhood. Additional parameters can derived based preliminary parameters geometry. example, page orientation can based aspect ratio buffered bounding box named location. aspect ratio location map based combination paper, margin, orientation. overall bounding box map area requires distance diagonal ratio aspect ratio. quick map helpful illustrating relative size proportion different simple feature objects bounding boxes created process:  example, objects block_bbox nearby_neighborhoods separate objects easily added list parameters. approach using parameters intended make code easy reuse parameterized RMarkdown document. cases, may convenient wrap overedge function preset parameters use purrr::partial() similar purpose: can helpful reducing repetition setting maps also can get confusing use approach care.","code":"# Set initial parameters params <-   list(     paper = \"Instagram post\",     margin = \"narrow\",     name = \"Harwood\",     type = \"neighborhoods\",     package = \"mapbaltimore\",     source = \"Baltimore City\",     dist = NULL,     diag_ratio = 0.75   ) # Create wrapper function to get neighborhood get_neighborhood <- function(name = NULL, location = NULL) {   get_location(     type = params$type,     package = params$package,     name = name,     location = location   ) }  # Use the get_neighborhood wrapper function to get the neighborhood named in param params$neighborhood <-   get_neighborhood(name = params$name) # Get appropriate orientation based on buffer parameters params$orientation <-   sf_bbox_asp(     bbox = st_bbox_ext(       x = params$neighborhood,       dist = params$dist,       diag_ratio = params$diag_ratio     ),     orientation = TRUE   )  # Get aspect ratio for content block based on paper size, margin, and orientation params$block_asp <-   get_asp(     paper = params$paper,     unit = params$unit,     margin = params$margin,     orientation = params$orientation,     block_asp = TRUE   )  # Get additional parameters based on the paper (used in later sections of this vignette) params$paper_df <-   get_paper(     paper = params$paper,     orientation = params$orientation   )  params$asp <- params$paper_df$asp params$width <- params$paper_df$width params$height <- params$paper_df$height  # Get map bounding box for neighborhood based on adjustment parameters block_bbox <-   st_bbox_ext(     x = params$neighborhood,     dist = params$dist,     diag_ratio = params$diag_ratio,     asp = params$asp_block   )  # Get nearby neighborhoods that overlap with the buffer and aspect ratio adjusted bounding box nearby_neighborhoods <-   get_neighborhood(     location = block_bbox   ) ggplot() +   layer_location_data(     data = \"baltimore_city_detailed\",     package = \"mapbaltimore\"   ) +   geom_sf(data = nearby_neighborhoods, alpha = 0.25, fill = \"yellow\") +   geom_sf(data = sf_bbox_to_sf(block_bbox), alpha = 0.25, fill = \"blue\") +   geom_sf(data = params$neighborhood, alpha = 0.25, fill = \"green\") +   layer_neatline(     data = nearby_neighborhoods   ) # Use partial to create a version of layer_location_data that applies a half-mile buffer to the specified neighborhood layer_half_mi_buffer <-    purrr::partial(     layer_location_data,     location = params$neighborhood,     dist = 0.5,     unit = \"mi\",     diag_ratio = NULL,     asp = get_asp(paper = \"letter\", orientation = \"landscape\")   ) ggplot() +   layer_half_mi_buffer(     data = params$type,     package = params$package,     aes(fill = name),     alpha = 0.75   ) +   guides(fill = \"none\") +   theme_void()"},{"path":[]},{"path":"/articles/ggsave_ext.html","id":"create-a-basemap-and-label-layer","dir":"Articles","previous_headings":"Make a map","what":"Create a basemap and label layer","title":"Map layout and themes with ggplot2 utility functions","text":"order maintain flexibility map layout process, may helpful set basemap covers larger area. example illustrates combine street center line data, neighborhood boundaries, labels residential neighborhoods larger basemap centered selected neighborhood.  layer_location_data() flexible wrapper function around several different types geoms sf objects including geoms ggrepel geomtextpath. makes easy create separate layers basemap, labels, features.","code":"basemap <-   ggplot() +   layer_location_data(     location = block_bbox,     data = \"streets\",     package = \"mapbaltimore\",     color = \"gray40\"   ) +   layer_location_data(     data = nearby_neighborhoods,     mapping = aes(fill = name),     color = NA,     alpha = 0.6   ) +   scale_fill_brewer() +   guides(     fill = \"none\"   )  basemap #> Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Blues is 9 #> Returning the palette you asked for with that many colors label_layer <-   layer_location_data(     location = block_bbox,     data = \"neighborhoods\",     package = \"mapbaltimore\",     geom = \"label\",     mapping = aes(label = name),     fn = ~ dplyr::filter(       .x,       name %in% nearby_neighborhoods$name,       type == \"Residential\"     ),     fill = \"white\",     color = \"black\"   )  basemap +   label_layer #> Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Blues is 9 #> Returning the palette you asked for with that many colors"},{"path":"/articles/ggsave_ext.html","id":"add-a-neatline-location-mask-or-location-boundary","dir":"Articles","previous_headings":"Make a map","what":"Add a neatline, location mask, or location boundary","title":"Map layout and themes with ggplot2 utility functions","text":"creating needed layers map, may want focus specific area clean appearance map removing grid lines axis labels. layer_neatline() function makes easy effectively “zoom” specific area hiding grid lines axis labels.  layer_mask() function also allow add layer_neatline() map along mask using parameters.","code":"neighborhood_map <-   basemap +   # Draw a neatline around the selected neighborhood   layer_neatline(     data = params$neighborhood,     diag_ratio = params$diag_ratio,     asp = params$paper_df$asp,     size = 1.5,     color = \"gray60\",     expand = TRUE   )  neighborhood_map #> Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Blues is 9 #> Returning the palette you asked for with that many colors basemap +   layer_mask(     data = params$neighborhood,     dist = 200,     asp = params$asp,     neatline = TRUE   ) #> Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Blues is 9 #> Returning the palette you asked for with that many colors letter_map <-   basemap +   birdseyeview::layer_show_location(     data = params$neighborhood,     dist = 200,     size = 1.5,     asp = get_asp(paper = \"letter\", margin = c(2, 1, 1.5, 1), block_asp = TRUE),     neatline = TRUE   )"},{"path":"/articles/ggsave_ext.html","id":"add-margins","dir":"Articles","previous_headings":"Make a map","what":"Add margins","title":"Map layout and themes with ggplot2 utility functions","text":"last step add margins. Margins can also include header footer ensure sufficient space title, subtitle, caption.  resulting map appears oddly proportioned display size vignette units ensure margin appropriately sized paper size provided.","code":"letter_map +   theme_margin(     paper = \"letter\",     margin = \"standard\",     header = 1,     footer = 0.5,     fill = \"gray90\"   ) # + #> Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Blues is 9 #> Returning the palette you asked for with that many colors #  labs_ext( #    title = \"{params$name} and nearby neighborhoods\", #    caption = \"Data courtesy {params$source}.\" #  )"},{"path":"/articles/ggsave_ext.html","id":"export-a-map","dir":"Articles","previous_headings":"","what":"Export a map","title":"Map layout and themes with ggplot2 utility functions","text":"Finally, ggsave_exif() function uses make_filename() function also used write_sf_ext() create consistent file names can optionally include date date-time prefix.","code":"make_filename(   name = \"Neighborhood map\",   label = params$name,   prefix = \"date\" ) #> [1] \"2022-03-09_harwood_neighborhood_map\""},{"path":"/articles/ggsave_ext.html","id":"save-map-with-ggsave_ext","dir":"Articles","previous_headings":"Export a map","what":"Save map with ggsave_ext","title":"Map layout and themes with ggplot2 utility functions","text":"dimensions exported file may set automatically based paper orientation. title author parameter used update EXIF metadata file exported. title author evaluated glue() allow use parameters label title map.","code":"ggsave_ext(   plot = neighborhood_map,   name = \"Neighborhood map\",   label = params$name,   title = \"Map of {params$name} and surrounding area\",   author = \"Eli Pousson\",   paper = params$paper,   orientation = params$orientation,   device = \"png\",   prefix = \"date\",   exif = TRUE,   bg = \"white\" )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eli Pousson. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pousson E (2022). overedge: Assorted Functions Easier Map Making. R package version 0.0.0.9000.","code":"@Manual{,   title = {overedge: Assorted Functions For Easier Map Making},   author = {Eli Pousson},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"overedge","dir":"","previous_headings":"","what":"Assorted Functions For Easier Map Making","title":"Assorted Functions For Easier Map Making","text":"goal overedge provide useful functions making maps R. collection miscellaneous functions primarily working ggplot2 sf.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Assorted Functions For Easier Map Making","text":"can install development version overedge like :","code":"remotes::install_github(\"elipousson/overedge\")"},{"path":"/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Assorted Functions For Easier Map Making","text":"overedge currently provides variety functions accessing spatial data, modifying simple feature bounding box objects, creating formatting maps ggplot2.","code":""},{"path":"/index.html","id":"make-icon-maps-with-sf-objects-and-ggplot2","dir":"","previous_headings":"Examples","what":"Make icon maps with sf objects and ggplot2","title":"Assorted Functions For Easier Map Making","text":"geom_sf_icon wraps ggsvg::geom_point_svg() provide convenient way make icon maps. can create maps using single named icon matches one icons map_icons.  can also use icon column provided sf object.  Check map_icons see supported icon names.","code":"library(overedge) library(ggplot2) library(sf) #> Linking to GEOS 3.9.1, GDAL 3.4.0, PROJ 8.1.1; sf_use_s2() is TRUE  nc <- st_read(system.file(\"shape/nc.shp\", package = \"sf\")) #> Reading layer `nc' from data source  #>   `/Library/Frameworks/R.framework/Versions/4.1/Resources/library/sf/shape/nc.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 14 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965 #> Geodetic CRS:  NAD27 nc <- st_transform(nc, 3857) theme_set(theme_void())  nc_map <-   ggplot() +   geom_sf(data = nc)  nc_map +   geom_sf_icon(data = nc, icon = \"point-start\", size = 8) nc$icon <- rep(c(\"1\", \"2\", \"3\", \"4\"), nrow(nc) / 4)  nc_map +   geom_sf_icon(data = nc, size = 5) head(map_icons) #>                name #> 1         aerialway #> 2          airfield #> 3           airport #> 4      alcohol-shop #> 5 american-football #> 6    amusement-park #>                                                                              url #> 1         https://raw.githubusercontent.com/mapbox/maki/main/icons/aerialway.svg #> 2          https://raw.githubusercontent.com/mapbox/maki/main/icons/airfield.svg #> 3           https://raw.githubusercontent.com/mapbox/maki/main/icons/airport.svg #> 4      https://raw.githubusercontent.com/mapbox/maki/main/icons/alcohol-shop.svg #> 5 https://raw.githubusercontent.com/mapbox/maki/main/icons/american-football.svg #> 6    https://raw.githubusercontent.com/mapbox/maki/main/icons/amusement-park.svg #>   size style        repo #> 1   15       mapbox/maki #> 2   15       mapbox/maki #> 3   15       mapbox/maki #> 4   15       mapbox/maki #> 5   15       mapbox/maki #> 6   15       mapbox/maki"},{"path":"/index.html","id":"scale-and-rotate-sf-objects","dir":"","previous_headings":"Examples","what":"Scale and rotate sf objects","title":"Assorted Functions For Easier Map Making","text":"st_scale_rotate() convenience function apply affine transformations sf objects.","code":"nc_rotated <- st_scale_rotate(nc, scale = 0.5, rotate = 15)  nc_map +   geom_sf(data = nc_rotated, fill = NA, color = \"red\")"},{"path":"/index.html","id":"create-inscribed-squares-in-sf-objects","dir":"","previous_headings":"Examples","what":"Create inscribed squares in sf objects","title":"Assorted Functions For Easier Map Making","text":"","code":"nc_squares <- st_inscribed_square(nc)  nc_map +   geom_sf(data = nc_squares, fill = NA, color = \"red\")"},{"path":"/index.html","id":"add-a-neatline-to-a-map","dir":"","previous_headings":"Examples","what":"Add a neatline to a map","title":"Assorted Functions For Easier Map Making","text":"layer_neatline() hides major grid lines axis label default. function useful draw neatline around map set aspect ratio.  layer_neatline() can also used focus specific area map option apply buffer distance ratio diagonal distance input data. label_axes hide_grid paramters override set ggplot theme.","code":"nc_map +   layer_neatline(     data = nc,     asp = \"6:4\",     color = \"gray60\", size = 2, linetype = \"dashed\"   ) theme_set(theme_minimal())  nc_map +   layer_neatline(     data = nc[1, ],     diag_ratio = 0.5,     asp = 1,     color = \"black\",     label_axes = \"--EN\",     hide_grid = FALSE   )"},{"path":"/reference/as_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object to a simple feature or bounding box object — as_sf","title":"Convert an object to a simple feature or bounding box object — as_sf","text":"functions pass NULL value without returning error.","code":""},{"path":"/reference/as_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object to a simple feature or bounding box object — as_sf","text":"","code":"as_sf(x, crs = NULL, ...)  as_bbox(x, crs = NULL, ...)"},{"path":"/reference/as_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object to a simple feature or bounding box object — as_sf","text":"x sf, bbox, sfc, raster, sp, dataframe object can converted simple feature bounding box object. as_bbox() can also convert vector xmin, ymin, xmax, ymax values. crs Coordinate reference system sf bbox obect return ... Additional parameters passed sf::st_bbox() calling as_bbox() passed sf::st_sf(), sf::st_as_sf(), df_to_sf() as_sf() (depending class x)","code":""},{"path":"/reference/check_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is bbox class — check_bbox","title":"Check if an object is bbox class — check_bbox","text":"Check object bbox class","code":""},{"path":"/reference/check_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is bbox class — check_bbox","text":"","code":"check_bbox(x)"},{"path":"/reference/check_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is bbox class — check_bbox","text":"x object check bbox class object .","code":""},{"path":[]},{"path":"/reference/check_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the class and attributes of a simple feature object — check_sf","title":"Check the class and attributes of a simple feature object — check_sf","text":"Check class attributes simple feature object","code":""},{"path":"/reference/check_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the class and attributes of a simple feature object — check_sf","text":"","code":"check_sf(x, ext = FALSE)  check_sfc(x)  check_bbox(x)  check_sf_list(x)  check_sf_same_crs(x, y)  check_raster(x)  check_sp(x)"},{"path":"/reference/check_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the class and attributes of a simple feature object — check_sf","text":"x sf, sfc, bbox object. ext TRUE, check x sf, sfc, bbox class object ; defaults FALSE. (used check_sf) y sf object character numeric object supported sf::st_crs can compared x. (used check_sf_same_crs)","code":""},{"path":"/reference/check_sf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check the class and attributes of a simple feature object — check_sf","text":"check_sf: check x sf class object. check_bbox: check x bbox class object. check_sf_list: check x named list sf class objects.","code":""},{"path":"/reference/check_sf_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is a named list of sf class objects — check_sf_list","title":"Check if object is a named list of sf class objects — check_sf_list","text":"Check object named list sf class objects","code":""},{"path":"/reference/check_sf_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is a named list of sf class objects — check_sf_list","text":"","code":"check_sf_list(x)"},{"path":"/reference/check_sf_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is a named list of sf class objects — check_sf_list","text":"x object check named list sf class objects .","code":""},{"path":[]},{"path":"/reference/check_sf_same_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if objects share the same coordinate reference system — check_sf_same_crs","title":"Check if objects share the same coordinate reference system — check_sf_same_crs","text":"Check objects share coordinate reference system","code":""},{"path":"/reference/check_sf_same_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if objects share the same coordinate reference system — check_sf_same_crs","text":"","code":"check_sf_same_crs(x, y)"},{"path":"/reference/check_sf_same_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if objects share the same coordinate reference system — check_sf_same_crs","text":"x sf, sfc, bbox object, character numeric object supported st_crs y object object compare x. object classes supported. transform TRUE, transform y match CRS x return Y. FALSE, return logical indicator whether x y crs; defaults FALSE.","code":""},{"path":[]},{"path":"/reference/convert_dist_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert distance from scale to actual units — convert_dist_scale","title":"Convert distance from scale to actual units — convert_dist_scale","text":"Convert distance scale actual units based named standard_scales","code":""},{"path":"/reference/convert_dist_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert distance from scale to actual units — convert_dist_scale","text":"","code":"convert_dist_scale(   dist = NULL,   paper = NULL,   orientation = NULL,   scale = NULL,   scale_unit = \"in\",   actual_unit = NULL,   scale_factor = NULL,   dpi = 120 )"},{"path":"/reference/convert_dist_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert distance from scale to actual units — convert_dist_scale","text":"dist distance convert. paper provided, paper width height used dist. paper Paper, Default: 'letter'. orientation Orientation \"portrait\", \"landscape\", \"square\", Default: 'portrait'. scale Scale name scale_unit \"mm\" (converted cm dividing 10), \"cm\", \"px\" (converted inches dividing dpi), \"\". actual_unit unit supported convert_dist_units scale_factor factor converting scale_unit actual_unit, e.g. 1\" = 1', scale factor 12. optional scale provided; defaults NULL. dpi dots per square inch (used conversion factor \"px\" \"\")","code":""},{"path":"/reference/convert_dist_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert distance from scale to actual units — convert_dist_scale","text":"dist values converted scale_unit actual_unit based scale_factor information standard_scales object. paper provided, return data frame converted distances actual_width actual_height","code":""},{"path":"/reference/convert_dist_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert distances between different units — convert_dist_units","title":"Convert distances between different units — convert_dist_units","text":"Convert distances different units","code":""},{"path":"/reference/convert_dist_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert distances between different units — convert_dist_units","text":"","code":"convert_dist_units(dist, from_unit = NULL, to_unit = \"meter\")"},{"path":"/reference/convert_dist_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert distances between different units — convert_dist_units","text":"dist Numeric units from_unit Existing unit dist, Default: NULL. dist units object, numerator used from_unit to_unit Unit convert distance , Default: 'meter'","code":""},{"path":"/reference/convert_dist_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert distances between different units — convert_dist_units","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/df_to_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data frame with coordinates to simple feature object — df_to_sf","title":"Convert data frame with coordinates to simple feature object — df_to_sf","text":"Convert data frame coordinates simple feature object","code":""},{"path":"/reference/df_to_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data frame with coordinates to simple feature object — df_to_sf","text":"","code":"df_to_sf(x, crs = 4326, coords = c(\"lon\", \"lat\"), into = NULL, sep = \",\")"},{"path":"/reference/df_to_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data frame with coordinates to simple feature object — df_to_sf","text":"x data frame lat/lon coordinates 1 combined 2 separated columns crs coordinate reference system returned sf object, Default: 4326 coords character string names longitude latitude column columns, Default: c('LONGITUD', 'LATITUDE') coords single column name longitude latitude, used names new columns coords separated . Passed tidyr::separate(). sep coords single column name longitude latitude, sep used separator coordinate values. Passed tidyr::separate().","code":""},{"path":"/reference/df_to_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data frame with coordinates to simple feature object — df_to_sf","text":"sf object","code":""},{"path":"/reference/df_to_sf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert data frame with coordinates to simple feature object — df_to_sf","text":"DETAILS","code":""},{"path":[]},{"path":"/reference/df_to_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data frame with coordinates to simple feature object — df_to_sf","text":"","code":"if (FALSE) { if (interactive()) {   nc <- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\"))   nc_df <- ggspatial::df_spatial(nc)    df_to_sf(nc_df, coords = c(\"x\", \"y\"))    nc_df$xy <- paste(nc_df$x, nc_df$y, sep = \",\")    df_to_sf(nc_df, coords = \"xy\", into = c(\"lon\", \"lat\")) } }"},{"path":"/reference/geom_sf_icon.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw SVG icons for a simple feature object — geom_sf_icon","title":"Draw SVG icons for a simple feature object — geom_sf_icon","text":"Use  ggsvg::geom_point_svg() function plot icons using centroids input simple feature object set icon location.","code":""},{"path":"/reference/geom_sf_icon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw SVG icons for a simple feature object — geom_sf_icon","text":"","code":"geom_sf_icon(   data = NULL,   iconname_col = \"icon\",   icon = NULL,   px = NULL,   source = NULL,   svg = NULL,   color = \"black\",   crs = NULL,   ... )"},{"path":"/reference/geom_sf_icon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw SVG icons for a simple feature object — geom_sf_icon","text":"data sf object. objects polygon geometry converted points using sf::st_centroid(). iconname_col column name input data use icon name. name matches multiple icons, first match map_icons used. may provide px source value select different match needed , case, icons must use px source value. Note icon column mapped ggplot2::aes(). icon Icon name. Default NULL. icon provided, iconname_col used. px Icon size pixels. See map_icons$px supported options. Optional may necessary differentiate icons duplicate names. source Icon source. See map_icons$repo supported options. Optional may required differentiate icons duplicate names. svg Optional. Custom file path URL SVG pass svg parameter  ggsvg::geom_point_svg().  icon provided, svg used. color SVG color passed  ggsvg::geom_point_svg(). default color set \"black\". crs Coordinate reference system; defaults NULL. ... Additional parameters  ggsvg::geom_point_svg().","code":""},{"path":[]},{"path":"/reference/geom_sf_icon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw SVG icons for a simple feature object — geom_sf_icon","text":"","code":"if (FALSE) { if (interactive()) {   library(sf)   library(ggplot2)   library(overedge)    nc <- st_read(system.file(\"shape/nc.shp\", package = \"sf\"))   ggplot() +     geom_sf_icon(data = nc, icon = \"point-start\", size = 10)     nc$icon <- rep(c(\"1\", \"2\", \"3\", \"4\"), nrow(nc) / 4)   ggplot() +     geom_sf_icon(data = nc, size = 5) } }"},{"path":"/reference/get_asp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get aspect ratio from string or based on specific paper and margins — get_asp","title":"Get aspect ratio from string or based on specific paper and margins — get_asp","text":"Get aspect ratio string based specific paper margins","code":""},{"path":"/reference/get_asp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get aspect ratio from string or based on specific paper and margins — get_asp","text":"","code":"get_asp(   asp = NULL,   paper = NULL,   orientation = NULL,   margin = NULL,   unit = NULL,   block_asp = FALSE )"},{"path":"/reference/get_asp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get aspect ratio from string or based on specific paper and margins — get_asp","text":"asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. paper Paper, Default: 'letter'. orientation Orientation \"portrait\", \"landscape\", \"square\", Default: 'portrait'. margin margin style supported get_margin(), numeric vector (length 1 4) passed dist parameter get_margin, margins object. unit Unit margin distance, Default: ''. block_asp TRUE, get aspect ratio map/plot area (including margins); defaults FALSE.","code":""},{"path":"/reference/get_asp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get aspect ratio from string or based on specific paper and margins — get_asp","text":"numeric aspect ratio.","code":""},{"path":"/reference/get_asp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get aspect ratio from string or based on specific paper and margins — get_asp","text":"","code":"if (FALSE) { if (interactive()) {   get_asp(\"1:2\")    get_asp(11 / 17)    get_asp(paper = \"letter\") } }"},{"path":"/reference/get_esri_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Use esri2sf to get data from an ArcGIS FeatureServer or MapServer for a\nlocation — get_esri_data","title":"Use esri2sf to get data from an ArcGIS FeatureServer or MapServer for a\nlocation — get_esri_data","text":"Wraps esri2sf esri2df function download ArcGIS FeatureServer MapServer. Supports spatial filtering bounding box based location filtering location name (location name column provided).","code":""},{"path":"/reference/get_esri_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use esri2sf to get data from an ArcGIS FeatureServer or MapServer for a\nlocation — get_esri_data","text":"","code":"get_esri_data(   location = NULL,   url,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   crs = NULL,   where = NULL,   coords_col = NULL,   locationname_col = NULL,   locationname,   ... )"},{"path":"/reference/get_esri_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use esri2sf to get data from an ArcGIS FeatureServer or MapServer for a\nlocation — get_esri_data","text":"location sf, sfc, bbox object (object convertible as_bbox(). Optional. url FeatureServer MapServer url retrieve data . Passed url parameter esri2sf::esri2sf() esri2df functions. dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. crs coordinate reference system use query; default 4326 query string passed esri2sf, Default: NULL coords_col coordinate columns, e.g. c(\"longitude\", \"latitude\") locationname_col name ArcGIS FeatureServer MapServer column location names features locationname location name ... Additional arguments passed esri2sf::esri2df esri2sf::esri2sf","code":""},{"path":[]},{"path":"/reference/get_flickr_photos.html","id":null,"dir":"Reference","previous_headings":"","what":"Use FlickrAPI to get geotagged photos for a location — get_flickr_photos","title":"Use FlickrAPI to get geotagged photos for a location — get_flickr_photos","text":"Set API key using FlickrAPI::set_flickr_api_key() pass api_key parameter. Currently relies fork package https://github.com/elipousson/FlickrAPI","code":""},{"path":"/reference/get_flickr_photos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use FlickrAPI to get geotagged photos for a location — get_flickr_photos","text":"","code":"get_flickr_photos(   api_key = NULL,   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   user_id = NULL,   tags = NULL,   license_id = \"cc0\",   sort = \"date-posted\",   desc = TRUE,   img_size = \"s\",   extras = c(\"description\", \"date_taken\", \"tags\", \"geo\"),   per_page = 100,   page = 1,   orientation = NULL,   geometry = TRUE,   crs = 4326 )"},{"path":"/reference/get_flickr_photos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use FlickrAPI to get geotagged photos for a location — get_flickr_photos","text":"api_key Flickr API key. api_key `NULL`, function uses [getFlickrAPIKey()] use environment variable \"FLICKR_API_KEY\" key. location sf bbox object use creating bounding box getting photos Flickr. dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. user_id NSID user photo search. parameter passed everybody's public photos searched. tags vector tags wish search . license_id license id photos (possible values see Flickr API method flickr.photos.licenses.getInfo). license_id can integer 0 10 corresponding license code including \"c\" (Rights Reserved), \"-bc-sa\" (Attribution-NonCommercial-ShareAlike), \"-nc\" (Attribution-NonCommercial), \"-nc-nd\" (Attribution-NonCommercial-NoDerivs), \"\" (Attribution), \"-sa\" (Attribution-ShareAlike), \"-nd\" (Attribution-NoDerivs), \"nkc\" (known copyright restrictions), \"pd-us\" (United States Government Work), \"cc0\" (Public Domain Dedication), \"pd\" (Public Domain Mark). sort Supported options include \"date-posted\",\"date-taken\", \"interestingness\", \"relevance\" desc TRUE return images descending sort order, FALSE, return ascending sort order. Ignored sort set \"relevance\". img_size Defaults \"s\" (small). Options ranging smallest largest include \"sq\", \"t\", \"s\", \"q\", \"m\", \"n\", \"z\", \"c\", \"l\", \"o\" extras Defaults \"description\", \"date_taken\", \"tags\", \"geo\". per_page Photos return per page search, Default: 100. Maximum 250 location provided 500 otherwise. page page greater length 1, function uses purrr::map_dfr() return results pages may cause issues API access large page range provided. Default: 1 orientation img_size length 1, photos filtered one supported orientations (\"portrait\", \"landscape\", \"square\"); defaults NULL. geometry TRUE, include \"geo\" extras convert photos data frame sf object. crs Coordinate reference system sf object return geometry TRUE.","code":""},{"path":"/reference/get_flickr_photos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use FlickrAPI to get geotagged photos for a location — get_flickr_photos","text":"data frame photo information sf object geometry based latitude longitude geocoded photos.","code":""},{"path":[]},{"path":"/reference/get_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Get location of specified type — get_location","title":"Get location of specified type — get_location","text":"Filter name id use spatial filter based sf object geocoded street address. Optionally can use index list match type named list URLs sf objects.","code":""},{"path":"/reference/get_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get location of specified type — get_location","text":"","code":"get_location(   type,   name = NULL,   id = NULL,   location = NULL,   label = NULL,   name_col = \"name\",   id_col = \"id\",   index = NULL,   union = FALSE,   crs = NULL,   ... )"},{"path":"/reference/get_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get location of specified type — get_location","text":"type Type location return. Type can sf object, e.g. data frame multiple neighborhoods character string can passed get_location_data. index provided, character can also character string match name list. name Location name return. id Location id return. id coerced character numeric match class id_col type. location address, bounding box (bbox), simple feature (sf) object passed st_filter. valid address addresses geocoded geo), converted simple feature object, used spatial filter. bbox objects converted using sf_bbox_to_sf(). Multiple addresses supported. label Label optionally added \"label\" column; must length 1 match number rows returned based parameters. union = TRUE, using label recommended. Default: NULL name_col Column name type name values, Default: 'name' Required name provided. id_col Column name type id values, Default: 'id'. Required id provided. index Optional list used match type data, Default: NULL union TRUE, location geometry unioned st_union names combined single value. Default: FALSE. crs Coordinate reference system return; defaults NULL returns data using coordinate reference system provided type location. ... Additional parameters passed get_location_data type character index NULL.","code":""},{"path":"/reference/get_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get location of specified type — get_location","text":"simple feature object data provided type.","code":""},{"path":"/reference/get_location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get location of specified type — get_location","text":"","code":"if (FALSE) { if (interactive()) {   nc <- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\"))   # Check if type as sf object with name/id lookup works   get_location(type = nc, name = \"Warren\", name_col = \"NAME\")   get_location(type = nc, id = 37185, id_col = \"FIPSNO\")    # Type also supports a range of other formats including    # File path   get_location(     type = system.file(\"shape/nc.shp\", package = \"sf\"),     name = \"Hertford\",     name_col = \"NAME\"   )    # Index name (if a named list of datasets, urls, or paths is passed to index)   get_location(     type = \"smaller\",     name = \"Hertford\",     name_col = \"NAME\",     index = list(       \"smaller\" = dplyr::filter(nc, AREA <= 0.10),       \"larger\" = dplyr::filter(nc, AREA > 0.15)     )   )    # url may require passing extra parameters to `get_location_data()`   # In this example, no location information is passed to get_location() so it warns before returning all types   get_location(     type = \"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Parks/FeatureServer/0\",     locationname_col = \"NAME\",     locationname = \"Chesapeake and Ohio Canal National Historic Park\"   ) } }"},{"path":"/reference/get_location_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data for a location — get_location_data","title":"Get data for a location — get_location_data","text":"Returns data selected area areas optional buffer. crop trim FALSE, function uses st_intersects filter data include full geometry anything overlaps area bbox (area provided).","code":""},{"path":"/reference/get_location_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data for a location — get_location_data","text":"","code":"get_location_data(   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   data = NULL,   url = NULL,   path = NULL,   package = NULL,   filetype,   fn = NULL,   crop = TRUE,   trim = FALSE,   from_crs = NULL,   crs = NULL,   ... )"},{"path":"/reference/get_location_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data for a location — get_location_data","text":"location sf object. multiple areas provided, unioned single sf object using st_union dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. data sf object including data area. data may also url file path. data can name data object , package filetype provided, cached external file. url url FeatureServer MapServer layer pass get_area_esri_data. url can provided data parameter path path spatial data file supported read_sf package package name. filetype file type supported read_sf. file type must provided extdata cached data. fn Function apply data returning. crop TRUE, data cropped location bounding box st_crop adjusted dist, diag_ratio, asp parameters provided. Default TRUE. trim TRUE, data trimmed area st_intersection. option supported adjusted areas use dist, diag_ratio, asp parameters. Default FALSE. from_crs coordinate reference system data. crs coordinate reference system return ... additional parameters passed read_sf_path, read_sf_url, read_sf_package","code":""},{"path":"/reference/get_margin.html","id":null,"dir":"Reference","previous_headings":"","what":"Get margins for a ggplot2 plot or map based on style or distance — get_margin","title":"Get margins for a ggplot2 plot or map based on style or distance — get_margin","text":"function works combination get_paper() function make easier position map page saving file. primarily useful using map plot created ggplot2 part print document format composed outside R using page layout application Adobe InDesign.","code":""},{"path":"/reference/get_margin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get margins for a ggplot2 plot or map based on style or distance — get_margin","text":"","code":"get_margin(   margin = NULL,   paper = NULL,   orientation = NULL,   dist = NULL,   unit = \"in\",   plot_width = NULL,   header = 0,   footer = 0 )"},{"path":"/reference/get_margin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get margins for a ggplot2 plot or map based on style or distance — get_margin","text":"margin Margin style (options include \"extrawide\", \"wide\", \"standard\", \"narrow\", \"none\"), Additional \"auto\" option generate margin based line length planned yet implemented. Default: NULL (equivalent \"none\"). paper Paper, Default: 'letter'. orientation Orientation \"portrait\", \"landscape\", \"square\", Default: 'portrait'. dist Margin distance (single value used sides), Default: NULL unit Unit margin distance, Default: ''. plot_width Plot map width units. paper plot_width provided, margins half distance two evenly distributed. tested may work page sizes/orientations. header Header height units; defaults 0. footer Footer height units; defaults 0.","code":""},{"path":"/reference/get_margin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get margins for a ggplot2 plot or map based on style or distance — get_margin","text":"margin element intended use element_rect plot.background theme element.","code":""},{"path":[]},{"path":"/reference/get_margin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get margins for a ggplot2 plot or map based on style or distance — get_margin","text":"","code":"if (FALSE) { if (interactive()) {   get_margin(\"standard\")    get_margin(\"none\")    get_margin(dist = 25, unit = \"mm\")    get_margin(paper = \"letter\", plot_width = 5.5) } }"},{"path":"/reference/get_open_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data from an open data portal (Socrata) for a location — get_open_data","title":"Get data from an open data portal (Socrata) for a location — get_open_data","text":"get_socrata_data get_open_data source_type set \"socrata\" (currently supported option). get_open_data can return selected dataset using Socrata Query Language (SoQL) parameters tibble sf object. Details SoQL queries found Socrata API documentation https://dev.socrata.com/docs/queries/.","code":""},{"path":"/reference/get_open_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data from an open data portal (Socrata) for a location — get_open_data","text":"","code":"get_open_data(   data = NULL,   source_url = NULL,   source_type = \"socrata\",   select = NULL,   where = NULL,   query = NULL,   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   locationname_col = NULL,   locationname = NULL,   coords = c(\"longitude\", \"latitude\"),   geometry = FALSE,   key = NULL,   from_crs = 4326,   crs = NULL )  get_socrata_data(   data = NULL,   source_url = NULL,   select = NULL,   where = NULL,   query = NULL,   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   locationname_col = NULL,   locationname = NULL,   coords = c(\"longitude\", \"latitude\"),   geometry = FALSE,   key = NULL,   from_crs = 4326,   crs = NULL )"},{"path":"/reference/get_open_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data from an open data portal (Socrata) for a location — get_open_data","text":"data data set identifier (known resource Socrata). data set \"list\" valid source_url provided, function returns list available resources. source_url data source url. Socrata, base url open data portal. source_type Data source type; defaults \"socrata\" currently supported option. select SODA $select parameter. Set columns returned, similar SELECT SQL. https://dev.socrata.com/docs/queries/select.html SODA $parameter. Filters rows returned, similar . https://dev.socrata.com/docs/queries/.html query SODA $query parameter. full SoQL query string, one parameter. https://dev.socrata.com/docs/queries/query.html location sf bbox obkect dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. locationname_col name column Socrata data location names (e.g. County) locationname location name return coords Name(s) column coordinate data, Default: c(\"longitude\", \"latitude\") geometry TRUE latitude/longitude columns available, return sf object. Default FALSE. key API Key; required from_crs Coordinate reference system source data. crs Coordinate reference system return.","code":""},{"path":"/reference/get_open_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data from an open data portal (Socrata) for a location — get_open_data","text":"","code":"if (FALSE) { ## Get Q2 2020 vehicle crash data for Cecil County, Maryland get_open_data(   source_url = \"https://opendata.maryland.gov\",   data = \"65du-s3qu\",   where = \"(year = '2020') AND (quarter = 'Q2')\",   locationname_col = \"county_desc\",   locationname = \"Cecil\",   key = Sys.getenv(\"MARYLAND_OPEN_DATA_API_KEY\") ) }"},{"path":"/reference/get_osm_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Use osmdata to get Open Street Map data for a location — get_osm_data","title":"Use osmdata to get Open Street Map data for a location — get_osm_data","text":"Wraps osmdata functions query OSM data adjusted bounding box enclosing ways/relations around center location. timeout nodes_only parameters fully supported currently.","code":""},{"path":"/reference/get_osm_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use osmdata to get Open Street Map data for a location — get_osm_data","text":"","code":"get_osm_data(   location = NULL,   key,   value = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   crs = NULL,   geometry = NULL,   osmdata = FALSE,   enclosing = NULL,   nodes_only = FALSE,   timeout = 120 )  get_osm_boundaries(location, level = NULL, enclosing = \"way\")"},{"path":"/reference/get_osm_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use osmdata to get Open Street Map data for a location — get_osm_data","text":"location sf, sfc, bbox object. key Feature key overpass API query. value Value feature key; can negated initial exclamation mark, value = \"!\", can also vector, value = c(\"\", \"\"). value = \"\" key = \"building\" values passed osmdata package preset list extracted osmdata::available_tags(). dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. crs Coordinate reference system output data; NULL, data remains Open Street Map coordinate reference system 4326. Default: NULL. geometry Geometry type output (\"polygons\", \"points\", \"lines\", \"multilines\", \"multipolygons\"); multiple geometry types needed set osmdata TRUE. Default NULL. osmdata TRUE return osmdata class object includes overpass API call, metadata including timestamp version numbers, available geometry types; defaults FALSE. enclosing enclosing \"relation\" \"way\", use osmdata::opq_enclosing() function query OSM data (instead osmdata::add_osm_feature(). Defaults NULL. using enclosing, dist, diag_ratio, asp, unit parameters ignored center provided location used query. geometry set automatically based enclosing \"relation\" using \"multipolygon\" \"way\" using \"polygon\" geometry. nodes_only TRUE, query OSM nodes . OSM structures place = \"city\" highway = \"traffic_signals\" represented nodes . Queries built default return nodes, ways, relation, can inefficient node-queries. Setting value TRUE cases makes queries efficient, data returned osm_points list item. timeout may necessary increase value large queries, server may time data delivered. level administrative level (admin_level) boundary return; defaults NULL. See https://wiki.openstreetmap.org/wiki/Key:admin_level information. used get_osm_boundaries.","code":""},{"path":"/reference/get_osm_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use osmdata to get Open Street Map data for a location — get_osm_data","text":"simple feature object features using selected geometry type osmdata object features geometry types.","code":""},{"path":"/reference/get_paper.html","id":null,"dir":"Reference","previous_headings":"","what":"Get standard paper and image sizes — get_paper","title":"Get standard paper and image sizes — get_paper","text":"Use \"paper\" parameter (matching name paper_sizes), standard (optionally including series size) parameter, width, height units. May return multiple paper sizes depending parameters.","code":""},{"path":"/reference/get_paper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get standard paper and image sizes — get_paper","text":"","code":"get_paper(   paper = \"letter\",   orientation = \"portrait\",   standard = NULL,   series = NULL,   size = NULL,   width = NULL,   height = NULL,   units = NULL )"},{"path":"/reference/get_paper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get standard paper and image sizes — get_paper","text":"paper Paper, Default: 'letter'. orientation Orientation \"portrait\", \"landscape\", \"square\", Default: 'portrait'. standard Size standard, \"ANSI\", \"ISO\", \"British Imperial\", \"JIS\", \"USPS\", \"Facebook\", \"Instagram\", \"Twitter\". series Size series (e.g. ), Default: NULL size Size number (used \"ISO\" \"JIS\" series). Standard, series, size may required return single paper using parameters. width Width units, Default: NULL. height Height units, Default: NULL. units Paper size units, either \"\", \"mm\", \"px\"; defaults NULL (using \"\" width height provided).","code":""},{"path":"/reference/get_paper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get standard paper and image sizes — get_paper","text":"Data frame one paper/image sizes.","code":""},{"path":"/reference/get_paper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get standard paper and image sizes — get_paper","text":"","code":"if (FALSE) { if (interactive()) {   get_paper(\"letter\")    get_paper(paper = NULL, standard = \"ISO\", series = \"A\", size = 4)    get_paper(width = 11, height = 17) } }"},{"path":"/reference/get_socrata_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Use RSocrata to get data from a Socrata open data portal for a location — get_socrata_data","title":"Use RSocrata to get data from a Socrata open data portal for a location — get_socrata_data","text":"Get selected dataset using Socrata Query Language (SoQL) parameters tibble sf object. Details SoQL queries found Socrata API documentation https://dev.socrata.com/docs/queries/","code":""},{"path":"/reference/get_socrata_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use RSocrata to get data from a Socrata open data portal for a location — get_socrata_data","text":"","code":"get_socrata_data(   resource = NULL,   select = NULL,   where = NULL,   query = NULL,   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   locationname_col = NULL,   locationname = NULL,   coords = c(\"longitude\", \"latitude\"),   geometry = FALSE,   site_url = NULL,   key = NULL,   from_crs = 4326,   crs = NULL )"},{"path":"/reference/get_socrata_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use RSocrata to get data from a Socrata open data portal for a location — get_socrata_data","text":"resource Socrata dataset identifier. resource set \"list\" valid site_url provided, function returns list available resources. select SODA $select parameter. Set columns returned, similar SELECT SQL. https://dev.socrata.com/docs/queries/select.html SODA $parameter. Filters rows returned, similar . https://dev.socrata.com/docs/queries/.html query SODA $query parameter. full SoQL query string, one parameter. https://dev.socrata.com/docs/queries/query.html dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Units passed units::set_units() converted units matching GDAL; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. locationname_col name column Socrata resource location names (e.g. County) locationname location name return coords Name(s) column coordinate data, Default: c(\"longitude\", \"latitude\") geometry TRUE latitude/longitude columns available, return sf object. Default FALSE. site_url Socrata site url. crs Coordinate reference system return. trim area provided, trim data area boundary rather bounding box, Default: FALSE. area must provided TRUE.","code":""},{"path":"/reference/get_socrata_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use RSocrata to get data from a Socrata open data portal for a location — get_socrata_data","text":"","code":"if (FALSE) { ## Get Q2 2020 vehicle crash data for Cecil County, Maryland get_socrata_data(   site_url = \"https://opendata.maryland.gov\",   resource = \"65du-s3qu\",   where = \"(year = '2020') AND (quarter = 'Q2')\",   locationname_col = \"county_desc\",   locationname = \"Cecil\" ) }"},{"path":"/reference/get_standard_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Get standard scales and convert to scale distances — get_standard_scale","title":"Get standard scales and convert to scale distances — get_standard_scale","text":"Get standard scales convert scale distances","code":""},{"path":"/reference/get_standard_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get standard scales and convert to scale distances — get_standard_scale","text":"","code":"get_standard_scale(scale = NULL, standard = NULL, series = NULL)"},{"path":"/reference/get_standard_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get standard scales and convert to scale distances — get_standard_scale","text":"scale Scale name standard USGS, Engineering, Architectural series Map series","code":""},{"path":"/reference/get_us_counties.html","id":null,"dir":"Reference","previous_headings":"","what":"Use USAboundariesData to get current or past U.S. county boundaries for a location — get_us_counties","title":"Use USAboundariesData to get current or past U.S. county boundaries for a location — get_us_counties","text":"Wraps USAboundariesData us counties data effectively make version USAboundaries::us_counties() works adjusted location spatial filter support support map_date parameter historical county boundary data.","code":""},{"path":"/reference/get_us_counties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use USAboundariesData to get current or past U.S. county boundaries for a location — get_us_counties","text":"","code":"get_us_counties(   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   historical = FALSE,   crs = NULL,   crop = FALSE,   trim = FALSE,   detailed = FALSE )"},{"path":"/reference/get_us_counties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use USAboundariesData to get current or past U.S. county boundaries for a location — get_us_counties","text":"location sf object. multiple areas provided, unioned single sf object using st_union dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. historical TRUE, return historical data (use USAboundaries::us_counties() returning geometry specific map_date required). crs coordinate reference system return crop TRUE, data cropped location bounding box st_crop adjusted dist, diag_ratio, asp parameters provided. Default TRUE. trim TRUE, data trimmed area st_intersection. option supported adjusted areas use dist, diag_ratio, asp parameters. Default FALSE. detailed TRUE, download \"hires\" version county boundaries. (currently supported).","code":""},{"path":"/reference/get_us_counties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use USAboundariesData to get current or past U.S. county boundaries for a location — get_us_counties","text":"sf object county boundaries (contemporary historical)","code":""},{"path":[]},{"path":"/reference/get_wiki_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Wikipedia articles for a location — get_wiki_data","title":"Get Wikipedia articles for a location — get_wiki_data","text":"Use Wikipedia API geosearch API get Wikipedia articles location. See https://www.mediawiki.org/wiki/Extension:GeoData information. returns Wikipedia articles coordinates.","code":""},{"path":"/reference/get_wiki_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Wikipedia articles for a location — get_wiki_data","text":"","code":"get_wiki_data(   location,   dist = 100,   diag_ratio = NULL,   asp = NULL,   radius = FALSE,   primary = TRUE,   details = c(\"type\", \"name\", \"region\"),   lang = \"en\",   limit = 50,   geometry = TRUE )"},{"path":"/reference/get_wiki_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Wikipedia articles for a location — get_wiki_data","text":"location sf object. multiple areas provided, unioned single sf object using st_union dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. radius TRUE, use dist buffer around center location. primary TRUE, search primary coordinates. Set primary \"\" \"secondary\" search coordinate types. details Additional detailed return results. Options include \"type\", \"name\", \"country\", \"region\" lang Language search Wikipedia; defaults \"en\". limit Number pages return (max 500); deafaults 50 geometry TRUE, return sf object. FALSE, return dataframe. Defaults FALSE.","code":""},{"path":"/reference/ggsave_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a ggplot and update file EXIF metadata — ggsave_ext","title":"Save a ggplot and update file EXIF metadata — ggsave_ext","text":"Save plot map update EXIF metadata title, author, create data. ggsave_ext() also supports creating file name based sentence case name spaces (e.g. \"Baltimore city map\") appending label (e.g. \"baltcity\") prefix output file name.","code":""},{"path":"/reference/ggsave_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a ggplot and update file EXIF metadata — ggsave_ext","text":"","code":"ggsave_ext(   plot = ggplot2::last_plot(),   name = NULL,   label = NULL,   prefix = NULL,   postfix = NULL,   filename = NULL,   device = \"png\",   filetype = NULL,   path = NULL,   paper = NULL,   orientation = \"portrait\",   width,   height,   units = \"in\",   scale = 1,   dpi = 300,   bgcolor = NULL,   exif = FALSE,   title = NULL,   author = NULL,   args = NULL,   ... )"},{"path":"/reference/ggsave_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a ggplot and update file EXIF metadata — ggsave_ext","text":"plot Plot save, defaults last plot displayed. name Plot name, used create filename (filename NULL) using make_filename() label Label combine name converted snake case janitor::make_clean_names(). label designed identify area shared characteristics across multiple data files, maps, plots. prefix File name prefix. \"date\" adds date prefix, \"time\" adds date/time prefix; defaults NULL. postfix File name postfix; defaults NULL. filename File name; file name NULL, name file type required. device Device use. Can either device function (e.g. png), one \"eps\", \"ps\", \"tex\" (pictex), \"pdf\", \"jpeg\", \"tiff\", \"png\", \"bmp\", \"svg\" \"wmf\" (windows ). filetype File type extension. path Path file data directory. paper Paper matching name paper_sizes (e.g. \"letter\"). case sensitive. orientation Page orientation (\"portrait\", \"landscape\", \"square\"). width Plot size units (\"\", \"cm\", \"mm\", \"px\"). supplied, uses size current graphics device. height Plot size units (\"\", \"cm\", \"mm\", \"px\"). supplied, uses size current graphics device. units Plot size units (\"\", \"cm\", \"mm\", \"px\"). supplied, uses size current graphics device. scale Multiplicative scaling factor. dpi Plot resolution. Also accepts string input: \"retina\" (320), \"print\" (300), \"screen\" (72). Applies raster output types. bgcolor Background color optionally override plot.background theme element. exif TRUE, EXIF metadata exported file updated exifr package; defaults FALSE. title Title plot map, added EXIF metadata, Default: NULL. author Author plot map, added EXIF metadata, Default: NULL. args Alternate arguments passed exiftool_call. args NULL, title author ignored; defaults NULL. ... Additional parameters passed ggsave","code":""},{"path":[]},{"path":"/reference/ggsave_ext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a ggplot and update file EXIF metadata — ggsave_ext","text":"","code":"if (FALSE) { if (interactive()) {   neighborhoods <-     get_location(       type = \"neighborhoods\",       package = \"mapbaltimore\"     )    ggplot2::ggplot() +     ggplot2::geom_sf(data = neighborhoods)    ggsave_ext(     name = \"neighborhoods\",     label = \"Baltimore City\",     author = \"Thomas H. Poppleton\",     device = \"pdf\",     paper = \"letter\"   ) } }"},{"path":"/reference/labs_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Add labels to a ggplot2 location map — labs_ext","title":"Add labels to a ggplot2 location map — labs_ext","text":"helper function converts strings glue strings title, subtitle, caption. progress.","code":""},{"path":"/reference/labs_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add labels to a ggplot2 location map — labs_ext","text":"","code":"labs_ext(   title = ggplot2::waiver(),   subtitle = ggplot2::waiver(),   caption = ggplot2::waiver(),   tag = ggplot2::waiver(),   alt = ggplot2::waiver(),   alt_insight = ggplot2::waiver(),   location = NULL,   locationname_col = NULL,   source = NULL )"},{"path":"/reference/labs_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add labels to a ggplot2 location map — labs_ext","text":"title text title. subtitle text subtitle plot displayed title. caption text caption displayed bottom-right plot default. tag text tag label displayed top-left plot default. alt Text used generation alt-text plot. See get_alt_text examples. alt_insight Text used generation alt-text plot. See get_alt_text examples. location sf bbox object character string locationname_col Column name holding name identifier distinct places within simple feature collection provided location. supported bbox objects. source Data source(s). yet used supported function.","code":""},{"path":"/reference/layer_location_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer location data into a ggplot2 map — layer_location_data","title":"Layer location data into a ggplot2 map — layer_location_data","text":"Helper function make ggplot2 layer data returned get_location_data. text geoms, required aesthetic mapping set based name_col can values passed mapping take precedence.","code":""},{"path":"/reference/layer_location_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer location data into a ggplot2 map — layer_location_data","text":"","code":"layer_location_data(   mapping = NULL,   data = NULL,   label,   geom = \"sf\",   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = \"meter\",   asp = NULL,   package = NULL,   filetype = NULL,   fn = NULL,   crop = TRUE,   trim = FALSE,   from_crs = NULL,   crs = NULL,   label_col = \"name\",   ... )"},{"path":"/reference/layer_location_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer location data into a ggplot2 map — layer_location_data","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data sf object including data area. data may also url file path. data can name data object , package filetype provided, cached external file. label label area (appended data prefix data string) geom ggplot2 geom use, Default: 'sf'. Options include \"sf\" (geom_sf), \"icon\" (geom_sf_icon), \"text\" (geom_sf_text), \"label\" (geom_sf_label), \"textsf\", \"labelsf\", \"text_repel\", \"label_repel\". location sf object. multiple areas provided, unioned single sf object using st_union dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit unit adjust location dist diag_ratio; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. package package name. filetype file type supported read_sf. file type must provided extdata cached data. fn Function apply data returning. crop TRUE, data cropped location bounding box st_crop adjusted dist, diag_ratio, asp parameters provided. Default TRUE. trim TRUE, data trimmed area st_intersection. option supported adjusted areas use dist, diag_ratio, asp parameters. Default FALSE. from_crs coordinate reference system data. crs coordinate reference system return label_col Column name id column text labels pass text geom. ... Parameters passed selected geom","code":""},{"path":"/reference/layer_location_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer location data into a ggplot2 map — layer_location_data","text":"ggplot2 geom","code":""},{"path":[]},{"path":"/reference/layer_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a mask layer based on a simple feature object — layer_mask","title":"Create a mask layer based on a simple feature object — layer_mask","text":"Returns mask area areas simple feature object.","code":""},{"path":"/reference/layer_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a mask layer based on a simple feature object — layer_mask","text":"","code":"layer_mask(   data = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   crs = NULL,   fill = \"white\",   color = NA,   alpha = 0.5,   mask = NULL,   neatline = FALSE,   ... )"},{"path":"/reference/layer_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a mask layer based on a simple feature object — layer_mask","text":"data sf, sfc, bbox object. dist, diag_ratio, /asp provided, data adjusted set boundaries mask. data provided, mask required. dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. crs Coordinate reference system bounding box return fill mask fill color; defaults \"white\" color mask edge color; defaults NA alpha mask alpha/transparency; defaults 0.5 mask sf bbox object define edge mask. diag_ratio, dist, asp parameters ignored mask provided. defaults NULL neatline TRUE, add layer_neatline expand = TRUE; defaults FALSE. ... Additional parameters pass geom_sf","code":""},{"path":"/reference/layer_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a mask layer based on a simple feature object — layer_mask","text":"geom_sf function.","code":""},{"path":[]},{"path":"/reference/layer_neatline.html","id":null,"dir":"Reference","previous_headings":"","what":"Set map limits to sf or bbox object with optional adjustments and panel\nborder — layer_neatline","title":"Set map limits to sf or bbox object with optional adjustments and panel\nborder — layer_neatline","text":"Set limits map bounding box x using coord_sf. Optionally, adjust x size applying buffer /adjust aspect ratio limiting bounding box match set aspect ratio.","code":""},{"path":"/reference/layer_neatline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set map limits to sf or bbox object with optional adjustments and panel\nborder — layer_neatline","text":"","code":"layer_neatline(   data = NULL,   dist = NULL,   diag_ratio = NULL,   unit = \"meter\",   asp = NULL,   crs = NULL,   color = \"black\",   bgcolor = \"white\",   size = 1,   linetype = \"solid\",   expand = FALSE,   hide_grid = TRUE,   label_axes = \"----\",   ... )"},{"path":"/reference/layer_neatline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set map limits to sf or bbox object with optional adjustments and panel\nborder — layer_neatline","text":"data sf bbox class object dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Buffer units; defaults meter. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. crs Coordinate reference system use coord_sf. color Color panel border, Default: 'black' bgcolor Fill color panel background; defaults \"white\". \"none\", panel background set ggplot2::element_blank() size Size panel border, Default: 1 linetype Line type panel border, Default: 'solid' expand Default FALSE. TRUE, function adds scale_y_continuous scale_x_continuous expand map extent provided parameters. hide_grid TRUE, hide major grid lines. Default: TRUE label_axes description axes label passed coord_sf; defaults '----' hides axes labels. ... Additional parameters pass coord_sf.","code":""},{"path":"/reference/layer_neatline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set map limits to sf or bbox object with optional adjustments and panel\nborder — layer_neatline","text":"coord_sf function xlim ylim parameters","code":""},{"path":[]},{"path":"/reference/layer_neatline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set map limits to sf or bbox object with optional adjustments and panel\nborder — layer_neatline","text":"","code":"if (FALSE) { if (interactive()) {   library(ggplot2)    nc <- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\"))   ggplot() +     geom_sf(data = nc) +     layer_neatline(data = nc[1, ], asp = 1, color = \"red\") } }"},{"path":"/reference/layer_scaled.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 layer scaled to a paper and orientation for a location — layer_scaled","title":"Create a ggplot2 layer scaled to a paper and orientation for a location — layer_scaled","text":"Uses layer_neatline, standard_scales, convert_dist_scale.","code":""},{"path":"/reference/layer_scaled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 layer scaled to a paper and orientation for a location — layer_scaled","text":"","code":"layer_scaled(   data = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   crs = NULL,   scale = NULL,   paper = NULL,   orientation = NULL,   clip = FALSE )"},{"path":"/reference/layer_scaled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 layer scaled to a paper and orientation for a location — layer_scaled","text":"data sf bbox class object dist distance convert. paper provided, paper width height used dist. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. crs Coordinate reference system bounding box return scale Scale name paper Paper, Default: 'letter'. orientation Orientation \"portrait\", \"landscape\", \"square\", Default: 'portrait'. clip TRUE, create scaled layer even data cut ; defaults FALSE.","code":""},{"path":[]},{"path":"/reference/layer_show_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer a location border into a ggplot2 map — layer_show_location","title":"Layer a location border into a ggplot2 map — layer_show_location","text":"Helper function make ggplot2 layer data returned get_location. See birdseyeview::layer_show_location documentation.","code":""},{"path":"/reference/layer_show_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer a location border into a ggplot2 map — layer_show_location","text":"","code":"layer_show_location(   mapping = ggplot2::aes(),   data = NULL,   type = NULL,   name = NULL,   id = NULL,   location = NULL,   label_geom = NULL,   name_col = \"name\",   id_col = \"id\",   index = NULL,   label = NULL,   union = FALSE,   smooth = TRUE,   crs = NULL,   color = \"black\",   linetype = \"dashed\",   size = 2,   fill = NA,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   mask = FALSE,   neatline = FALSE,   ... )"},{"path":"/reference/layer_show_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer a location border into a ggplot2 map — layer_show_location","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data sf object including data area. data may also url file path. data can name data object , package filetype provided, cached external file. type Type location return. Type can sf object, e.g. data frame multiple neighborhoods character string can passed get_location_data. index provided, character can also character string match name list. name Location name return. id Location id return. id coerced character numeric match class id_col type. location address, bounding box (bbox), simple feature (sf) object passed st_filter. valid address addresses geocoded geo), converted simple feature object, used spatial filter. bbox objects converted using sf_bbox_to_sf(). Multiple addresses supported. name_col Column name type name values, Default: 'name' Required name provided. id_col Column name type id values, Default: 'id'. Required id provided. index Optional list used match type data, Default: NULL label Label optionally added \"label\" column; must length 1 match number rows returned based parameters. union = TRUE, using label recommended. Default: NULL union TRUE, location geometry unioned st_union names combined single value. Default: FALSE. crs coordinate reference system return color mask edge color; defaults NA fill mask fill color; defaults \"white\" dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit unit adjust location dist diag_ratio; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. mask sf bbox object define edge mask. diag_ratio, dist, asp parameters ignored mask provided. defaults NULL neatline TRUE, add layer_neatline expand = TRUE; defaults FALSE. ... Additional parameters passed get_location_data type character index NULL.","code":""},{"path":"/reference/layer_show_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer a location border into a ggplot2 map — layer_show_location","text":"list ggplot2 geoms","code":""},{"path":[]},{"path":"/reference/make_filename.html","id":null,"dir":"Reference","previous_headings":"","what":"Make file name and path with optional label, prefix, or postfix — make_filename","title":"Make file name and path with optional label, prefix, or postfix — make_filename","text":"helper function create consistent file names plots created ggsave_ext() data files exported write_sf_ext().","code":""},{"path":"/reference/make_filename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make file name and path with optional label, prefix, or postfix — make_filename","text":"","code":"make_filename(   name = NULL,   label = NULL,   filetype = NULL,   filename = NULL,   path = NULL,   prefix = NULL,   postfix = NULL )"},{"path":"/reference/make_filename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make file name and path with optional label, prefix, or postfix — make_filename","text":"name Name make file name converted snake case janitor::make_clean_names(), e.g. \"Residential zoning map\" becomes \"residential_zoning_map\" label Label combine name converted snake case janitor::make_clean_names(). label designed identify area shared characteristics across multiple data files, maps, plots. filetype File type extension. filename File name; file name NULL, name file type required. path Path file data directory. prefix File name prefix. \"date\" adds date prefix, \"time\" adds date/time prefix; defaults NULL. postfix File name postfix; defaults NULL.","code":""},{"path":[]},{"path":"/reference/map_icons.html","id":null,"dir":"Reference","previous_headings":"","what":"Map icons — map_icons","title":"Map icons — map_icons","text":"index map icons four sources: mapbox/maki ideditor/temaki manifestinteractive/weather-underground-icons openstreetmap/map-icons openstreetmap/lane-icons Esri/calcite-point-symbols icon sources use open licenses. Maki, Temaki, OSM lane icons use CC0 license. Weather Underground Icons use MIT license. OSM map icons use unspecified PD style license. Calcite icons available Esri Master License Agreement (MLA).","code":""},{"path":"/reference/map_icons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map icons — map_icons","text":"","code":"map_icons"},{"path":"/reference/map_icons.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Map icons — map_icons","text":"data frame 1855 rows 5 variables: name Icon name url Icon URL GitHub repo style Icon style (Weather Underground icons ) size Icon width/height (pixels) repo GitHub repository icon collection","code":""},{"path":"/reference/osm_building_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenStreetMap building tags — osm_building_tags","title":"OpenStreetMap building tags — osm_building_tags","text":"Used get_osm_data() key = \"building\".","code":""},{"path":"/reference/osm_building_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenStreetMap building tags — osm_building_tags","text":"","code":"osm_building_tags"},{"path":"/reference/osm_building_tags.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OpenStreetMap building tags — osm_building_tags","text":"character vector length 84","code":""},{"path":"/reference/osm_building_tags.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenStreetMap building tags — osm_building_tags","text":"information building key https://wiki.openstreetmap.org/wiki/Key:building","code":""},{"path":"/reference/overedge-package.html","id":null,"dir":"Reference","previous_headings":"","what":"overedge: Assorted Functions For Easier Map Making — overedge-package","title":"overedge: Assorted Functions For Easier Map Making — overedge-package","text":"Assorted functions support data wrangling visualization map making focus ggplot2 sf packages.","code":""},{"path":"/reference/overedge-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"overedge: Assorted Functions For Easier Map Making — overedge-package","text":"Maintainer: Eli Pousson eli.pousson@gmail.com (ORCID)","code":""},{"path":"/reference/paper_sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard paper and image sizes — paper_sizes","title":"Standard paper and image sizes — paper_sizes","text":"Reference table standard paper, postcard, photo print, social media image sizes, get_paper() ggsave_ext() functions. Derived visioguy/PaperSizes repo, Adobe UK guide photo sizes sources.","code":""},{"path":"/reference/paper_sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard paper and image sizes — paper_sizes","text":"","code":"paper_sizes"},{"path":"/reference/paper_sizes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Standard paper and image sizes — paper_sizes","text":"data frame 85 rows 9 variables: name Name paper series Series standard Standard size Size series units Units (\"\", \"mm\", \"px\") dimensions width Width units height Height units asp_portrait Aspect ratio (portrait) asp_landscape Aspect ratio (landscape) asp_text Aspect ratio (\"width:height\") type Type (paper, postcard, print, social)","code":""},{"path":"/reference/read_sf_exif.html","id":null,"dir":"Reference","previous_headings":"","what":"Read EXIF location data from images to a simple feature object — read_sf_exif","title":"Read EXIF location data from images to a simple feature object — read_sf_exif","text":"Read EXIF data folder images.","code":""},{"path":"/reference/read_sf_exif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read EXIF location data from images to a simple feature object — read_sf_exif","text":"","code":"read_sf_exif(path = NULL, bbox = NULL, filetype = \"jpg\", sort = \"lon\", ...)"},{"path":"/reference/read_sf_exif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read EXIF location data from images to a simple feature object — read_sf_exif","text":"path path folder one files EXIF location metadata bbox bounding box crop sf file (excluding images location data outside bounding box). bbox provided returned data match crs bbox. filetype file extension file type; defaults \"jpg\" sort variable sort . Currently supports \"lon\" (default), \"lat\", \"filename\" ... Additional EXIF tags pass exiftoolr::exif_read","code":""},{"path":[]},{"path":"/reference/read_sf_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Read spatial data in a bounding box to a simple feature object — read_sf_path","title":"Read spatial data in a bounding box to a simple feature object — read_sf_path","text":"extended version read_sf support reading spatial data based file path, url (spatial data ArcGIS FeatureServer MapServer, Google Sheet coordinate columns), data name associated package. Optionally provide bounding box filter data (supported data types).","code":""},{"path":"/reference/read_sf_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read spatial data in a bounding box to a simple feature object — read_sf_path","text":"","code":"read_sf_path(path, bbox = NULL, ...)  read_sf_url(url, bbox = NULL, coords = NULL, ...)  read_sf_package(data, bbox = NULL, package, filetype = \"gpkg\", ...)"},{"path":"/reference/read_sf_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read spatial data in a bounding box to a simple feature object — read_sf_path","text":"path file path; used read_sf_path bbox bbox object; Default: NULL. bbox provided, read_sf returns features intersecting bounding box. ... additional parameters passed read_sf. May include query parameter. url url spatial data file ArcGIS FeatureServer MapServer access get_esri_data(); used read_sf_url coords Character vector coordinate values; used read_sf_url url Google Sheet data character; name data; used read_sf_package package character; package name; used read_sf_package filetype file type supported read_sf., Default: 'gpkg'; used read_sf_package required data package cache directory extdata system files.","code":""},{"path":"/reference/read_sf_ext.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read spatial data in a bounding box to a simple feature object — read_sf_path","text":"read_sf_package looks three types package data: = Data loaded package External data extdata system files folder. Cached data cache directory returned user_cache_dir","code":""},{"path":[]},{"path":"/reference/sf_bbox_misc.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure, transform, and convert bounding boxes — sf_bbox_misc","title":"Measure, transform, and convert bounding boxes — sf_bbox_misc","text":"Simple bounding box functions can use :","code":""},{"path":"/reference/sf_bbox_misc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure, transform, and convert bounding boxes — sf_bbox_misc","text":"","code":"sf_bbox_asp(bbox, orientation = FALSE)  sf_bbox_dist(bbox, from, to, units = FALSE)  sf_bbox_xdist(bbox, units = FALSE)  sf_bbox_ydist(bbox, units = FALSE)  sf_bbox_diagdist(bbox, units = FALSE)  sf_bbox_transform(bbox, crs)  sf_bbox_to_sf(bbox)  sf_bbox_to_wkt(bbox)  sf_bbox_to_lonlat_query(bbox, coords = c(\"longitude\", \"latitude\"), crs = 4326)  sf_bbox_shift(   bbox,   x_nudge = 0,   y_nudge = 0,   side = c(\"all\", \"top\", \"bottom\", \"left\", \"right\"),   dir = NULL )  sf_bbox_contract(bbox, x_nudge = 0, y_nudge = 0)  sf_bbox_expand(bbox, x_nudge = 0, y_nudge = 0)"},{"path":"/reference/sf_bbox_misc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure, transform, and convert bounding boxes — sf_bbox_misc","text":"bbox bbox object orientation TRUE, sf_bbox_asp returns suggested orientation based aspect ratio (< 0.9 \"portrait\"; > 1.1 \"landscape\"; else \"square\"); defaults FALSE. , xy pairs (e.g. c(\"xmax\", \"ymax) defining points measure distance . units TRUE, distance functions return units. FALSE (default), distance functions return numeric values. crs coordinate reference system use query; default 4326 coords query column names coordinates. e,g, c(\"X\", \"Y\") c(\"lat\", \"lon\") x_nudge, y_nudge Length 1 2 numeric vector; unitless. side one sides shift: \"top\", \"bottom\", \"left\", \"right\", \"\" dir \"\", contract bbox x_nudge y_nudge. \"\", expand bbox x_nudge y_nudge. dir NULL; absolute values used x_nudge y_nudge. Defaults NULL.","code":""},{"path":"/reference/sf_bbox_misc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Measure, transform, and convert bounding boxes — sf_bbox_misc","text":"sf object","code":""},{"path":"/reference/sf_bbox_misc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Measure, transform, and convert bounding boxes — sf_bbox_misc","text":"Measure distances (sf_bbox_dist, sf_bbox_xdist, sf_bbox_ydist, sf_bbox_diagdist) Get aspect ratio (sf_bbox_asp) Transform coordinate reference system (sf_bbox_transform) Convert bounding box SQL style query (sf_bbox_to_lonlat_query), well known text (sf_bbox_to_wkt), simple feature object (sf_bbox_to_sf) Shift, expand, contract bounding box (sf_bbox_shift, sf_bbox_expand, sf_bbox_contract) functions additional parameters sf_bbox_to_lonlat_query sf_bbox_dist. functions take bbox parameter.","code":""},{"path":[]},{"path":"/reference/sf_bbox_to_lonlat_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a bounding box to lon/lat query string — sf_bbox_to_lonlat_query","title":"Convert a bounding box to lon/lat query string — sf_bbox_to_lonlat_query","text":"Take bounding box return SQL style query string lon/lat values.","code":""},{"path":"/reference/sf_bbox_to_lonlat_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a bounding box to lon/lat query string — sf_bbox_to_lonlat_query","text":"","code":"sf_bbox_to_lonlat_query(   bbox,   coords = c(\"longitude\", \"latitude\"),   crs = 4326,   lonlat = TRUE )"},{"path":"/reference/sf_bbox_to_lonlat_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a bounding box to lon/lat query string — sf_bbox_to_lonlat_query","text":"bbox bounding box coords query column lon/lat coordinates crs coordinate reference system use query; default 4326 lonlat Default TRUE. FALSE, coords assumed lat/lon order instead lon/lat.","code":""},{"path":"/reference/sf_bbox_to_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a bounding box into simple feature object — sf_bbox_to_sf","title":"Convert a bounding box into simple feature object — sf_bbox_to_sf","text":"Take bbox return sf object.","code":""},{"path":"/reference/sf_bbox_to_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a bounding box into simple feature object — sf_bbox_to_sf","text":"","code":"sf_bbox_to_sf(bbox)"},{"path":"/reference/sf_bbox_to_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a bounding box into simple feature object — sf_bbox_to_sf","text":"bbox bbox object","code":""},{"path":"/reference/sf_bbox_to_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a bounding box into simple feature object — sf_bbox_to_sf","text":"sf object","code":""},{"path":[]},{"path":"/reference/sf_bbox_to_wkt.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a bounding box to well known text (wkt) — sf_bbox_to_wkt","title":"Convert a bounding box to well known text (wkt) — sf_bbox_to_wkt","text":"Take bbox return well known text use wkt_filter parameter read_sf.","code":""},{"path":"/reference/sf_bbox_to_wkt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a bounding box to well known text (wkt) — sf_bbox_to_wkt","text":"","code":"sf_bbox_to_wkt(bbox)"},{"path":"/reference/sf_bbox_to_wkt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a bounding box to well known text (wkt) — sf_bbox_to_wkt","text":"bbox bbox object","code":""},{"path":"/reference/sf_bbox_to_wkt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a bounding box to well known text (wkt) — sf_bbox_to_wkt","text":"well known text","code":""},{"path":[]},{"path":"/reference/sf_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert between simple feature to data frame objects — sf_to_df","title":"Convert between simple feature to data frame objects — sf_to_df","text":"Helper function convert simple feature object data frame dropping geometry, converting geometry well known text, (geometry type POINT) getting coordinates centroid point surface. sfc object provided,\"drop\" geometry option supported. check_coords helper function used df_to_sf suggest appropriate coordinate column names based column names provided data frame.","code":""},{"path":"/reference/sf_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert between simple feature to data frame objects — sf_to_df","text":"","code":"sf_to_df(   x,   crs = 4326,   coords = c(\"lon\", \"lat\"),   geometry = \"centroid\",   keep_all = TRUE )  df_to_sf(   x,   crs = 4326,   coords = c(\"lon\", \"lat\"),   into = NULL,   sep = \",\",   rev = TRUE )  check_coords(x = NULL, coords = NULL, rev = FALSE)"},{"path":"/reference/sf_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert between simple feature to data frame objects — sf_to_df","text":"x sf sfc object data frame lat/lon coordinates single column two separated columns crs cCordinate reference system, Default: 4326 coords Coordinate columns input dataframe output sf object (geometry 'centroid' 'point') Default: c(\"lon\", \"lat\") geometry Type geometry include data frame. options include \"drop\", \"wkt\", \"centroid\", \"point\", Default: 'centroid' keep_all FALSE, drop columns named coords, Default: TRUE coords single column name longitude latitude, used names new columns coords separated . Passed separate sep coords single column name longitude latitude, sep used separator coordinate values. Passed separate rev TRUE, reverse c(\"lat\", \"lon\") coords c(\"lon\", \"lat\"). check_coords .","code":""},{"path":"/reference/sf_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert between simple feature to data frame objects — sf_to_df","text":"sf_to_df() returns data frame geometry dropped converted wkt coordinates centroid point surface; df_to_sf()returns simple feature object POINT geometry","code":""},{"path":[]},{"path":"/reference/sf_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert between simple feature to data frame objects — sf_to_df","text":"","code":"if (FALSE) { if (interactive()) {   nc <- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\"))   nc_df <- ggspatial::df_spatial(nc)    df_to_sf(nc_df, coords = c(\"x\", \"y\"))    nc_df$xy <- paste(nc_df$x, nc_df$y, sep = \",\")    df_to_sf(nc_df, coords = \"xy\", into = c(\"lon\", \"lat\")) } }"},{"path":"/reference/st_bbox_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bounding box buffered and adjusted to match aspect ratio — st_bbox_adj","title":"Get bounding box buffered and adjusted to match aspect ratio — st_bbox_adj","text":"Takes area sf object bounding box returns bounding box matches provided aspect ratio contains area bounding box provided.","code":""},{"path":"/reference/st_bbox_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bounding box buffered and adjusted to match aspect ratio — st_bbox_adj","text":"","code":"st_bbox_adj(   x = NULL,   dist = NULL,   diag_ratio = NULL,   asp = NULL,   unit = NULL,   crs = NULL )"},{"path":"/reference/st_bbox_adj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bounding box buffered and adjusted to match aspect ratio — st_bbox_adj","text":"x sf adjust dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Units passed units::set_units() converted units matching GDAL; defaults \"meter\" crs Coordinate reference system bounding box return","code":""},{"path":"/reference/st_bbox_adj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bounding box buffered and adjusted to match aspect ratio — st_bbox_adj","text":"Class bbox object","code":""},{"path":"/reference/st_bbox_adj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get bounding box buffered and adjusted to match aspect ratio — st_bbox_adj","text":"Common aspect ratios include \"1:1\" (1), \"4:6\" (0.666), \"8.5:11\", \"16:9\" (1.777). asp parameter supports numeric values character strings ratios matching format \"width:height\".","code":""},{"path":"/reference/st_bbox_asp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bounding box adjusted to match aspect ratio — st_bbox_asp","title":"Get bounding box adjusted to match aspect ratio — st_bbox_asp","text":"Takes area  sf bbox object returns bounding box matches aspect ratio provided asp contains area bounding box provided. Common aspect ratios include \"1:1\" (1), \"4:6\" (0.666), \"8.5:11\", \"16:9\" (1.777). asp parameter supports numeric values character strings ratios matching format \"width:height\".","code":""},{"path":"/reference/st_bbox_asp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bounding box adjusted to match aspect ratio — st_bbox_asp","text":"","code":"st_bbox_asp(x = NULL, asp = NULL)"},{"path":"/reference/st_bbox_asp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bounding box adjusted to match aspect ratio — st_bbox_asp","text":"x sf bbox object asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification.","code":""},{"path":"/reference/st_bbox_asp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bounding box adjusted to match aspect ratio — st_bbox_asp","text":"bbox object","code":""},{"path":"/reference/st_bbox_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bounding box buffered to aspect ratio — st_bbox_ext","title":"Get bounding box buffered to aspect ratio — st_bbox_ext","text":"Takes area sf object bounding box returns bounding box matches provided aspect ratio contains area bounding box provided.","code":""},{"path":"/reference/st_bbox_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bounding box buffered to aspect ratio — st_bbox_ext","text":"","code":"st_bbox_ext(   x = NULL,   dist = NULL,   diag_ratio = NULL,   asp = NULL,   unit = NULL,   crs = NULL,   sf = FALSE )  st_bbox_asp(x = NULL, asp = NULL, sf = FALSE)"},{"path":"/reference/st_bbox_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bounding box buffered to aspect ratio — st_bbox_ext","text":"x object sf, bbox, sfc, raster, sp object data frame can converted sf object. st_bbox_asp also supports vectors format bbox object. dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" crs Coordinate reference system bounding box return sf TRUE, return sf object; defaults FALSE.","code":""},{"path":"/reference/st_bbox_ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bounding box buffered to aspect ratio — st_bbox_ext","text":"Class bbox object","code":""},{"path":"/reference/st_bbox_ext.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get bounding box buffered to aspect ratio — st_bbox_ext","text":"Common aspect ratios include \"1:1\" (1), \"4:6\" (0.666), \"8.5:11\", \"16:9\" (1.777). asp parameter supports numeric values character strings ratios matching format \"width:height\".","code":""},{"path":"/reference/st_bearing.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bearing from simple feature objects with LINESTRING geometry — st_bearing","title":"Get bearing from simple feature objects with LINESTRING geometry — st_bearing","text":"Get bearing simple feature objects LINESTRING geometry","code":""},{"path":"/reference/st_bearing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bearing from simple feature objects with LINESTRING geometry — st_bearing","text":"","code":"st_bearing(x, dir = FALSE, crs = 4326)"},{"path":"/reference/st_bearing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bearing from simple feature objects with LINESTRING geometry — st_bearing","text":"x sf object. dir Logical indicator whether include direction bearing; FALSE, return absolute (positive) bearing value. TRUE, return negative positive bearing values. Default: FALSE. crs Coordinate reference system passed sf::st_coordinates() (must geographic projected). Default: 4326.","code":""},{"path":[]},{"path":"/reference/st_bearing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get bearing from simple feature objects with LINESTRING geometry — st_bearing","text":"","code":"if (FALSE) { if (interactive()) {   library(ggplot2)    nc <- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\"))   nc_pts <- sf::st_centroid(nc)   nc_line <-     sf::st_as_sf(       sf::st_cast(         sf::st_union(c(nc_pts[1, ]$geometry, nc_pts[30, ]$geometry)),         \"LINESTRING\"       )     )    ggplot() +     geom_sf(data = nc) +     geom_sf(data = nc_pts) +     geom_sf(data = st_bearing(nc_line), aes(color = bearing)) } }"},{"path":"/reference/st_buffer_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Buffer a simple feature or bounding box object — st_buffer_ext","title":"Buffer a simple feature or bounding box object — st_buffer_ext","text":"Return sf object buffer based dist proportion diagonal distance defined diag_ratio. x uses geographic coordinates, coordinate reference system transformed EPSG:3857 transformed back original CRS buffer applied.","code":""},{"path":"/reference/st_buffer_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Buffer a simple feature or bounding box object — st_buffer_ext","text":"","code":"st_buffer_ext(   x,   dist = NULL,   diag_ratio = NULL,   unit = \"meter\",   dist_limits = NULL,   ... )  st_edge(x, dist = NULL, diag_ratio = NULL, unit = \"meter\", ...)"},{"path":"/reference/st_buffer_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Buffer a simple feature or bounding box object — st_buffer_ext","text":"x sf bbox object. dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" dist_limits Numeric vector length (minimum maximum values used lower upper limits distance buffer). Units must match provided units; defaults NULL. ... additional parameters passed  st_buffer.","code":""},{"path":"/reference/st_buffer_ext.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Buffer a simple feature or bounding box object — st_buffer_ext","text":"st_edge variation st_buffer_ext dist diag_ratio used define width edge return either outside existing geometry (positive dist values) inside existing geometry (negative dist values).","code":""},{"path":"/reference/st_clip.html","id":null,"dir":"Reference","previous_headings":"","what":"Clip the side or corner of a simple feature or bounding box object — st_clip","title":"Clip the side or corner of a simple feature or bounding box object — st_clip","text":"Clip based corner object bounding box.","code":""},{"path":"/reference/st_clip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clip the side or corner of a simple feature or bounding box object — st_clip","text":"","code":"st_clip(   x,   clip = NULL,   keep = NULL,   flip = FALSE,   dist = NULL,   diag_ratio = NULL )"},{"path":"/reference/st_clip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clip the side or corner of a simple feature or bounding box object — st_clip","text":"x sf bbox object clip clip Character string describing part area clip remove. Options include c(\"top\", \"right\", \"bottom\", \"left\", \"topright\", \"bottomright\", \"bottomleft\", \"topleft\"). NULL, area clipped full edge can returned. keep Alternate way defining clip (naming section keep). flip Logical. Default FALSE. TRUE, clip area kept instead removed. keep provided, flip automatically set TRUE. dist Numeric. Distance use edge. Default NULL meters. Use negative values inside edge positive numbers outside edge. diag_ratio Alternate way define edge distance.","code":""},{"path":"/reference/st_clip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clip the side or corner of a simple feature or bounding box object — st_clip","text":"sf object clipped based parameters","code":""},{"path":"/reference/st_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Get coordinates for simple feature or bounding box object — st_coords","title":"Get coordinates for simple feature or bounding box object — st_coords","text":"extended version st_coords supports binding coordinates object, optionally dropping geometry, returning wkt point surface (geometry = \"surface point\") instead centroid.","code":""},{"path":"/reference/st_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get coordinates for simple feature or bounding box object — st_coords","text":"","code":"st_coords(x, coords = NULL, geometry = NULL, keep_all = TRUE, drop = TRUE)"},{"path":"/reference/st_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get coordinates for simple feature or bounding box object — st_coords","text":"x sf, bbox, sfc object coords Column names use coordinates results, Default: NULL; set c(\"lon\", \"lat\") check_coords geometry geometry use coordinates \"centroid\", \"surface point\", alternatively \"wkt\"; defaults NULL (\"centroid\") keep_all TRUE, bind coordinates columns provided object x, Default: TRUE drop TRUE x sf object, drop geometry Default: TRUE","code":""},{"path":"/reference/st_erase.html","id":null,"dir":"Reference","previous_headings":"","what":"Erase an area of a simple feature object — st_erase","title":"Erase an area of a simple feature object — st_erase","text":"extended version sf::st_difference uses flip parameter optionally call sf::st_intersection combines unions second object default.","code":""},{"path":"/reference/st_erase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Erase an area of a simple feature object — st_erase","text":"","code":"st_erase(x, y, flip = FALSE, union = TRUE)"},{"path":"/reference/st_erase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Erase an area of a simple feature object — st_erase","text":"x sf object y sf object flip TRUE, use st_intersection; FALSE use st_difference, Default: FALSE union TRUE, use st_combine st_union y applying difference/intersection, Default: FALSE","code":""},{"path":"/reference/st_inscribed_square.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an inscribed square in a simple feature object — st_inscribed_square","title":"Create an inscribed square in a simple feature object — st_inscribed_square","text":"function wraps sf::st_inscribed_circle() limits circle 1 segment per quadrant (nQuadSegs = 1) rotates resulting geometry 45 degrees provide (mostly) inscribed square. different rotation value can provided change orientation shap, e.g. rotate = -45 return diamond shape.","code":""},{"path":"/reference/st_inscribed_square.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an inscribed square in a simple feature object — st_inscribed_square","text":"","code":"st_inscribed_square(x, rotate = 0)"},{"path":"/reference/st_inscribed_square.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an inscribed square in a simple feature object — st_inscribed_square","text":"x object class sf rotate numeric; degrees rotate square geometry, Default: 0","code":""},{"path":[]},{"path":"/reference/st_inscribed_square.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an inscribed square in a simple feature object — st_inscribed_square","text":"","code":"if (FALSE) { if(interactive()){  library(ggplot2)   nc <- sf::st_read(system.file(\"shape/nc.shp\", package=\"sf\"))  nc_squares <- st_inscribed_square(sf::st_transform(nc, 2264))   ggplot() +   geom_sf(data = nc) +   geom_sf(data = nc_squares, fill = NA, color = \"red\")  } }"},{"path":"/reference/st_misc.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify the geometry of a simple feature or bounding box object — st_misc","title":"Modify the geometry of a simple feature or bounding box object — st_misc","text":"Support bbox sf objects inputs.","code":""},{"path":"/reference/st_misc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify the geometry of a simple feature or bounding box object — st_misc","text":"","code":"st_scale_rotate(x, scale = 1, rotate = 0)  st_center(x, ext = TRUE, ...)  st_inscribed_square(x, rotate = 0)  st_geom_type(x, ext = TRUE, check = NULL, by_geometry = FALSE)"},{"path":"/reference/st_misc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify the geometry of a simple feature or bounding box object — st_misc","text":"x sf bbox object scale numeric; scale factor, Default: 1 rotate numeric; degrees rotate (-360 360), Default: 0 ext st_geom_type, ext TRUE check NULL, return list checks POINTS, POLYGONS, LINESTRING, returned types. ... Additional parameters passed sf::st_centroid() st_center check \"POINT\", check geometry type POINT. available geometry types; Default: NULL by_geometry Passed sf::st_geometry_type; defaults FALSE","code":""},{"path":"/reference/st_misc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify the geometry of a simple feature or bounding box object — st_misc","text":"Returns vector geometry types; gives warning object uses multiple types.","code":""},{"path":"/reference/st_misc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify the geometry of a simple feature or bounding box object — st_misc","text":"Scale rotate simple feature bounding box object using affine transformations Get center point simple feature bounding box object Get approximate inscribed square within simple feature bounding box object st_inscribed_square wraps sf::st_inscribed_circle() limits circle 1 segment per quadrant (nQuadSegs = 1) rotates resulting geometry 45 degrees provide (mostly) inscribed square. different rotation value can provided change orientation shape, e.g. rotate = -45 return diamond shape.","code":""},{"path":[]},{"path":"/reference/st_misc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify the geometry of a simple feature or bounding box object — st_misc","text":"","code":"if (FALSE) { if (interactive()) {   library(ggplot2)    nc <- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\"))   nc_rotated <- st_scale_rotate(nc, scale = 0.5, rotate = 15)    ggplot() +     geom_sf(data = nc) +     geom_sf(data = nc_rotated, fill = NA, color = \"red\") } }"},{"path":"/reference/st_scale_rotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale or rotate a simple feature object — st_scale_rotate","title":"Scale or rotate a simple feature object — st_scale_rotate","text":"Scale rotate simple feature object using affine transformations","code":""},{"path":"/reference/st_scale_rotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale or rotate a simple feature object — st_scale_rotate","text":"","code":"st_scale_rotate(x, scale = 1, rotate = 0)"},{"path":"/reference/st_scale_rotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale or rotate a simple feature object — st_scale_rotate","text":"x object class sf scale numeric; scale factor, Default: 1 rotate numeric; degrees rotate (-360 360), Default: 0","code":""},{"path":"/reference/st_scale_rotate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scale or rotate a simple feature object — st_scale_rotate","text":"DETAILS","code":""},{"path":[]},{"path":"/reference/st_scale_rotate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale or rotate a simple feature object — st_scale_rotate","text":"","code":"if (FALSE) { if(interactive()){  library(ggplot2)   nc <- sf::st_read(system.file(\"shape/nc.shp\", package=\"sf\"))  nc_rotated <- st_scale_rotate(nc, scale = 0.5, rotate = 15)   ggplot() +   geom_sf(data = nc) +   geom_sf(data = nc_rotated, fill = NA, color = \"red\")  } }"},{"path":"/reference/st_transform_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform or convert coordinates of a simple feature or bounding box object — st_transform_ext","title":"Transform or convert coordinates of a simple feature or bounding box object — st_transform_ext","text":"Take sf, sfc, bbox object transform coordinate reference system match provided crs  CRS provided y object.","code":""},{"path":"/reference/st_transform_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform or convert coordinates of a simple feature or bounding box object — st_transform_ext","text":"","code":"st_transform_ext(x, crs = NULL)"},{"path":"/reference/st_transform_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform or convert coordinates of a simple feature or bounding box object — st_transform_ext","text":"x sf, sfc, bbox object, character numeric object supported st_crs crs coordinate reference system convert x another  sf, sfc, bbox object used provide crs.","code":""},{"path":"/reference/st_transform_ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform or convert coordinates of a simple feature or bounding box object — st_transform_ext","text":"sf, sfc, bbox object transformed new coordinate reference system.","code":""},{"path":[]},{"path":"/reference/standard_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard map, architectural, and engineering scales — standard_scales","title":"Standard map, architectural, and engineering scales — standard_scales","text":"Standard map scales derived USGS 2002 report map scales https://pubs.usgs.gov/fs/2002/0015/report.pdf","code":""},{"path":"/reference/standard_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard map, architectural, and engineering scales — standard_scales","text":"","code":"standard_scales"},{"path":"/reference/standard_scales.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Standard map, architectural, and engineering scales — standard_scales","text":"data frame 32 rows 16 variables: scale Scale name standard Standard (USGS, architectural, engineering) series Series name (USGS map scales ) actual_ft Scale distance 1 ft actual. actual_ft_unit Unit scale 1 ft actual. scale_in Actual distance 1 scale. scale_in_unit Unit actual distance 1 scale. scale_in_accuracy Accuracy 1 scale (approximate exact) scale_cm Actual distance 1 cm scale. scale_cm_unit Unit actual distance 1 cm scale. scale_cm_accuracy Accuracy 1 cm scale (approximate exact) size_latlon Standard size latitude/longitude size_latlon_unit Unit latitude/longitude size (minutes degrees) area_approx Approximate actual area area_approx_unit Approximate area unit series_status Series status (select USGS map series \"abandoned\")","code":""},{"path":"/reference/standard_scales.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standard map, architectural, and engineering scales — standard_scales","text":"Common architectural engineering scales derived FEMA guide using scales https://www.usfa.fema.gov/downloads/pdf/nfa/engineer-architect-scales.pdf","code":""},{"path":"/reference/theme_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify the text, margins, or legend for a ggplot theme — theme_ext","title":"Modify the text, margins, or legend for a ggplot theme — theme_ext","text":"Helper functions modifying ggplot theme.","code":""},{"path":"/reference/theme_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify the text, margins, or legend for a ggplot theme — theme_ext","text":"","code":"theme_text(   font_family = NULL,   color = \"black\",   geom_text = TRUE,   method = NULL )  theme_margin(   margin = \"standard\",   paper = NULL,   orientation = NULL,   dist = NULL,   unit = \"in\",   plot_width = NULL,   header = 0,   footer = 0,   fill = NA,   color = NA,   size = 0,   method = NULL )  theme_legend(   position,   margin = 10,   unit = \"pt\",   inset = TRUE,   bgcolor = \"white\",   justification = NULL,   method = NULL )"},{"path":"/reference/theme_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify the text, margins, or legend for a ggplot theme — theme_ext","text":"font_family Font family, Default: 'Helvetica' NULL, font_family pulled current set theme helpful resetting text families theme. color Color text elements (passed element_text theme_text), plot.background (passed element_rect theme_margin). Default: NA. geom_text TRUE, update text family geom_text, geom_sf_text, geom_label, geom_sf_label match font_family color. FALSE, make changes theme. Default: TRUE. method Method name ggplot2 geom function use modifying theme (\"set\", \"update\", \"replace\"); defaults NULL. margin Margin distance, margin style supported get_margin() margin object; defaults 10. paper Paper, Default: 'letter'. orientation Orientation \"portrait\", \"landscape\", \"square\", Default: 'portrait'. dist Margin distance (single value used sides), Default: NULL unit Legend margin units; defaults 'pt'. plot_width Plot map width units. paper plot_width provided, margins half distance two evenly distributed. tested may work page sizes/orientations. header Header height units; defaults 0. footer Footer height units; defaults 0. fill Fill plot.background theme element passed element_rect Default: NA. size Size number (used \"ISO\" \"JIS\" series). Standard, series, size may required return single paper using parameters. position Legend position (“left”,“top”, “right”, “bottom”) two-element numeric vector set position using Normalized Parent Coordinates (\"npc\"). inset TRUE position \"topleft\", \"bottomleft\", \"topright\", \"bottomright\", place legend inset position; defaults TRUE. bgcolor Fill color legend background; defaults 'white'. justification NULL, justification set \"center\"; defaults NULL.","code":""},{"path":[]},{"path":"/reference/theme_margin.html","id":null,"dir":"Reference","previous_headings":"","what":"Set, update, or replace margins for ggplot theme — theme_margin","title":"Set, update, or replace margins for ggplot theme — theme_margin","text":"Set, update, replace margins ggplot theme","code":""},{"path":"/reference/theme_margin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set, update, or replace margins for ggplot theme — theme_margin","text":"","code":"theme_margin(   margin = \"standard\",   paper = NULL,   orientation = NULL,   dist = NULL,   unit = \"in\",   plot_width = NULL,   fill = NA,   color = NA,   size = 0,   method = NULL )"},{"path":"/reference/theme_margin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set, update, or replace margins for ggplot theme — theme_margin","text":"paper Paper, Default: 'letter' orientation Orientation \"portrait\", \"landscape\", \"square\", Default: 'portrait' fill fill plot.background passed ggplot2::element_rect(), Default: NA color color plot.background passed ggplot2::element_rect(), Default: NA method ggplot2 function use changing text \"set\", \"update\", \"replace\", Default: 'set'","code":""},{"path":[]},{"path":"/reference/theme_margin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set, update, or replace margins for ggplot theme — theme_margin","text":"","code":"if (FALSE) { if (interactive()) {   ggplot() +     layer_loc   theme_margin(paper = \"letter\")    theme_margin(margin = \"narrow\", paper = \"letter\") } }"},{"path":"/reference/theme_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Set, update, or replace text family for ggplot theme and geoms — theme_text","title":"Set, update, or replace text family for ggplot theme and geoms — theme_text","text":"Set, update, replace text family ggplot theme geoms","code":""},{"path":"/reference/theme_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set, update, or replace text family for ggplot theme and geoms — theme_text","text":"","code":"theme_text(   font_family = \"Helvetica\",   color = \"black\",   method = NULL,   geom = TRUE )"},{"path":"/reference/theme_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set, update, or replace text family for ggplot theme and geoms — theme_text","text":"font_family Font family, Default: 'Helvetica' NULL, font_family pulled current set theme helpful resetting text families theme. method ggplot2 function use changing text \"set\", \"update\", \"replace\", Default: 'set' geom TRUE, update text family geom_text, geom_sf_text, geom_label, geom_sf_label match font_family. FALSE, make changes theme. Default: TRUE","code":""},{"path":[]},{"path":"/reference/valid_dist_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Valid distance units — valid_dist_units","title":"Valid distance units — valid_dist_units","text":"subset units supported units package accessible units::valid_udunits() function.","code":""},{"path":"/reference/valid_dist_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Valid distance units — valid_dist_units","text":"","code":"valid_dist_units"},{"path":"/reference/valid_dist_units.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Valid distance units — valid_dist_units","text":"data frame 11 rows 11 variables: symbol symbols symbol_aliases symbol aliases name_singular singular names name_singular_aliases singular name aliases name_plural character plural names name_plural_aliases plural name aliases def short definition definition definition comment comment dimensionless logical indicator dimensionless units source_xml source XML","code":""},{"path":"/reference/write_sf_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Cache simple feature data — write_sf_cache","title":"Cache simple feature data — write_sf_cache","text":"Cache data rappdirs::user_cache_dir(\"overedge\") data directory.","code":""},{"path":"/reference/write_sf_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cache simple feature data — write_sf_cache","text":"","code":"write_sf_cache(   data = NULL,   data_dir = NULL,   overwrite = FALSE,   name = NULL,   label = NULL,   filetype = NULL,   filename = NULL,   prefix = NULL,   postfix = NULL )"},{"path":"/reference/write_sf_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cache simple feature data — write_sf_cache","text":"data sf data cache. data_dir cache data directory, defaults user_cache_dir data_dir NULL overwrite Logical. Default FALSE. TRUE, overwrite existing cached files use file name. name Name make file name converted snake case make_clean_case, e.g. \"Residential zoning map\" becomes \"residential_zoning_map\" label Label combine name converted snake case make_clean_case. label designed identify area shared characteristics across multiple data files, maps, plots. filetype File type extension. filename File name use cached file. Defaults name data. data sf object make sure include file type, e.g. \"data.gpkg\", supported sf::write_sf(). data written rda readr::write_rds(). prefix File name prefix. \"date\" adds date prefix, \"time\" adds date/time prefix; defaults NULL. postfix File name postfix; defaults NULL.","code":""},{"path":"/reference/write_sf_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Write or cache a simple feature object to a file — write_sf_ext","title":"Write or cache a simple feature object to a file — write_sf_ext","text":"write_sf_ext write_sf_cache helper functions wrap write_sf function provide additional options including consistent file naming make_filename() features including: data sf object, optionally save RDS file. filetype \"csv\" filename ends \".csv\" file automatically converted dataframe using df_to_sf(); filetype \"gsheet\" file converted turned new Google SHeet document (Google account authorized googlesheets4 package). cache TRUE use write_sf_cache cache file writing copy path provided.","code":""},{"path":"/reference/write_sf_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write or cache a simple feature object to a file — write_sf_ext","text":"","code":"write_sf_ext(   data,   name = NULL,   label = NULL,   prefix = NULL,   postfix = NULL,   filename = NULL,   filetype = \"geojson\",   path = NULL,   cache = FALSE,   overwrite = FALSE )  write_sf_cache(   data,   data_dir = NULL,   overwrite = FALSE,   name = NULL,   label = NULL,   filetype = NULL,   filename = NULL,   prefix = NULL,   postfix = NULL )"},{"path":"/reference/write_sf_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write or cache a simple feature object to a file — write_sf_ext","text":"data sf object write. name Name make file name converted snake case janitor::make_clean_names(), e.g. \"Residential zoning map\" becomes \"residential_zoning_map\" label Label combine name converted snake case janitor::make_clean_names(). label designed identify area shared characteristics across multiple data files, maps, plots. prefix File name prefix. \"date\" adds date prefix, \"time\" adds date/time prefix; defaults NULL. postfix File name postfix; defaults NULL. filename File name use. filename provided data sf object make sure include file type, e.g. \"data.gpkg\" \"data.csv\". Objects simple features written RDS readr::write_rds(). filetype File type write cache, Default: 'geojson' write_sf_ext() path Path file data directory. cache TRUE, write sf object file cache directory; defaults FALSE. overwrite Logical. Default FALSE. TRUE, overwrite existing cached files use file name. data_dir cache data directory, defaults user_cache_dir data_dir NULL. (used write_sf_cache; default used cache = TRUE write_sf_ext)","code":""},{"path":[]}]
