[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 overedge authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"/articles/get_location.html","id":"supported-location-types","dir":"Articles","previous_headings":"Get location","what":"Supported location types","title":"Get locations and location data","text":"“type” location data can access get_location() flexible. can provide: simple feature object url spatial data file compatible sf::read_sf() url ArcGIS MapServer FeatureServer file path can also provide name simple feature object either already loaded global environment available load installed package. Data packages include exported data available package loaded, data available system files loaded (may sometimes undocumented), data default cache folder path rappdirs::user_cache_dir(). want use package data cached different location, need provide file path (filename directory) order use get_location(). parameters passed get_location() get_location_data() following section vignette includes details general function works. Finally, can alternatively pass named list index serves look-table matching “type” sf object.","code":""},{"path":"/articles/get_location.html","id":"supported-parameters-to-accessing-a-location","dir":"Articles","previous_headings":"Get location","what":"Supported parameters to accessing a location","title":"Get locations and location data","text":"basic parameters accessing specific location : name (name_col matching column filter) id (id_col matching column filter) passed value name coerced character id coerced numeric , “id” column type location character format, need treat “name” instead. Alternatively can use location parameter supports either: valid street address (geocoded tidygeocoder::geo()) simple feature object bounding box provide sf bbox object, object used spatial filter either reading data (using bbox parameter read_sf_path read_sf_url) returning data using sf::st_filter() function.","code":""},{"path":"/articles/get_location.html","id":"working-with-union-and-label-parameters","dir":"Articles","previous_headings":"Get location > Supported parameters to accessing a location","what":"Working with union and label parameters","title":"Get locations and location data","text":"Location types administrative boundaries can often grouped together larger areas. union parameter makes easy .","code":""},{"path":[]},{"path":"/articles/get_location.html","id":"building-custom-look-up-functions","dir":"Articles","previous_headings":"Get location > What is get_location() good for?","what":"Building custom look-up functions","title":"Get locations and location data","text":"examples showing can use get_location() create new custom look-functions. location data another package, can use package parameters passed get_location_data() access data even without loading package. approach works best package data uses consistent naming scheme columns data support. makes easy turn names parameters example using nycgeo package. location data sourced ArcGIS MapServer FeatureServer, can use name name_col parameters underlying get_esri_data() function. avoids need download full dataset every time. Location data can also loaded URL GeoJSON spatial data file.","code":"# remotes::install_github(\"mfherman/nycgeo\")  get_nyc_borough <- function(name = NULL, id = NULL, type = \"simple\") {   data <- \"borough_sf\"   if (type == \"simple\") {     data <- paste(data, type, sep = \"_\")   }    package <- \"nycgeo\"    get_location(     type = data,     package = package,     name = name,     id = id,     name_col = \"borough_name\",     id_col = \"borough_id\"   ) }  get_nyc_borough(\"Manhattan\") #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> Simple feature collection with 1 feature and 6 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 971160 ymin: 188438.4 xmax: 1010065 ymax: 259550.8 #> Projected CRS: NAD83 / New York Long Island (ftUS) #> # A tibble: 1 × 7 #>   geoid state_fips county_fips county_name borough_name borough_id #>   <chr> <chr>      <chr>       <chr>       <chr>        <chr>      #> 1 36061 36         061         New York    Manhattan    1          #> # … with 1 more variable: geometry <MULTIPOLYGON [US_survey_foot]> # get_anc looks up the Advisory Neighborhood Council # Data from Open Data DC https://opendata.dc.gov/datasets/fcfbf29074e549d8aff9b9c708179291  get_anc <- function(name) {   url <- \"https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Administrative_Other_Boundaries_WebMercator/MapServer/1\"    get_location(     type = url,     name = toupper(name),     name_col = \"name\"   ) }  get_anc(name = \"5B\")"},{"path":"/articles/get_location.html","id":"accessing-overlapping-geographies","dir":"Articles","previous_headings":"Get location > What is get_location() good for?","what":"Accessing overlapping geographies","title":"Get locations and location data","text":"Since location supports addresses sf objects, can pull individual locations without knowing name id area. example, can use address: can also combine multiple approaches create look-function returns overlapping geography named characteristic. example, following function takes name school returns Baltimore City neighborhoods overlap school’s attendance zone.","code":"# remotes::install_github(\"elipousson/mapbaltimore\")  lookup_tract <- function(address) {   get_location(     type = \"baltimore_tracts\",     package = \"mapbaltimore\",     location = address   ) }  lookup_tract(\"100 Holliday St, Baltimore, MD 21202\") #> Passing 1 address to the Nominatim single address geocoder #> Query completed in: 1 seconds #> Simple feature collection with 1 feature and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 432552.6 ymin: 179852.2 xmax: 434068 ymax: 180839.8 #> Projected CRS: NAD83(HARN) / Maryland #>   tractce       geoid name         namelsad   aland awater    intptlat #> 1  040100 24510040100  401 Census Tract 401 1191002   1430 +39.2902267 #>       intptlon                       geometry #> 1 -076.6145019 POLYGON ((432552.6 180801.8... lookup_school_neighborhoods <- function(school_name) {   school <-     get_location(       type = \"bcps_es_zones_SY2021\",       package = \"bcpss\",       name = school_name,       name_col = \"program_name_short\",       crs = 2804     )    school_neighborhoods <-     get_location(     type = \"neighborhoods\",     package = \"mapbaltimore\",     location = school   )    return(school_neighborhoods) }  lookup_school_neighborhoods(school_name = \"Eutaw-Marshburn E\") #> Simple feature collection with 7 features and 5 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 430345 ymin: 180859.9 xmax: 432760.6 ymax: 183281.7 #> Projected CRS: NAD83(HARN) / Maryland #> # A tibble: 7 × 6 #>   name                type       acres osm_id wikidata                  geometry #> * <chr>               <chr>      <dbl> <chr>  <chr>           <MULTIPOLYGON [m]> #> 1 Bolton Hill         Residenti… 146.  12792… Q4940186 (((432349.2 182587.8, 43… #> 2 Druid Heights       Residenti…  57.9 12792… NA       (((431569.6 181988, 4315… #> 3 Madison Park        Residenti… 102.  12792… NA       (((432337.1 181728.9, 43… #> 4 Penn North          Residenti…  86.5 12799… Q181584… (((430510.3 182832.8, 43… #> 5 Reservoir Hill      Residenti… 195.  12792… Q7315317 (((432026 183146.6, 4320… #> 6 Sandtown-Winchester Residenti… 260.  12800… Q7416984 (((430729.9 182481.6, 43… #> 7 Upton               Residenti… 188.  12792… Q7899346 (((432361 181396.1, 4323…"},{"path":"/articles/get_location.html","id":"get-location-data","dir":"Articles","previous_headings":"Get location","what":"Get location data","title":"Get locations and location data","text":"noted previous section, get_location() largely built around get_location_data(). , get_location_data() also helpful function just . data parameter supports options type parameter described prior section, get_location_data() also supports named parameters path url. Note: vignette work progress additional details added soon.","code":"params <- list(   type = \"council_districts\",   id = 12,   dist = 0.125,   diag_ratio = NULL,   unit = \"mi\",   package = \"mapbaltimore\",   layers = c(\"streets\", \"neighborhoods\", \"trees\") )  district <-   get_location(     type = params$type,     package = params$package,     id = params$id   )  district #> Simple feature collection with 1 feature and 2 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 432071 ymin: 179871.4 xmax: 436036.4 ymax: 184134.6 #> Projected CRS: NAD83(HARN) / Maryland #>    id                       geometry        name #> 13 12 MULTIPOLYGON (((433676 1838... District 12"},{"path":"/articles/get_location.html","id":"selecting-a-page-size","dir":"Articles","previous_headings":"","what":"Selecting a page size","title":"Get locations and location data","text":"can use get_paper function look one common paper sizes standard image sizes: can also use geometry specified location set orientation page suggested aspect ratio using sf_bbox_asp function: Based information, looks like map way work well Instagram post. one additional consideration setting aspect ratio map area: aspect ratio content block marings applied. less significant Instagram post full bleed images appropriate, example shows get aspect ratio plot, text, map block margins added page. “px” units associated Instagram post paper currently used header footer option passed “npc” units manually set margin rather using preset options. Finally, final selections can used create bounding box reduces need pass variables similar functions. can also works way effectively saving different “zoom levels” map based different buffer units.","code":"paper_options <- get_paper(paper = NULL, standard = c(\"Twitter\", \"Instagram\")) knitr::kable(paper_options) sf_bbox_asp(sf::st_bbox(district)) #> [1] 0.930126  sf_bbox_asp((sf::st_bbox(district)), orientation = TRUE) #> [1] \"square\" params$paper <- \"Instagram post\"  # Get a paper by name  paper <-    get_paper(     paper = params$paper   )  # Move width, height, aspect ratio (asp), and units (for map) into params params$width <- paper$width params$height <- paper$height params$asp <- paper$asp # NOTE: px units are not fully supported by all functions # NOTE: units supports map-scale options (\"in\") rather than the unit parameter used by st_buffer_ext params$units <- paper$units get_asp(   paper = \"letter\",   block_asp = FALSE) #> [1] 0.7727273  get_asp(   paper = \"letter\",   margin = c(1, 1, 1.5, 1),   block_asp = TRUE) #> [1] 0.7647059 # This information  district_bbox <-   st_bbox_ext(     x = district,     dist = params$dist,     diag_ratio = params$diag_ratio,     asp = params$asp   ) district_trees <-   get_location_data(     location = district_bbox,     data = \"trees\",     package = \"mapbaltimore\",     filetype = \"gpkg\"   )  gt::gt(dplyr::slice_head(district_trees, n = 10)) ggplot() +   layer_location_data(     data = district_trees,     mapping = aes(color = condition),     size = 0.3,     alpha = 0.4   ) +   theme_legend(     position = \"bottomleft\"   ) +   theme_text(     font_family = \"Fira Code\"   ) +   labs(     color = \"Condition\"   ) +   scale_color_brewer(palette = \"RdYlGn\") +   layer_mask(     data = district,     dist = 100,     color = \"gray70\",     neatline = TRUE   )"},{"path":"/articles/get_remote_data.html","id":"get-data-from-an-arcgis-featureserver-or-mapserver","dir":"Articles","previous_headings":"","what":"Get data from an ArcGIS FeatureServer or MapServer","title":"Getting remote data and photos using API functions","text":"large number cities adopted ArcGIS Hub open data platform spatial non-spatial data. get_esri_data wraps esri2sf package facilitate getting spatial data bounding box area name. example, FeatureServer Open Baltimore provides list designated landmarks Downtown Baltimore. Even non-spatial Tables can filtered location table includes latitude longitude columns.","code":"# https://data.baltimorecity.gov/datasets/landmarks-1/explore url <- \"https://opendata.baltimorecity.gov/egis/rest/services/Hosted/Landmarks/FeatureServer/0\"  landmarks <-   get_esri_data(     location = location,     url = url   )  landmarks <-   dplyr::select(landmarks, fid, name, address)  basemap +   layer_location_data(     data = landmarks   ) +   layer_location_data(     data = landmarks,     geom = \"text_repel\",     size = 2   ) +   layer_neatline(     data = location   )"},{"path":"/articles/get_remote_data.html","id":"get-data-from-open-street-map","dir":"Articles","previous_headings":"","what":"Get data from Open Street Map","title":"Getting remote data and photos using API functions","text":"get data Open Street Map, may need refer OSM Wiki information keys tags tourism artwork.","code":"osm_artwork <-   get_osm_data(     location = location,     key = \"tourism\",     value = \"artwork\",     geometry = \"point\"   )  basemap +   layer_location_data(     data = osm_artwork,     aes(color = material)   ) +   layer_neatline(     data = location,     expand = TRUE   ) +   theme_legend(position = \"topleft\")"},{"path":"/articles/get_remote_data.html","id":"get-data-about-photos-from-flickr","dir":"Articles","previous_headings":"","what":"Get data about photos from Flickr","title":"Getting remote data and photos using API functions","text":"get_flickr_photos function depends development version FlickrAPI package currently able render vignette show works.","code":"photos_sf <-   get_flickr_photos(     location = location,     img_size = \"s\",     tags = \"monument\",     orientation = \"landscape\",     geometry = TRUE # this is the default   )"},{"path":[]},{"path":"/articles/ggsave_ext.html","id":"set-parameters-for-the-map-and-location","dir":"Articles","previous_headings":"Getting started","what":"Set parameters for the map and location","title":"Map layout and themes with ggplot2 utility functions","text":"overedge designed easily support workflow page image size, page margin, map area (defined location along dist diag_ratio parameters) used repeatly across range related functions map making layout functions. example, location name, location type, package type data used get sf object Baltimore neighborhood. Additional parameters can derived based preliminary parameters geometry. example, page orientation can based aspect ratio buffered bounding box named location. aspect ratio location map based combination paper, margin, orientation. overall bounding box map area requires distance diagonal ratio aspect ratio. quick map helpful illustrating relative size proportion different simple feature objects bounding boxes created process:  example, objects block_bbox nearby_neighborhoods separate objects easily added list parameters. approach using parameters intended make code easy reuse parameterized RMarkdown document. cases, may convenient wrap overedge function preset parameters use purrr::partial() similar purpose: can helpful reducing repetition setting maps also can get confusing use approach care.","code":"# Set initial parameters params <-   list(     paper = \"Instagram post\",     margin = \"narrow\",     name = \"Harwood\",     type = \"neighborhoods\",     package = \"mapbaltimore\",     source = \"Baltimore City\",     dist = NULL,     diag_ratio = 0.75   ) # Create wrapper function to get neighborhood get_neighborhood <- function(name = NULL, location = NULL) {   get_location(     type = params$type,     package = params$package,     name = name,     location = location   ) }  # Use the get_neighborhood wrapper function to get the neighborhood named in param params$neighborhood <-   get_neighborhood(name = params$name) # Get appropriate orientation based on buffer parameters params$orientation <-   sf_bbox_asp(     bbox = st_bbox_ext(       x = params$neighborhood,       dist = params$dist,       diag_ratio = params$diag_ratio     ),     orientation = TRUE   )  # Get aspect ratio for content block based on paper size, margin, and orientation params$block_asp <-   get_asp(     paper = params$paper,     unit = params$unit,     margin = params$margin,     orientation = params$orientation,     block_asp = TRUE   )  # Get additional parameters based on the paper (used in later sections of this vignette) params$paper_df <-   get_paper(     paper = params$paper,     orientation = params$orientation   )  params$asp <- params$paper_df$asp params$width <- params$paper_df$width params$height <- params$paper_df$height  # Get map bounding box for neighborhood based on adjustment parameters block_bbox <-   st_bbox_ext(     x = params$neighborhood,     dist = params$dist,     diag_ratio = params$diag_ratio,     asp = params$asp_block   )  # Get nearby neighborhoods that overlap with the buffer and aspect ratio adjusted bounding box nearby_neighborhoods <-   get_neighborhood(     location = block_bbox   ) ggplot() +   layer_location_data(     data = \"baltimore_city_detailed\",     package = \"mapbaltimore\"   ) +   geom_sf(data = nearby_neighborhoods, alpha = 0.25, fill = \"yellow\") +   geom_sf(data = sf_bbox_to_sf(block_bbox), alpha = 0.25, fill = \"blue\") +   geom_sf(data = params$neighborhood, alpha = 0.25, fill = \"green\") +   layer_neatline(     data = nearby_neighborhoods   ) # Use partial to create a version of layer_location_data that applies a half-mile buffer to the specified neighborhood layer_half_mi_buffer <-    purrr::partial(     layer_location_data,     location = params$neighborhood,     dist = 0.5,     unit = \"mi\",     diag_ratio = NULL,     asp = get_asp(paper = \"letter\", orientation = \"landscape\")   ) ggplot() +   layer_half_mi_buffer(     data = params$type,     package = params$package,     aes(fill = name),     alpha = 0.75   ) +   guides(fill = \"none\") +   theme_void()"},{"path":[]},{"path":"/articles/ggsave_ext.html","id":"create-a-basemap-and-label-layer","dir":"Articles","previous_headings":"Make a map","what":"Create a basemap and label layer","title":"Map layout and themes with ggplot2 utility functions","text":"order maintain flexibility map layout process, may helpful set basemap covers larger area. example illustrates combine street center line data, neighborhood boundaries, labels residential neighborhoods larger basemap centered selected neighborhood.  layer_location_data() flexible wrapper function around several different types geoms sf objects including geoms ggrepel geomtextpath. makes easy create separate layers basemap, labels, features.","code":"basemap <-   ggplot() +   layer_location_data(     location = block_bbox,     data = \"streets\",     package = \"mapbaltimore\",     color = \"gray40\"   ) +   layer_location_data(     data = nearby_neighborhoods,     mapping = aes(fill = name),     color = NA,     alpha = 0.6   ) +   scale_fill_brewer() +   guides(     fill = \"none\"   )  basemap #> Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Blues is 9 #> Returning the palette you asked for with that many colors label_layer <-   layer_location_data(     location = block_bbox,     data = \"neighborhoods\",     package = \"mapbaltimore\",     geom = \"label\",     mapping = aes(label = name),     fn = ~ dplyr::filter(       .x,       name %in% nearby_neighborhoods$name,       type == \"Residential\"     ),     fill = \"white\",     color = \"black\"   )  basemap +   label_layer #> Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Blues is 9 #> Returning the palette you asked for with that many colors"},{"path":"/articles/ggsave_ext.html","id":"add-a-neatline-location-mask-or-location-boundary","dir":"Articles","previous_headings":"Make a map","what":"Add a neatline, location mask, or location boundary","title":"Map layout and themes with ggplot2 utility functions","text":"creating needed layers map, may want focus specific area clean appearance map removing grid lines axis labels. layer_neatline() function makes easy effectively “zoom” specific area hiding grid lines axis labels.  layer_mask() function also allow add layer_neatline() map along mask using parameters.","code":"neighborhood_map <-   basemap +   # Draw a neatline around the selected neighborhood   layer_neatline(     data = params$neighborhood,     diag_ratio = params$diag_ratio,     asp = params$paper_df$asp,     size = 1.5,     color = \"gray60\",     expand = TRUE   )  neighborhood_map #> Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Blues is 9 #> Returning the palette you asked for with that many colors basemap +   layer_mask(     data = params$neighborhood,     dist = 200,     asp = params$asp,     neatline = TRUE   ) #> Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Blues is 9 #> Returning the palette you asked for with that many colors letter_map <-   basemap +   birdseyeview::layer_show_location(     data = params$neighborhood,     dist = 200,     size = 1.5,     asp = get_asp(paper = \"letter\", margin = c(2, 1, 1.5, 1), block_asp = TRUE),     neatline = TRUE   )"},{"path":"/articles/ggsave_ext.html","id":"add-margins","dir":"Articles","previous_headings":"Make a map","what":"Add margins","title":"Map layout and themes with ggplot2 utility functions","text":"last step add margins. Margins can also include header footer ensure sufficient space title, subtitle, caption.  resulting map appears oddly proportioned display size vignette units ensure margin appropriately sized paper size provided.","code":"letter_map +   theme_margin(     paper = \"letter\",     margin = \"standard\",     header = 1,     footer = 0.5,     fill = \"gray90\"   ) # + #> Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Blues is 9 #> Returning the palette you asked for with that many colors #  labs_ext( #    title = \"{params$name} and nearby neighborhoods\", #    caption = \"Data courtesy {params$source}.\" #  )"},{"path":"/articles/ggsave_ext.html","id":"export-a-map","dir":"Articles","previous_headings":"","what":"Export a map","title":"Map layout and themes with ggplot2 utility functions","text":"Finally, ggsave_exif() function uses make_filename() function also used write_sf_ext() create consistent file names can optionally include date date-time prefix.","code":"make_filename(   name = \"Neighborhood map\",   label = params$name,   prefix = \"date\" ) #> [1] \"2022-03-24_harwood_neighborhood_map\""},{"path":"/articles/ggsave_ext.html","id":"save-map-with-ggsave_ext","dir":"Articles","previous_headings":"Export a map","what":"Save map with ggsave_ext","title":"Map layout and themes with ggplot2 utility functions","text":"dimensions exported file may set automatically based paper orientation. title author parameter used update EXIF metadata file exported. title author evaluated glue() allow use parameters label title map.","code":"ggsave_ext(   plot = neighborhood_map,   name = \"Neighborhood map\",   label = params$name,   title = \"Map of {params$name} and surrounding area\",   author = \"Eli Pousson\",   paper = params$paper,   orientation = params$orientation,   device = \"png\",   prefix = \"date\",   exif = TRUE,   bg = \"white\" )"},{"path":"/articles/working-sf-lists.html","id":"utility-functions-for-working-with-sf-lists","dir":"Articles","previous_headings":"","what":"Utility functions for working with sf lists","title":"Working with lists of simple feature objects","text":"start, as_sf_list can turn sf object list optionally use grouping column define list structured. use grouping column, list names taken value grouping column: Alternatively, character string length list can provided “nm” parameter: can check object sf list using is_sf_list. as_sf as_bbox can convert simple feature lists either single simple feature data frame single bounding box.","code":"nc <- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\"), quiet = TRUE)  nc_list_name <-   as_sf_list(x = nc, col = \"NAME\")  str(nc_list_name) #> List of 100 #>  $ alamance    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.111 #>   ..$ PERIMETER: num 1.39 #>   ..$ CNTY_    : num 1904 #>   ..$ CNTY_ID  : num 1904 #>   ..$ NAME     : chr \"Alamance\" #>   ..$ FIPS     : chr \"37001\" #>   ..$ FIPSNO   : num 37001 #>   ..$ CRESS_ID : int 1 #>   ..$ BIR74    : num 4672 #>   ..$ SID74    : num 13 #>   ..$ NWBIR74  : num 1243 #>   ..$ BIR79    : num 5767 #>   ..$ SID79    : num 11 #>   ..$ NWBIR79  : num 1397 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:10, 1:2] -79.2 -79.2 -79.5 -79.5 -79.5 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ alexander   : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.066 #>   ..$ PERIMETER: num 1.07 #>   ..$ CNTY_    : num 1950 #>   ..$ CNTY_ID  : num 1950 #>   ..$ NAME     : chr \"Alexander\" #>   ..$ FIPS     : chr \"37003\" #>   ..$ FIPSNO   : num 37003 #>   ..$ CRESS_ID : int 2 #>   ..$ BIR74    : num 1333 #>   ..$ SID74    : num 0 #>   ..$ NWBIR74  : num 128 #>   ..$ BIR79    : num 1683 #>   ..$ SID79    : num 2 #>   ..$ NWBIR79  : num 150 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:17, 1:2] -81.1 -81.1 -81.1 -81.3 -81.3 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ alleghany   : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.061 #>   ..$ PERIMETER: num 1.23 #>   ..$ CNTY_    : num 1827 #>   ..$ CNTY_ID  : num 1827 #>   ..$ NAME     : chr \"Alleghany\" #>   ..$ FIPS     : chr \"37005\" #>   ..$ FIPSNO   : num 37005 #>   ..$ CRESS_ID : int 3 #>   ..$ BIR74    : num 487 #>   ..$ SID74    : num 0 #>   ..$ NWBIR74  : num 10 #>   ..$ BIR79    : num 542 #>   ..$ SID79    : num 3 #>   ..$ NWBIR79  : num 12 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:26, 1:2] -81.2 -81.2 -81.3 -81.3 -81.3 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ anson       : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.138 #>   ..$ PERIMETER: num 1.62 #>   ..$ CNTY_    : num 2096 #>   ..$ CNTY_ID  : num 2096 #>   ..$ NAME     : chr \"Anson\" #>   ..$ FIPS     : chr \"37007\" #>   ..$ FIPSNO   : num 37007 #>   ..$ CRESS_ID : int 4 #>   ..$ BIR74    : num 1570 #>   ..$ SID74    : num 15 #>   ..$ NWBIR74  : num 952 #>   ..$ BIR79    : num 1875 #>   ..$ SID79    : num 4 #>   ..$ NWBIR79  : num 1161 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:27, 1:2] -79.9 -80.3 -80.3 -80.3 -80.2 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ ashe        : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.114 #>   ..$ PERIMETER: num 1.44 #>   ..$ CNTY_    : num 1825 #>   ..$ CNTY_ID  : num 1825 #>   ..$ NAME     : chr \"Ashe\" #>   ..$ FIPS     : chr \"37009\" #>   ..$ FIPSNO   : num 37009 #>   ..$ CRESS_ID : int 5 #>   ..$ BIR74    : num 1091 #>   ..$ SID74    : num 1 #>   ..$ NWBIR74  : num 10 #>   ..$ BIR79    : num 1364 #>   ..$ SID79    : num 0 #>   ..$ NWBIR79  : num 19 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:27, 1:2] -81.5 -81.5 -81.6 -81.6 -81.7 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ avery       : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.064 #>   ..$ PERIMETER: num 1.21 #>   ..$ CNTY_    : num 1892 #>   ..$ CNTY_ID  : num 1892 #>   ..$ NAME     : chr \"Avery\" #>   ..$ FIPS     : chr \"37011\" #>   ..$ FIPSNO   : num 37011 #>   ..$ CRESS_ID : int 6 #>   ..$ BIR74    : num 781 #>   ..$ SID74    : num 0 #>   ..$ NWBIR74  : num 4 #>   ..$ BIR79    : num 977 #>   ..$ SID79    : num 0 #>   ..$ NWBIR79  : num 5 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:28, 1:2] -81.9 -82 -81.9 -81.9 -82 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ beaufort    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.203 #>   ..$ PERIMETER: num 3.2 #>   ..$ CNTY_    : num 2004 #>   ..$ CNTY_ID  : num 2004 #>   ..$ NAME     : chr \"Beaufort\" #>   ..$ FIPS     : chr \"37013\" #>   ..$ FIPSNO   : num 37013 #>   ..$ CRESS_ID : int 7 #>   ..$ BIR74    : num 2692 #>   ..$ SID74    : num 7 #>   ..$ NWBIR74  : num 1131 #>   ..$ BIR79    : num 2909 #>   ..$ SID79    : num 4 #>   ..$ NWBIR79  : num 1163 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 2 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:25, 1:2] -77.1 -77.1 -77.1 -77.2 -77.2 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:11, 1:2] -76.6 -76.6 -76.9 -76.9 -77.2 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ bertie      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.18 #>   ..$ PERIMETER: num 2.15 #>   ..$ CNTY_    : num 1905 #>   ..$ CNTY_ID  : num 1905 #>   ..$ NAME     : chr \"Bertie\" #>   ..$ FIPS     : chr \"37015\" #>   ..$ FIPSNO   : num 37015 #>   ..$ CRESS_ID : int 8 #>   ..$ BIR74    : num 1324 #>   ..$ SID74    : num 6 #>   ..$ NWBIR74  : num 921 #>   ..$ BIR79    : num 1616 #>   ..$ SID79    : num 5 #>   ..$ NWBIR79  : num 1161 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:45, 1:2] -76.8 -76.8 -76.8 -76.9 -76.9 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ bladen      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.225 #>   ..$ PERIMETER: num 2.11 #>   ..$ CNTY_    : num 2162 #>   ..$ CNTY_ID  : num 2162 #>   ..$ NAME     : chr \"Bladen\" #>   ..$ FIPS     : chr \"37017\" #>   ..$ FIPSNO   : num 37017 #>   ..$ CRESS_ID : int 9 #>   ..$ BIR74    : num 1782 #>   ..$ SID74    : num 8 #>   ..$ NWBIR74  : num 818 #>   ..$ BIR79    : num 2052 #>   ..$ SID79    : num 5 #>   ..$ NWBIR79  : num 1023 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:31, 1:2] -78.3 -78.3 -78.4 -78.6 -78.7 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ brunswick   : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.212 #>   ..$ PERIMETER: num 2.02 #>   ..$ CNTY_    : num 2241 #>   ..$ CNTY_ID  : num 2241 #>   ..$ NAME     : chr \"Brunswick\" #>   ..$ FIPS     : chr \"37019\" #>   ..$ FIPSNO   : num 37019 #>   ..$ CRESS_ID : int 10 #>   ..$ BIR74    : num 2181 #>   ..$ SID74    : num 5 #>   ..$ NWBIR74  : num 659 #>   ..$ BIR79    : num 2655 #>   ..$ SID79    : num 6 #>   ..$ NWBIR79  : num 841 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:27, 1:2] -78.7 -78.6 -78.6 -78.6 -78.6 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ buncombe    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.168 #>   ..$ PERIMETER: num 2 #>   ..$ CNTY_    : num 1988 #>   ..$ CNTY_ID  : num 1988 #>   ..$ NAME     : chr \"Buncombe\" #>   ..$ FIPS     : chr \"37021\" #>   ..$ FIPSNO   : num 37021 #>   ..$ CRESS_ID : int 11 #>   ..$ BIR74    : num 7515 #>   ..$ SID74    : num 9 #>   ..$ NWBIR74  : num 930 #>   ..$ BIR79    : num 9956 #>   ..$ SID79    : num 18 #>   ..$ NWBIR79  : num 1206 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:45, 1:2] -82.3 -82.3 -82.4 -82.4 -82.4 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ burke       : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.134 #>   ..$ PERIMETER: num 1.75 #>   ..$ CNTY_    : num 1958 #>   ..$ CNTY_ID  : num 1958 #>   ..$ NAME     : chr \"Burke\" #>   ..$ FIPS     : chr \"37023\" #>   ..$ FIPSNO   : num 37023 #>   ..$ CRESS_ID : int 12 #>   ..$ BIR74    : num 3573 #>   ..$ SID74    : num 5 #>   ..$ NWBIR74  : num 326 #>   ..$ BIR79    : num 4314 #>   ..$ SID79    : num 15 #>   ..$ NWBIR79  : num 407 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:34, 1:2] -81.8 -81.9 -82 -82 -81.9 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ cabarrus    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.091 #>   ..$ PERIMETER: num 1.32 #>   ..$ CNTY_    : num 2042 #>   ..$ CNTY_ID  : num 2042 #>   ..$ NAME     : chr \"Cabarrus\" #>   ..$ FIPS     : chr \"37025\" #>   ..$ FIPSNO   : num 37025 #>   ..$ CRESS_ID : int 13 #>   ..$ BIR74    : num 4099 #>   ..$ SID74    : num 3 #>   ..$ NWBIR74  : num 856 #>   ..$ BIR79    : num 5669 #>   ..$ SID79    : num 20 #>   ..$ NWBIR79  : num 1203 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:14, 1:2] -80.5 -80.5 -80.7 -80.7 -80.8 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ caldwell    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.122 #>   ..$ PERIMETER: num 1.52 #>   ..$ CNTY_    : num 1932 #>   ..$ CNTY_ID  : num 1932 #>   ..$ NAME     : chr \"Caldwell\" #>   ..$ FIPS     : chr \"37027\" #>   ..$ FIPSNO   : num 37027 #>   ..$ CRESS_ID : int 14 #>   ..$ BIR74    : num 3609 #>   ..$ SID74    : num 6 #>   ..$ NWBIR74  : num 309 #>   ..$ BIR79    : num 4249 #>   ..$ SID79    : num 9 #>   ..$ NWBIR79  : num 360 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:27, 1:2] -81.3 -81.4 -81.4 -81.5 -81.6 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ camden      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.062 #>   ..$ PERIMETER: num 1.55 #>   ..$ CNTY_    : num 1834 #>   ..$ CNTY_ID  : num 1834 #>   ..$ NAME     : chr \"Camden\" #>   ..$ FIPS     : chr \"37029\" #>   ..$ FIPSNO   : num 37029 #>   ..$ CRESS_ID : int 15 #>   ..$ BIR74    : num 286 #>   ..$ SID74    : num 0 #>   ..$ NWBIR74  : num 115 #>   ..$ BIR79    : num 350 #>   ..$ SID79    : num 2 #>   ..$ NWBIR79  : num 139 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:24, 1:2] -76 -76 -76 -76.2 -76.2 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ carteret    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.125 #>   ..$ PERIMETER: num 2.87 #>   ..$ CNTY_    : num 2156 #>   ..$ CNTY_ID  : num 2156 #>   ..$ NAME     : chr \"Carteret\" #>   ..$ FIPS     : chr \"37031\" #>   ..$ FIPSNO   : num 37031 #>   ..$ CRESS_ID : int 16 #>   ..$ BIR74    : num 2414 #>   ..$ SID74    : num 5 #>   ..$ NWBIR74  : num 341 #>   ..$ BIR79    : num 3339 #>   ..$ SID79    : num 4 #>   ..$ NWBIR79  : num 487 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 2 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:21, 1:2] -77.1 -77.2 -77.2 -77.1 -77.1 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:9, 1:2] -76.5 -76.6 -76.5 -76.5 -76.4 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ caswell     : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.114 #>   ..$ PERIMETER: num 1.35 #>   ..$ CNTY_    : num 1838 #>   ..$ CNTY_ID  : num 1838 #>   ..$ NAME     : chr \"Caswell\" #>   ..$ FIPS     : chr \"37033\" #>   ..$ FIPSNO   : num 37033 #>   ..$ CRESS_ID : int 17 #>   ..$ BIR74    : num 1035 #>   ..$ SID74    : num 2 #>   ..$ NWBIR74  : num 550 #>   ..$ BIR79    : num 1253 #>   ..$ SID79    : num 2 #>   ..$ NWBIR79  : num 597 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:7, 1:2] -79.5 -79.5 -79.2 -79.1 -79.2 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ catawba     : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.106 #>   ..$ PERIMETER: num 1.44 #>   ..$ CNTY_    : num 1986 #>   ..$ CNTY_ID  : num 1986 #>   ..$ NAME     : chr \"Catawba\" #>   ..$ FIPS     : chr \"37035\" #>   ..$ FIPSNO   : num 37035 #>   ..$ CRESS_ID : int 18 #>   ..$ BIR74    : num 5754 #>   ..$ SID74    : num 5 #>   ..$ NWBIR74  : num 790 #>   ..$ BIR79    : num 6883 #>   ..$ SID79    : num 21 #>   ..$ NWBIR79  : num 914 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:14, 1:2] -81 -81.5 -81.5 -81.4 -81.4 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ chatham     : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.18 #>   ..$ PERIMETER: num 2.14 #>   ..$ CNTY_    : num 1973 #>   ..$ CNTY_ID  : num 1973 #>   ..$ NAME     : chr \"Chatham\" #>   ..$ FIPS     : chr \"37037\" #>   ..$ FIPSNO   : num 37037 #>   ..$ CRESS_ID : int 19 #>   ..$ BIR74    : num 1646 #>   ..$ SID74    : num 2 #>   ..$ NWBIR74  : num 591 #>   ..$ BIR79    : num 2398 #>   ..$ SID79    : num 3 #>   ..$ NWBIR79  : num 687 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:27, 1:2] -79.6 -79.5 -79.2 -79.2 -79.1 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ cherokee    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.12 #>   ..$ PERIMETER: num 1.69 #>   ..$ CNTY_    : num 2088 #>   ..$ CNTY_ID  : num 2088 #>   ..$ NAME     : chr \"Cherokee\" #>   ..$ FIPS     : chr \"37039\" #>   ..$ FIPSNO   : num 37039 #>   ..$ CRESS_ID : int 20 #>   ..$ BIR74    : num 1027 #>   ..$ SID74    : num 2 #>   ..$ NWBIR74  : num 32 #>   ..$ BIR79    : num 1173 #>   ..$ SID79    : num 1 #>   ..$ NWBIR79  : num 42 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:27, 1:2] -84.3 -84.2 -84.2 -84.1 -84 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ chowan      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.044 #>   ..$ PERIMETER: num 1.16 #>   ..$ CNTY_    : num 1887 #>   ..$ CNTY_ID  : num 1887 #>   ..$ NAME     : chr \"Chowan\" #>   ..$ FIPS     : chr \"37041\" #>   ..$ FIPSNO   : num 37041 #>   ..$ CRESS_ID : int 21 #>   ..$ BIR74    : num 751 #>   ..$ SID74    : num 1 #>   ..$ NWBIR74  : num 368 #>   ..$ BIR79    : num 899 #>   ..$ SID79    : num 1 #>   ..$ NWBIR79  : num 491 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:17, 1:2] -76.7 -76.6 -76.6 -76.6 -76.6 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ clay        : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.051 #>   ..$ PERIMETER: num 1.1 #>   ..$ CNTY_    : num 2109 #>   ..$ CNTY_ID  : num 2109 #>   ..$ NAME     : chr \"Clay\" #>   ..$ FIPS     : chr \"37043\" #>   ..$ FIPSNO   : num 37043 #>   ..$ CRESS_ID : int 22 #>   ..$ BIR74    : num 284 #>   ..$ SID74    : num 0 #>   ..$ NWBIR74  : num 1 #>   ..$ BIR79    : num 419 #>   ..$ SID79    : num 0 #>   ..$ NWBIR79  : num 5 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:17, 1:2] -83.9 -84 -84 -84 -83.9 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ cleveland   : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.118 #>   ..$ PERIMETER: num 1.51 #>   ..$ CNTY_    : num 2032 #>   ..$ CNTY_ID  : num 2032 #>   ..$ NAME     : chr \"Cleveland\" #>   ..$ FIPS     : chr \"37045\" #>   ..$ FIPSNO   : num 37045 #>   ..$ CRESS_ID : int 23 #>   ..$ BIR74    : num 4866 #>   ..$ SID74    : num 10 #>   ..$ NWBIR74  : num 1491 #>   ..$ BIR79    : num 5526 #>   ..$ SID79    : num 21 #>   ..$ NWBIR79  : num 1729 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:21, 1:2] -81.3 -81.4 -81.8 -81.8 -81.7 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ columbus    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.24 #>   ..$ PERIMETER: num 2.37 #>   ..$ CNTY_    : num 2232 #>   ..$ CNTY_ID  : num 2232 #>   ..$ NAME     : chr \"Columbus\" #>   ..$ FIPS     : chr \"37047\" #>   ..$ FIPSNO   : num 37047 #>   ..$ CRESS_ID : int 24 #>   ..$ BIR74    : num 3350 #>   ..$ SID74    : num 15 #>   ..$ NWBIR74  : num 1431 #>   ..$ BIR79    : num 4144 #>   ..$ SID79    : num 17 #>   ..$ NWBIR79  : num 1832 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:33, 1:2] -78.7 -79.1 -79 -79 -79 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ craven      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.177 #>   ..$ PERIMETER: num 2.92 #>   ..$ CNTY_    : num 2119 #>   ..$ CNTY_ID  : num 2119 #>   ..$ NAME     : chr \"Craven\" #>   ..$ FIPS     : chr \"37049\" #>   ..$ FIPSNO   : num 37049 #>   ..$ CRESS_ID : int 25 #>   ..$ BIR74    : num 5868 #>   ..$ SID74    : num 13 #>   ..$ NWBIR74  : num 1744 #>   ..$ BIR79    : num 7595 #>   ..$ SID79    : num 18 #>   ..$ NWBIR79  : num 2342 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 2 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:29, 1:2] -76.9 -76.9 -77 -77 -77 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:10, 1:2] -76.6 -76.6 -76.8 -77 -77.1 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ cumberland  : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.172 #>   ..$ PERIMETER: num 1.83 #>   ..$ CNTY_    : num 2090 #>   ..$ CNTY_ID  : num 2090 #>   ..$ NAME     : chr \"Cumberland\" #>   ..$ FIPS     : chr \"37051\" #>   ..$ FIPSNO   : num 37051 #>   ..$ CRESS_ID : int 26 #>   ..$ BIR74    : num 20366 #>   ..$ SID74    : num 38 #>   ..$ NWBIR74  : num 7043 #>   ..$ BIR79    : num 26370 #>   ..$ SID79    : num 57 #>   ..$ NWBIR79  : num 10614 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:29, 1:2] -78.5 -78.5 -78.8 -78.9 -78.9 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ currituck   : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.07 #>   ..$ PERIMETER: num 2.97 #>   ..$ CNTY_    : num 1831 #>   ..$ CNTY_ID  : num 1831 #>   ..$ NAME     : chr \"Currituck\" #>   ..$ FIPS     : chr \"37053\" #>   ..$ FIPSNO   : num 37053 #>   ..$ CRESS_ID : int 27 #>   ..$ BIR74    : num 508 #>   ..$ SID74    : num 1 #>   ..$ NWBIR74  : num 123 #>   ..$ BIR79    : num 830 #>   ..$ SID79    : num 2 #>   ..$ NWBIR79  : num 145 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 3 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:26, 1:2] -76 -76 -76 -76 -76.1 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:7, 1:2] -76 -76 -75.9 -75.9 -76 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:5, 1:2] -75.9 -75.9 -75.8 -75.8 -75.9 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ dare        : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.094 #>   ..$ PERIMETER: num 3.64 #>   ..$ CNTY_    : num 2000 #>   ..$ CNTY_ID  : num 2000 #>   ..$ NAME     : chr \"Dare\" #>   ..$ FIPS     : chr \"37055\" #>   ..$ FIPSNO   : num 37055 #>   ..$ CRESS_ID : int 28 #>   ..$ BIR74    : num 521 #>   ..$ SID74    : num 0 #>   ..$ NWBIR74  : num 43 #>   ..$ BIR79    : num 1059 #>   ..$ SID79    : num 1 #>   ..$ NWBIR79  : num 73 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 3 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:6, 1:2] -75.8 -75.8 -75.5 -75.7 -75.7 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:9, 1:2] -75.9 -75.9 -76 -76 -75.8 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:9, 1:2] -75.5 -75.5 -75.5 -75.5 -75.7 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ davidson    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.145 #>   ..$ PERIMETER: num 1.79 #>   ..$ CNTY_    : num 1951 #>   ..$ CNTY_ID  : num 1951 #>   ..$ NAME     : chr \"Davidson\" #>   ..$ FIPS     : chr \"37057\" #>   ..$ FIPSNO   : num 37057 #>   ..$ CRESS_ID : int 29 #>   ..$ BIR74    : num 5509 #>   ..$ SID74    : num 8 #>   ..$ NWBIR74  : num 736 #>   ..$ BIR79    : num 7143 #>   ..$ SID79    : num 8 #>   ..$ NWBIR79  : num 941 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:31, 1:2] -80.1 -80.2 -80.2 -80.3 -80.3 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ davie       : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.069 #>   ..$ PERIMETER: num 1.2 #>   ..$ CNTY_    : num 1948 #>   ..$ CNTY_ID  : num 1948 #>   ..$ NAME     : chr \"Davie\" #>   ..$ FIPS     : chr \"37059\" #>   ..$ FIPSNO   : num 37059 #>   ..$ CRESS_ID : int 30 #>   ..$ BIR74    : num 1207 #>   ..$ SID74    : num 1 #>   ..$ NWBIR74  : num 148 #>   ..$ BIR79    : num 1438 #>   ..$ SID79    : num 3 #>   ..$ NWBIR79  : num 177 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:29, 1:2] -80.5 -80.5 -80.5 -80.6 -80.6 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ duplin      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.204 #>   ..$ PERIMETER: num 1.87 #>   ..$ CNTY_    : num 2100 #>   ..$ CNTY_ID  : num 2100 #>   ..$ NAME     : chr \"Duplin\" #>   ..$ FIPS     : chr \"37061\" #>   ..$ FIPSNO   : num 37061 #>   ..$ CRESS_ID : int 31 #>   ..$ BIR74    : num 2483 #>   ..$ SID74    : num 4 #>   ..$ NWBIR74  : num 1061 #>   ..$ BIR79    : num 2777 #>   ..$ SID79    : num 7 #>   ..$ NWBIR79  : num 1227 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:30, 1:2] -77.7 -77.9 -77.9 -78 -78 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ durham      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.077 #>   ..$ PERIMETER: num 1.27 #>   ..$ CNTY_    : num 1908 #>   ..$ CNTY_ID  : num 1908 #>   ..$ NAME     : chr \"Durham\" #>   ..$ FIPS     : chr \"37063\" #>   ..$ FIPSNO   : num 37063 #>   ..$ CRESS_ID : int 32 #>   ..$ BIR74    : num 7970 #>   ..$ SID74    : num 16 #>   ..$ NWBIR74  : num 3732 #>   ..$ BIR79    : num 10432 #>   ..$ SID79    : num 22 #>   ..$ NWBIR79  : num 4948 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:18, 1:2] -79 -79 -78.8 -78.8 -78.8 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ edgecombe   : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.131 #>   ..$ PERIMETER: num 1.52 #>   ..$ CNTY_    : num 1928 #>   ..$ CNTY_ID  : num 1928 #>   ..$ NAME     : chr \"Edgecombe\" #>   ..$ FIPS     : chr \"37065\" #>   ..$ FIPSNO   : num 37065 #>   ..$ CRESS_ID : int 33 #>   ..$ BIR74    : num 3657 #>   ..$ SID74    : num 10 #>   ..$ NWBIR74  : num 2186 #>   ..$ BIR79    : num 4359 #>   ..$ SID79    : num 9 #>   ..$ NWBIR79  : num 2696 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:28, 1:2] -77.7 -77.7 -77.8 -77.8 -77.8 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ forsyth     : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.108 #>   ..$ PERIMETER: num 1.48 #>   ..$ CNTY_    : num 1900 #>   ..$ CNTY_ID  : num 1900 #>   ..$ NAME     : chr \"Forsyth\" #>   ..$ FIPS     : chr \"37067\" #>   ..$ FIPSNO   : num 37067 #>   ..$ CRESS_ID : int 34 #>   ..$ BIR74    : num 11858 #>   ..$ SID74    : num 10 #>   ..$ NWBIR74  : num 3919 #>   ..$ BIR79    : num 15704 #>   ..$ SID79    : num 18 #>   ..$ NWBIR79  : num 5031 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:22, 1:2] -80 -80.1 -80.2 -80.2 -80.3 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ franklin    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.128 #>   ..$ PERIMETER: num 1.55 #>   ..$ CNTY_    : num 1897 #>   ..$ CNTY_ID  : num 1897 #>   ..$ NAME     : chr \"Franklin\" #>   ..$ FIPS     : chr \"37069\" #>   ..$ FIPSNO   : num 37069 #>   ..$ CRESS_ID : int 35 #>   ..$ BIR74    : num 1399 #>   ..$ SID74    : num 2 #>   ..$ NWBIR74  : num 736 #>   ..$ BIR79    : num 1863 #>   ..$ SID79    : num 0 #>   ..$ NWBIR79  : num 950 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:20, 1:2] -78.3 -78.3 -78.3 -78.3 -78.4 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ gaston      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.091 #>   ..$ PERIMETER: num 1.47 #>   ..$ CNTY_    : num 2068 #>   ..$ CNTY_ID  : num 2068 #>   ..$ NAME     : chr \"Gaston\" #>   ..$ FIPS     : chr \"37071\" #>   ..$ FIPSNO   : num 37071 #>   ..$ CRESS_ID : int 36 #>   ..$ BIR74    : num 9014 #>   ..$ SID74    : num 11 #>   ..$ NWBIR74  : num 1523 #>   ..$ BIR79    : num 11455 #>   ..$ SID79    : num 26 #>   ..$ NWBIR79  : num 2194 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:19, 1:2] -81.3 -81.3 -81.3 -81.4 -81.4 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ gates       : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.091 #>   ..$ PERIMETER: num 1.28 #>   ..$ CNTY_    : num 1835 #>   ..$ CNTY_ID  : num 1835 #>   ..$ NAME     : chr \"Gates\" #>   ..$ FIPS     : chr \"37073\" #>   ..$ FIPSNO   : num 37073 #>   ..$ CRESS_ID : int 37 #>   ..$ BIR74    : num 420 #>   ..$ SID74    : num 0 #>   ..$ NWBIR74  : num 254 #>   ..$ BIR79    : num 594 #>   ..$ SID79    : num 2 #>   ..$ NWBIR79  : num 371 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:17, 1:2] -76.6 -76.6 -76.6 -76.7 -76.8 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ graham      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.078 #>   ..$ PERIMETER: num 1.2 #>   ..$ CNTY_    : num 2056 #>   ..$ CNTY_ID  : num 2056 #>   ..$ NAME     : chr \"Graham\" #>   ..$ FIPS     : chr \"37075\" #>   ..$ FIPSNO   : num 37075 #>   ..$ CRESS_ID : int 38 #>   ..$ BIR74    : num 415 #>   ..$ SID74    : num 0 #>   ..$ NWBIR74  : num 40 #>   ..$ BIR79    : num 488 #>   ..$ SID79    : num 1 #>   ..$ NWBIR79  : num 45 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:27, 1:2] -83.7 -83.8 -83.8 -83.8 -83.9 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ granville   : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.143 #>   ..$ PERIMETER: num 1.66 #>   ..$ CNTY_    : num 1840 #>   ..$ CNTY_ID  : num 1840 #>   ..$ NAME     : chr \"Granville\" #>   ..$ FIPS     : chr \"37077\" #>   ..$ FIPSNO   : num 37077 #>   ..$ CRESS_ID : int 39 #>   ..$ BIR74    : num 1671 #>   ..$ SID74    : num 4 #>   ..$ NWBIR74  : num 930 #>   ..$ BIR79    : num 2074 #>   ..$ SID79    : num 4 #>   ..$ NWBIR79  : num 1058 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:17, 1:2] -78.7 -78.8 -78.8 -78.8 -78.8 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ greene      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.07 #>   ..$ PERIMETER: num 1.1 #>   ..$ CNTY_    : num 2016 #>   ..$ CNTY_ID  : num 2016 #>   ..$ NAME     : chr \"Greene\" #>   ..$ FIPS     : chr \"37079\" #>   ..$ FIPSNO   : num 37079 #>   ..$ CRESS_ID : int 40 #>   ..$ BIR74    : num 870 #>   ..$ SID74    : num 4 #>   ..$ NWBIR74  : num 534 #>   ..$ BIR79    : num 1178 #>   ..$ SID79    : num 4 #>   ..$ NWBIR79  : num 664 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:23, 1:2] -77.8 -77.8 -77.8 -77.8 -77.7 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ guilford    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.17 #>   ..$ PERIMETER: num 1.68 #>   ..$ CNTY_    : num 1903 #>   ..$ CNTY_ID  : num 1903 #>   ..$ NAME     : chr \"Guilford\" #>   ..$ FIPS     : chr \"37081\" #>   ..$ FIPSNO   : num 37081 #>   ..$ CRESS_ID : int 41 #>   ..$ BIR74    : num 16184 #>   ..$ SID74    : num 23 #>   ..$ NWBIR74  : num 5483 #>   ..$ BIR79    : num 20543 #>   ..$ SID79    : num 38 #>   ..$ NWBIR79  : num 7089 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:6, 1:2] -79.5 -80 -80 -80 -79.5 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ halifax     : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.19 #>   ..$ PERIMETER: num 2.2 #>   ..$ CNTY_    : num 1846 #>   ..$ CNTY_ID  : num 1846 #>   ..$ NAME     : chr \"Halifax\" #>   ..$ FIPS     : chr \"37083\" #>   ..$ FIPSNO   : num 37083 #>   ..$ CRESS_ID : int 42 #>   ..$ BIR74    : num 3608 #>   ..$ SID74    : num 18 #>   ..$ NWBIR74  : num 2365 #>   ..$ BIR79    : num 4463 #>   ..$ SID79    : num 17 #>   ..$ NWBIR79  : num 2980 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:53, 1:2] -77.3 -77.4 -77.4 -77.4 -77.5 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ harnett     : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.154 #>   ..$ PERIMETER: num 1.68 #>   ..$ CNTY_    : num 2030 #>   ..$ CNTY_ID  : num 2030 #>   ..$ NAME     : chr \"Harnett\" #>   ..$ FIPS     : chr \"37085\" #>   ..$ FIPSNO   : num 37085 #>   ..$ CRESS_ID : int 43 #>   ..$ BIR74    : num 3776 #>   ..$ SID74    : num 6 #>   ..$ NWBIR74  : num 1051 #>   ..$ BIR79    : num 4789 #>   ..$ SID79    : num 10 #>   ..$ NWBIR79  : num 1453 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:22, 1:2] -78.6 -78.7 -78.8 -78.9 -78.9 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ haywood     : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.144 #>   ..$ PERIMETER: num 1.69 #>   ..$ CNTY_    : num 1996 #>   ..$ CNTY_ID  : num 1996 #>   ..$ NAME     : chr \"Haywood\" #>   ..$ FIPS     : chr \"37087\" #>   ..$ FIPSNO   : num 37087 #>   ..$ CRESS_ID : int 44 #>   ..$ BIR74    : num 2110 #>   ..$ SID74    : num 2 #>   ..$ NWBIR74  : num 57 #>   ..$ BIR79    : num 2463 #>   ..$ SID79    : num 8 #>   ..$ NWBIR79  : num 62 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:39, 1:2] -82.7 -82.8 -82.9 -83 -83 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ henderson   : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.095 #>   ..$ PERIMETER: num 1.47 #>   ..$ CNTY_    : num 2047 #>   ..$ CNTY_ID  : num 2047 #>   ..$ NAME     : chr \"Henderson\" #>   ..$ FIPS     : chr \"37089\" #>   ..$ FIPSNO   : num 37089 #>   ..$ CRESS_ID : int 45 #>   ..$ BIR74    : num 2574 #>   ..$ SID74    : num 5 #>   ..$ NWBIR74  : num 158 #>   ..$ BIR79    : num 3679 #>   ..$ SID79    : num 8 #>   ..$ NWBIR79  : num 264 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:35, 1:2] -82.6 -82.6 -82.6 -82.6 -82.6 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ hertford    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.097 #>   ..$ PERIMETER: num 1.67 #>   ..$ CNTY_    : num 1833 #>   ..$ CNTY_ID  : num 1833 #>   ..$ NAME     : chr \"Hertford\" #>   ..$ FIPS     : chr \"37091\" #>   ..$ FIPSNO   : num 37091 #>   ..$ CRESS_ID : int 46 #>   ..$ BIR74    : num 1452 #>   ..$ SID74    : num 7 #>   ..$ NWBIR74  : num 954 #>   ..$ BIR79    : num 1838 #>   ..$ SID79    : num 5 #>   ..$ NWBIR79  : num 1237 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:22, 1:2] -76.7 -77 -77 -77.1 -77.2 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ hoke        : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.098 #>   ..$ PERIMETER: num 1.26 #>   ..$ CNTY_    : num 2097 #>   ..$ CNTY_ID  : num 2097 #>   ..$ NAME     : chr \"Hoke\" #>   ..$ FIPS     : chr \"37093\" #>   ..$ FIPSNO   : num 37093 #>   ..$ CRESS_ID : int 47 #>   ..$ BIR74    : num 1494 #>   ..$ SID74    : num 7 #>   ..$ NWBIR74  : num 987 #>   ..$ BIR79    : num 1706 #>   ..$ SID79    : num 6 #>   ..$ NWBIR79  : num 1172 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:14, 1:2] -79.3 -79.4 -79.4 -79.5 -79.4 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ hyde        : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.167 #>   ..$ PERIMETER: num 2.71 #>   ..$ CNTY_    : num 2099 #>   ..$ CNTY_ID  : num 2099 #>   ..$ NAME     : chr \"Hyde\" #>   ..$ FIPS     : chr \"37095\" #>   ..$ FIPSNO   : num 37095 #>   ..$ CRESS_ID : int 48 #>   ..$ BIR74    : num 338 #>   ..$ SID74    : num 0 #>   ..$ NWBIR74  : num 134 #>   ..$ BIR79    : num 427 #>   ..$ SID79    : num 0 #>   ..$ NWBIR79  : num 169 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 2 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:23, 1:2] -76.5 -76.5 -76.6 -76.6 -76.6 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:8, 1:2] -76 -76 -75.9 -75.8 -75.8 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ iredell     : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.155 #>   ..$ PERIMETER: num 1.78 #>   ..$ CNTY_    : num 1947 #>   ..$ CNTY_ID  : num 1947 #>   ..$ NAME     : chr \"Iredell\" #>   ..$ FIPS     : chr \"37097\" #>   ..$ FIPSNO   : num 37097 #>   ..$ CRESS_ID : int 49 #>   ..$ BIR74    : num 4139 #>   ..$ SID74    : num 4 #>   ..$ NWBIR74  : num 1144 #>   ..$ BIR79    : num 5400 #>   ..$ SID79    : num 5 #>   ..$ NWBIR79  : num 1305 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:19, 1:2] -80.7 -80.8 -81 -81 -81 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ jackson     : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.125 #>   ..$ PERIMETER: num 1.6 #>   ..$ CNTY_    : num 2039 #>   ..$ CNTY_ID  : num 2039 #>   ..$ NAME     : chr \"Jackson\" #>   ..$ FIPS     : chr \"37099\" #>   ..$ FIPSNO   : num 37099 #>   ..$ CRESS_ID : int 50 #>   ..$ BIR74    : num 1143 #>   ..$ SID74    : num 2 #>   ..$ NWBIR74  : num 215 #>   ..$ BIR79    : num 1504 #>   ..$ SID79    : num 5 #>   ..$ NWBIR79  : num 307 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:36, 1:2] -83.1 -83.2 -83.1 -83.1 -83.2 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ johnston    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.207 #>   ..$ PERIMETER: num 1.85 #>   ..$ CNTY_    : num 1989 #>   ..$ CNTY_ID  : num 1989 #>   ..$ NAME     : chr \"Johnston\" #>   ..$ FIPS     : chr \"37101\" #>   ..$ FIPSNO   : num 37101 #>   ..$ CRESS_ID : int 51 #>   ..$ BIR74    : num 3999 #>   ..$ SID74    : num 6 #>   ..$ NWBIR74  : num 1165 #>   ..$ BIR79    : num 4780 #>   ..$ SID79    : num 13 #>   ..$ NWBIR79  : num 1349 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:27, 1:2] -78.5 -78.5 -78.6 -78.6 -78.7 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ jones       : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.121 #>   ..$ PERIMETER: num 1.98 #>   ..$ CNTY_    : num 2091 #>   ..$ CNTY_ID  : num 2091 #>   ..$ NAME     : chr \"Jones\" #>   ..$ FIPS     : chr \"37103\" #>   ..$ FIPSNO   : num 37103 #>   ..$ CRESS_ID : int 52 #>   ..$ BIR74    : num 578 #>   ..$ SID74    : num 1 #>   ..$ NWBIR74  : num 297 #>   ..$ BIR79    : num 650 #>   ..$ SID79    : num 2 #>   ..$ NWBIR79  : num 305 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:31, 1:2] -77 -77.1 -77.1 -77.1 -77.2 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ lee         : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.065 #>   ..$ PERIMETER: num 1.09 #>   ..$ CNTY_    : num 2026 #>   ..$ CNTY_ID  : num 2026 #>   ..$ NAME     : chr \"Lee\" #>   ..$ FIPS     : chr \"37105\" #>   ..$ FIPSNO   : num 37105 #>   ..$ CRESS_ID : int 53 #>   ..$ BIR74    : num 2252 #>   ..$ SID74    : num 5 #>   ..$ NWBIR74  : num 736 #>   ..$ BIR79    : num 2949 #>   ..$ SID79    : num 6 #>   ..$ NWBIR79  : num 905 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:24, 1:2] -79.2 -79.3 -79.3 -79.3 -79.3 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ lenoir      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.104 #>   ..$ PERIMETER: num 1.55 #>   ..$ CNTY_    : num 2065 #>   ..$ CNTY_ID  : num 2065 #>   ..$ NAME     : chr \"Lenoir\" #>   ..$ FIPS     : chr \"37107\" #>   ..$ FIPSNO   : num 37107 #>   ..$ CRESS_ID : int 54 #>   ..$ BIR74    : num 3589 #>   ..$ SID74    : num 10 #>   ..$ NWBIR74  : num 1826 #>   ..$ BIR79    : num 4225 #>   ..$ SID79    : num 14 #>   ..$ NWBIR79  : num 2047 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:31, 1:2] -77.8 -77.8 -77.8 -77.8 -77.7 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ lincoln     : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.078 #>   ..$ PERIMETER: num 1.38 #>   ..$ CNTY_    : num 2034 #>   ..$ CNTY_ID  : num 2034 #>   ..$ NAME     : chr \"Lincoln\" #>   ..$ FIPS     : chr \"37109\" #>   ..$ FIPSNO   : num 37109 #>   ..$ CRESS_ID : int 55 #>   ..$ BIR74    : num 2216 #>   ..$ SID74    : num 8 #>   ..$ NWBIR74  : num 302 #>   ..$ BIR79    : num 2817 #>   ..$ SID79    : num 7 #>   ..$ NWBIR79  : num 350 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:11, 1:2] -81 -81.4 -81.5 -81.5 -81.5 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ macon       : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.131 #>   ..$ PERIMETER: num 1.68 #>   ..$ CNTY_    : num 2082 #>   ..$ CNTY_ID  : num 2082 #>   ..$ NAME     : chr \"Macon\" #>   ..$ FIPS     : chr \"37113\" #>   ..$ FIPSNO   : num 37113 #>   ..$ CRESS_ID : int 57 #>   ..$ BIR74    : num 797 #>   ..$ SID74    : num 0 #>   ..$ NWBIR74  : num 9 #>   ..$ BIR79    : num 1157 #>   ..$ SID79    : num 3 #>   ..$ NWBIR79  : num 22 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:29, 1:2] -83.1 -83.5 -83.5 -83.6 -83.6 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ madison     : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.118 #>   ..$ PERIMETER: num 1.6 #>   ..$ CNTY_    : num 1946 #>   ..$ CNTY_ID  : num 1946 #>   ..$ NAME     : chr \"Madison\" #>   ..$ FIPS     : chr \"37115\" #>   ..$ FIPSNO   : num 37115 #>   ..$ CRESS_ID : int 58 #>   ..$ BIR74    : num 765 #>   ..$ SID74    : num 2 #>   ..$ NWBIR74  : num 5 #>   ..$ BIR79    : num 926 #>   ..$ SID79    : num 2 #>   ..$ NWBIR79  : num 3 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:30, 1:2] -82.9 -82.9 -82.8 -82.8 -82.8 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ martin      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.118 #>   ..$ PERIMETER: num 1.9 #>   ..$ CNTY_    : num 1937 #>   ..$ CNTY_ID  : num 1937 #>   ..$ NAME     : chr \"Martin\" #>   ..$ FIPS     : chr \"37117\" #>   ..$ FIPSNO   : num 37117 #>   ..$ CRESS_ID : int 59 #>   ..$ BIR74    : num 1549 #>   ..$ SID74    : num 2 #>   ..$ NWBIR74  : num 883 #>   ..$ BIR79    : num 1849 #>   ..$ SID79    : num 1 #>   ..$ NWBIR79  : num 1033 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:37, 1:2] -77.2 -77.2 -77.3 -77.3 -77.4 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ mc_dowell   : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.116 #>   ..$ PERIMETER: num 1.66 #>   ..$ CNTY_    : num 1964 #>   ..$ CNTY_ID  : num 1964 #>   ..$ NAME     : chr \"McDowell\" #>   ..$ FIPS     : chr \"37111\" #>   ..$ FIPSNO   : num 37111 #>   ..$ CRESS_ID : int 56 #>   ..$ BIR74    : num 1946 #>   ..$ SID74    : num 5 #>   ..$ NWBIR74  : num 134 #>   ..$ BIR79    : num 2215 #>   ..$ SID79    : num 5 #>   ..$ NWBIR79  : num 128 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:35, 1:2] -81.8 -81.8 -81.8 -81.9 -82 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ mecklenburg : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.143 #>   ..$ PERIMETER: num 1.89 #>   ..$ CNTY_    : num 2041 #>   ..$ CNTY_ID  : num 2041 #>   ..$ NAME     : chr \"Mecklenburg\" #>   ..$ FIPS     : chr \"37119\" #>   ..$ FIPSNO   : num 37119 #>   ..$ CRESS_ID : int 60 #>   ..$ BIR74    : num 21588 #>   ..$ SID74    : num 44 #>   ..$ NWBIR74  : num 8027 #>   ..$ BIR79    : num 30757 #>   ..$ SID79    : num 35 #>   ..$ NWBIR79  : num 11631 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:31, 1:2] -81 -81 -81 -81 -81 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ mitchell    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.059 #>   ..$ PERIMETER: num 1.32 #>   ..$ CNTY_    : num 1927 #>   ..$ CNTY_ID  : num 1927 #>   ..$ NAME     : chr \"Mitchell\" #>   ..$ FIPS     : chr \"37121\" #>   ..$ FIPSNO   : num 37121 #>   ..$ CRESS_ID : int 61 #>   ..$ BIR74    : num 671 #>   ..$ SID74    : num 0 #>   ..$ NWBIR74  : num 1 #>   ..$ BIR79    : num 919 #>   ..$ SID79    : num 2 #>   ..$ NWBIR79  : num 4 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:34, 1:2] -82.1 -82.1 -82.1 -82.1 -82.2 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ montgomery  : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.13 #>   ..$ PERIMETER: num 1.73 #>   ..$ CNTY_    : num 2044 #>   ..$ CNTY_ID  : num 2044 #>   ..$ NAME     : chr \"Montgomery\" #>   ..$ FIPS     : chr \"37123\" #>   ..$ FIPSNO   : num 37123 #>   ..$ CRESS_ID : int 62 #>   ..$ BIR74    : num 1258 #>   ..$ SID74    : num 3 #>   ..$ NWBIR74  : num 472 #>   ..$ BIR79    : num 1598 #>   ..$ SID79    : num 8 #>   ..$ NWBIR79  : num 588 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:24, 1:2] -80.1 -80.1 -80.1 -80.1 -80.1 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ moore       : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.181 #>   ..$ PERIMETER: num 1.98 #>   ..$ CNTY_    : num 2040 #>   ..$ CNTY_ID  : num 2040 #>   ..$ NAME     : chr \"Moore\" #>   ..$ FIPS     : chr \"37125\" #>   ..$ FIPSNO   : num 37125 #>   ..$ CRESS_ID : int 63 #>   ..$ BIR74    : num 2648 #>   ..$ SID74    : num 5 #>   ..$ NWBIR74  : num 844 #>   ..$ BIR79    : num 3534 #>   ..$ SID79    : num 5 #>   ..$ NWBIR79  : num 1151 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:29, 1:2] -79.6 -79.6 -79.7 -79.8 -79.6 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ nash        : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.142 #>   ..$ PERIMETER: num 1.64 #>   ..$ CNTY_    : num 1913 #>   ..$ CNTY_ID  : num 1913 #>   ..$ NAME     : chr \"Nash\" #>   ..$ FIPS     : chr \"37127\" #>   ..$ FIPSNO   : num 37127 #>   ..$ CRESS_ID : int 64 #>   ..$ BIR74    : num 4021 #>   ..$ SID74    : num 8 #>   ..$ NWBIR74  : num 1851 #>   ..$ BIR79    : num 5189 #>   ..$ SID79    : num 7 #>   ..$ NWBIR79  : num 2274 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:23, 1:2] -78.2 -78.2 -78.2 -78.2 -78.3 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ new_hanover : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.042 #>   ..$ PERIMETER: num 0.999 #>   ..$ CNTY_    : num 2238 #>   ..$ CNTY_ID  : num 2238 #>   ..$ NAME     : chr \"New Hanover\" #>   ..$ FIPS     : chr \"37129\" #>   ..$ FIPSNO   : num 37129 #>   ..$ CRESS_ID : int 65 #>   ..$ BIR74    : num 5526 #>   ..$ SID74    : num 12 #>   ..$ NWBIR74  : num 1633 #>   ..$ BIR79    : num 6917 #>   ..$ SID79    : num 9 #>   ..$ NWBIR79  : num 2100 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:23, 1:2] -78 -78 -78 -78 -78 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ northampton : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.153 #>   ..$ PERIMETER: num 2.21 #>   ..$ CNTY_    : num 1832 #>   ..$ CNTY_ID  : num 1832 #>   ..$ NAME     : chr \"Northampton\" #>   ..$ FIPS     : chr \"37131\" #>   ..$ FIPSNO   : num 37131 #>   ..$ CRESS_ID : int 66 #>   ..$ BIR74    : num 1421 #>   ..$ SID74    : num 9 #>   ..$ NWBIR74  : num 1066 #>   ..$ BIR79    : num 1606 #>   ..$ SID79    : num 3 #>   ..$ NWBIR79  : num 1197 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:34, 1:2] -77.2 -77.2 -77.3 -77.3 -77.3 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ onslow      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.195 #>   ..$ PERIMETER: num 1.78 #>   ..$ CNTY_    : num 2146 #>   ..$ CNTY_ID  : num 2146 #>   ..$ NAME     : chr \"Onslow\" #>   ..$ FIPS     : chr \"37133\" #>   ..$ FIPSNO   : num 37133 #>   ..$ CRESS_ID : int 67 #>   ..$ BIR74    : num 11158 #>   ..$ SID74    : num 29 #>   ..$ NWBIR74  : num 2217 #>   ..$ BIR79    : num 14655 #>   ..$ SID79    : num 23 #>   ..$ NWBIR79  : num 3568 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:19, 1:2] -77.5 -77.6 -77.7 -77.7 -77.7 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ orange      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.104 #>   ..$ PERIMETER: num 1.29 #>   ..$ CNTY_    : num 1907 #>   ..$ CNTY_ID  : num 1907 #>   ..$ NAME     : chr \"Orange\" #>   ..$ FIPS     : chr \"37135\" #>   ..$ FIPSNO   : num 37135 #>   ..$ CRESS_ID : int 68 #>   ..$ BIR74    : num 3164 #>   ..$ SID74    : num 4 #>   ..$ NWBIR74  : num 776 #>   ..$ BIR79    : num 4478 #>   ..$ SID79    : num 6 #>   ..$ NWBIR79  : num 1086 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:9, 1:2] -79 -79.1 -79.2 -79.3 -79.3 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ pamlico     : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.082 #>   ..$ PERIMETER: num 1.39 #>   ..$ CNTY_    : num 2085 #>   ..$ CNTY_ID  : num 2085 #>   ..$ NAME     : chr \"Pamlico\" #>   ..$ FIPS     : chr \"37137\" #>   ..$ FIPSNO   : num 37137 #>   ..$ CRESS_ID : int 69 #>   ..$ BIR74    : num 542 #>   ..$ SID74    : num 1 #>   ..$ NWBIR74  : num 222 #>   ..$ BIR79    : num 631 #>   ..$ SID79    : num 1 #>   ..$ NWBIR79  : num 277 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:20, 1:2] -76.9 -76.9 -77 -77 -77 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ pasquotank  : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.053 #>   ..$ PERIMETER: num 1.17 #>   ..$ CNTY_    : num 1848 #>   ..$ CNTY_ID  : num 1848 #>   ..$ NAME     : chr \"Pasquotank\" #>   ..$ FIPS     : chr \"37139\" #>   ..$ FIPSNO   : num 37139 #>   ..$ CRESS_ID : int 70 #>   ..$ BIR74    : num 1638 #>   ..$ SID74    : num 3 #>   ..$ NWBIR74  : num 622 #>   ..$ BIR79    : num 2275 #>   ..$ SID79    : num 4 #>   ..$ NWBIR79  : num 933 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:20, 1:2] -76.3 -76.3 -76.4 -76.5 -76.5 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ pender      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.214 #>   ..$ PERIMETER: num 2.15 #>   ..$ CNTY_    : num 2185 #>   ..$ CNTY_ID  : num 2185 #>   ..$ NAME     : chr \"Pender\" #>   ..$ FIPS     : chr \"37141\" #>   ..$ FIPSNO   : num 37141 #>   ..$ CRESS_ID : int 71 #>   ..$ BIR74    : num 1228 #>   ..$ SID74    : num 4 #>   ..$ NWBIR74  : num 580 #>   ..$ BIR79    : num 1602 #>   ..$ SID79    : num 3 #>   ..$ NWBIR79  : num 763 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:34, 1:2] -78 -78.1 -78.2 -78.2 -78.2 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ perquimans  : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.063 #>   ..$ PERIMETER: num 1 #>   ..$ CNTY_    : num 1881 #>   ..$ CNTY_ID  : num 1881 #>   ..$ NAME     : chr \"Perquimans\" #>   ..$ FIPS     : chr \"37143\" #>   ..$ FIPSNO   : num 37143 #>   ..$ CRESS_ID : int 72 #>   ..$ BIR74    : num 484 #>   ..$ SID74    : num 1 #>   ..$ NWBIR74  : num 230 #>   ..$ BIR79    : num 676 #>   ..$ SID79    : num 0 #>   ..$ NWBIR79  : num 310 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:12, 1:2] -76.5 -76.5 -76.6 -76.6 -76.6 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ person      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.109 #>   ..$ PERIMETER: num 1.32 #>   ..$ CNTY_    : num 1841 #>   ..$ CNTY_ID  : num 1841 #>   ..$ NAME     : chr \"Person\" #>   ..$ FIPS     : chr \"37145\" #>   ..$ FIPSNO   : num 37145 #>   ..$ CRESS_ID : int 73 #>   ..$ BIR74    : num 1556 #>   ..$ SID74    : num 4 #>   ..$ NWBIR74  : num 613 #>   ..$ BIR79    : num 1790 #>   ..$ SID79    : num 4 #>   ..$ NWBIR79  : num 650 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:6, 1:2] -78.8 -79 -79.2 -79.1 -78.8 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ pitt        : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.168 #>   ..$ PERIMETER: num 1.79 #>   ..$ CNTY_    : num 1984 #>   ..$ CNTY_ID  : num 1984 #>   ..$ NAME     : chr \"Pitt\" #>   ..$ FIPS     : chr \"37147\" #>   ..$ FIPSNO   : num 37147 #>   ..$ CRESS_ID : int 74 #>   ..$ BIR74    : num 5094 #>   ..$ SID74    : num 14 #>   ..$ NWBIR74  : num 2620 #>   ..$ BIR79    : num 6635 #>   ..$ SID79    : num 11 #>   ..$ NWBIR79  : num 3059 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:45, 1:2] -77.5 -77.5 -77.5 -77.5 -77.5 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ polk        : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.06 #>   ..$ PERIMETER: num 1.04 #>   ..$ CNTY_    : num 2071 #>   ..$ CNTY_ID  : num 2071 #>   ..$ NAME     : chr \"Polk\" #>   ..$ FIPS     : chr \"37149\" #>   ..$ FIPSNO   : num 37149 #>   ..$ CRESS_ID : int 75 #>   ..$ BIR74    : num 533 #>   ..$ SID74    : num 1 #>   ..$ NWBIR74  : num 95 #>   ..$ BIR79    : num 673 #>   ..$ SID79    : num 0 #>   ..$ NWBIR79  : num 79 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:16, 1:2] -82.2 -82.3 -82.3 -82.4 -82.4 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ randolph    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.201 #>   ..$ PERIMETER: num 1.8 #>   ..$ CNTY_    : num 1968 #>   ..$ CNTY_ID  : num 1968 #>   ..$ NAME     : chr \"Randolph\" #>   ..$ FIPS     : chr \"37151\" #>   ..$ FIPSNO   : num 37151 #>   ..$ CRESS_ID : int 76 #>   ..$ BIR74    : num 4456 #>   ..$ SID74    : num 7 #>   ..$ NWBIR74  : num 384 #>   ..$ BIR79    : num 5711 #>   ..$ SID79    : num 12 #>   ..$ NWBIR79  : num 483 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:7, 1:2] -79.8 -80.1 -80 -79.5 -79.5 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ richmond    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.121 #>   ..$ PERIMETER: num 1.85 #>   ..$ CNTY_    : num 2107 #>   ..$ CNTY_ID  : num 2107 #>   ..$ NAME     : chr \"Richmond\" #>   ..$ FIPS     : chr \"37153\" #>   ..$ FIPSNO   : num 37153 #>   ..$ CRESS_ID : int 77 #>   ..$ BIR74    : num 2756 #>   ..$ SID74    : num 4 #>   ..$ NWBIR74  : num 1043 #>   ..$ BIR79    : num 3108 #>   ..$ SID79    : num 7 #>   ..$ NWBIR79  : num 1218 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:36, 1:2] -79.7 -79.9 -79.9 -79.9 -79.9 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ robeson     : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.24 #>   ..$ PERIMETER: num 2 #>   ..$ CNTY_    : num 2150 #>   ..$ CNTY_ID  : num 2150 #>   ..$ NAME     : chr \"Robeson\" #>   ..$ FIPS     : chr \"37155\" #>   ..$ FIPSNO   : num 37155 #>   ..$ CRESS_ID : int 78 #>   ..$ BIR74    : num 7889 #>   ..$ SID74    : num 31 #>   ..$ NWBIR74  : num 5904 #>   ..$ BIR79    : num 9087 #>   ..$ SID79    : num 26 #>   ..$ NWBIR79  : num 6899 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:25, 1:2] -78.9 -78.9 -79 -79 -79 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ rockingham  : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.153 #>   ..$ PERIMETER: num 1.62 #>   ..$ CNTY_    : num 1839 #>   ..$ CNTY_ID  : num 1839 #>   ..$ NAME     : chr \"Rockingham\" #>   ..$ FIPS     : chr \"37157\" #>   ..$ FIPSNO   : num 37157 #>   ..$ CRESS_ID : int 79 #>   ..$ BIR74    : num 4449 #>   ..$ SID74    : num 16 #>   ..$ NWBIR74  : num 1243 #>   ..$ BIR79    : num 5386 #>   ..$ SID79    : num 5 #>   ..$ NWBIR79  : num 1369 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:7, 1:2] -79.5 -79.5 -80 -80 -79.7 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ rowan       : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.134 #>   ..$ PERIMETER: num 1.59 #>   ..$ CNTY_    : num 1980 #>   ..$ CNTY_ID  : num 1980 #>   ..$ NAME     : chr \"Rowan\" #>   ..$ FIPS     : chr \"37159\" #>   ..$ FIPSNO   : num 37159 #>   ..$ CRESS_ID : int 80 #>   ..$ BIR74    : num 4606 #>   ..$ SID74    : num 3 #>   ..$ NWBIR74  : num 1057 #>   ..$ BIR79    : num 6427 #>   ..$ SID79    : num 8 #>   ..$ NWBIR79  : num 1504 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:18, 1:2] -80.3 -80.7 -80.8 -80.7 -80.6 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ rutherford  : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.146 #>   ..$ PERIMETER: num 1.78 #>   ..$ CNTY_    : num 2027 #>   ..$ CNTY_ID  : num 2027 #>   ..$ NAME     : chr \"Rutherford\" #>   ..$ FIPS     : chr \"37161\" #>   ..$ FIPSNO   : num 37161 #>   ..$ CRESS_ID : int 81 #>   ..$ BIR74    : num 2992 #>   ..$ SID74    : num 12 #>   ..$ NWBIR74  : num 495 #>   ..$ BIR79    : num 3543 #>   ..$ SID79    : num 8 #>   ..$ NWBIR79  : num 576 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:33, 1:2] -82 -82 -82.1 -82.1 -82.1 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ sampson     : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.241 #>   ..$ PERIMETER: num 2.21 #>   ..$ CNTY_    : num 2083 #>   ..$ CNTY_ID  : num 2083 #>   ..$ NAME     : chr \"Sampson\" #>   ..$ FIPS     : chr \"37163\" #>   ..$ FIPSNO   : num 37163 #>   ..$ CRESS_ID : int 82 #>   ..$ BIR74    : num 3025 #>   ..$ SID74    : num 4 #>   ..$ NWBIR74  : num 1396 #>   ..$ BIR79    : num 3447 #>   ..$ SID79    : num 4 #>   ..$ NWBIR79  : num 1524 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:40, 1:2] -78.1 -78.1 -78.2 -78.3 -78.3 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ scotland    : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.08 #>   ..$ PERIMETER: num 1.19 #>   ..$ CNTY_    : num 2123 #>   ..$ CNTY_ID  : num 2123 #>   ..$ NAME     : chr \"Scotland\" #>   ..$ FIPS     : chr \"37165\" #>   ..$ FIPSNO   : num 37165 #>   ..$ CRESS_ID : int 83 #>   ..$ BIR74    : num 2255 #>   ..$ SID74    : num 8 #>   ..$ NWBIR74  : num 1206 #>   ..$ BIR79    : num 2617 #>   ..$ SID79    : num 16 #>   ..$ NWBIR79  : num 1436 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:17, 1:2] -79.5 -79.7 -79.7 -79.7 -79.6 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ stanly      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.103 #>   ..$ PERIMETER: num 1.46 #>   ..$ CNTY_    : num 2045 #>   ..$ CNTY_ID  : num 2045 #>   ..$ NAME     : chr \"Stanly\" #>   ..$ FIPS     : chr \"37167\" #>   ..$ FIPSNO   : num 37167 #>   ..$ CRESS_ID : int 84 #>   ..$ BIR74    : num 2356 #>   ..$ SID74    : num 5 #>   ..$ NWBIR74  : num 370 #>   ..$ BIR79    : num 3039 #>   ..$ SID79    : num 7 #>   ..$ NWBIR79  : num 528 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:32, 1:2] -80.1 -80.1 -80.1 -80.2 -80.2 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ stokes      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.124 #>   ..$ PERIMETER: num 1.43 #>   ..$ CNTY_    : num 1837 #>   ..$ CNTY_ID  : num 1837 #>   ..$ NAME     : chr \"Stokes\" #>   ..$ FIPS     : chr \"37169\" #>   ..$ FIPSNO   : num 37169 #>   ..$ CRESS_ID : int 85 #>   ..$ BIR74    : num 1612 #>   ..$ SID74    : num 1 #>   ..$ NWBIR74  : num 160 #>   ..$ BIR79    : num 2038 #>   ..$ SID79    : num 5 #>   ..$ NWBIR79  : num 176 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:6, 1:2] -80 -80.5 -80.4 -80 -80 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ surry       : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.143 #>   ..$ PERIMETER: num 1.63 #>   ..$ CNTY_    : num 1828 #>   ..$ CNTY_ID  : num 1828 #>   ..$ NAME     : chr \"Surry\" #>   ..$ FIPS     : chr \"37171\" #>   ..$ FIPSNO   : num 37171 #>   ..$ CRESS_ID : int 86 #>   ..$ BIR74    : num 3188 #>   ..$ SID74    : num 5 #>   ..$ NWBIR74  : num 208 #>   ..$ BIR79    : num 3616 #>   ..$ SID79    : num 6 #>   ..$ NWBIR79  : num 260 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:28, 1:2] -80.5 -80.5 -80.5 -80.5 -80.6 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ swain       : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.141 #>   ..$ PERIMETER: num 2.32 #>   ..$ CNTY_    : num 2013 #>   ..$ CNTY_ID  : num 2013 #>   ..$ NAME     : chr \"Swain\" #>   ..$ FIPS     : chr \"37173\" #>   ..$ FIPSNO   : num 37173 #>   ..$ CRESS_ID : int 87 #>   ..$ BIR74    : num 675 #>   ..$ SID74    : num 3 #>   ..$ NWBIR74  : num 281 #>   ..$ BIR79    : num 883 #>   ..$ SID79    : num 2 #>   ..$ NWBIR79  : num 406 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:44, 1:2] -83.3 -83.4 -83.5 -83.7 -83.7 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ transylvania: sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.098 #>   ..$ PERIMETER: num 1.39 #>   ..$ CNTY_    : num 2067 #>   ..$ CNTY_ID  : num 2067 #>   ..$ NAME     : chr \"Transylvania\" #>   ..$ FIPS     : chr \"37175\" #>   ..$ FIPSNO   : num 37175 #>   ..$ CRESS_ID : int 88 #>   ..$ BIR74    : num 1173 #>   ..$ SID74    : num 3 #>   ..$ NWBIR74  : num 92 #>   ..$ BIR79    : num 1401 #>   ..$ SID79    : num 4 #>   ..$ NWBIR79  : num 104 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:22, 1:2] -82.9 -83 -83 -83.1 -83 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ tyrrell     : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.099 #>   ..$ PERIMETER: num 1.41 #>   ..$ CNTY_    : num 1963 #>   ..$ CNTY_ID  : num 1963 #>   ..$ NAME     : chr \"Tyrrell\" #>   ..$ FIPS     : chr \"37177\" #>   ..$ FIPSNO   : num 37177 #>   ..$ CRESS_ID : int 89 #>   ..$ BIR74    : num 248 #>   ..$ SID74    : num 0 #>   ..$ NWBIR74  : num 116 #>   ..$ BIR79    : num 319 #>   ..$ SID79    : num 0 #>   ..$ NWBIR79  : num 141 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:16, 1:2] -76.2 -76.2 -76.2 -76.3 -76.3 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ union       : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.163 #>   ..$ PERIMETER: num 1.72 #>   ..$ CNTY_    : num 2095 #>   ..$ CNTY_ID  : num 2095 #>   ..$ NAME     : chr \"Union\" #>   ..$ FIPS     : chr \"37179\" #>   ..$ FIPSNO   : num 37179 #>   ..$ CRESS_ID : int 90 #>   ..$ BIR74    : num 3915 #>   ..$ SID74    : num 4 #>   ..$ NWBIR74  : num 1034 #>   ..$ BIR79    : num 5273 #>   ..$ SID79    : num 9 #>   ..$ NWBIR79  : num 1348 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:18, 1:2] -80.8 -80.8 -80.8 -80.5 -80.5 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ vance       : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.072 #>   ..$ PERIMETER: num 1.08 #>   ..$ CNTY_    : num 1842 #>   ..$ CNTY_ID  : num 1842 #>   ..$ NAME     : chr \"Vance\" #>   ..$ FIPS     : chr \"37181\" #>   ..$ FIPSNO   : num 37181 #>   ..$ CRESS_ID : int 91 #>   ..$ BIR74    : num 2180 #>   ..$ SID74    : num 4 #>   ..$ NWBIR74  : num 1179 #>   ..$ BIR79    : num 2753 #>   ..$ SID79    : num 6 #>   ..$ NWBIR79  : num 1492 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:13, 1:2] -78.5 -78.5 -78.5 -78.5 -78.5 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ wake        : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.219 #>   ..$ PERIMETER: num 2.13 #>   ..$ CNTY_    : num 1938 #>   ..$ CNTY_ID  : num 1938 #>   ..$ NAME     : chr \"Wake\" #>   ..$ FIPS     : chr \"37183\" #>   ..$ FIPSNO   : num 37183 #>   ..$ CRESS_ID : int 92 #>   ..$ BIR74    : num 14484 #>   ..$ SID74    : num 16 #>   ..$ NWBIR74  : num 4397 #>   ..$ BIR79    : num 20857 #>   ..$ SID79    : num 31 #>   ..$ NWBIR79  : num 6221 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:27, 1:2] -78.9 -79 -78.9 -78.9 -78.9 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ warren      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.118 #>   ..$ PERIMETER: num 1.42 #>   ..$ CNTY_    : num 1836 #>   ..$ CNTY_ID  : num 1836 #>   ..$ NAME     : chr \"Warren\" #>   ..$ FIPS     : chr \"37185\" #>   ..$ FIPSNO   : num 37185 #>   ..$ CRESS_ID : int 93 #>   ..$ BIR74    : num 968 #>   ..$ SID74    : num 4 #>   ..$ NWBIR74  : num 748 #>   ..$ BIR79    : num 1190 #>   ..$ SID79    : num 2 #>   ..$ NWBIR79  : num 844 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:14, 1:2] -78.3 -78.3 -78.3 -78.1 -77.9 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ washington  : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.1 #>   ..$ PERIMETER: num 1.33 #>   ..$ CNTY_    : num 1962 #>   ..$ CNTY_ID  : num 1962 #>   ..$ NAME     : chr \"Washington\" #>   ..$ FIPS     : chr \"37187\" #>   ..$ FIPSNO   : num 37187 #>   ..$ CRESS_ID : int 94 #>   ..$ BIR74    : num 990 #>   ..$ SID74    : num 5 #>   ..$ NWBIR74  : num 521 #>   ..$ BIR79    : num 1141 #>   ..$ SID79    : num 0 #>   ..$ NWBIR79  : num 651 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:18, 1:2] -76.4 -76.6 -76.8 -76.8 -76.8 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ watauga     : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.081 #>   ..$ PERIMETER: num 1.29 #>   ..$ CNTY_    : num 1880 #>   ..$ CNTY_ID  : num 1880 #>   ..$ NAME     : chr \"Watauga\" #>   ..$ FIPS     : chr \"37189\" #>   ..$ FIPSNO   : num 37189 #>   ..$ CRESS_ID : int 95 #>   ..$ BIR74    : num 1323 #>   ..$ SID74    : num 1 #>   ..$ NWBIR74  : num 17 #>   ..$ BIR79    : num 1775 #>   ..$ SID79    : num 1 #>   ..$ NWBIR79  : num 33 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:23, 1:2] -81.8 -81.8 -81.8 -81.9 -81.9 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ wayne       : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.142 #>   ..$ PERIMETER: num 1.66 #>   ..$ CNTY_    : num 2029 #>   ..$ CNTY_ID  : num 2029 #>   ..$ NAME     : chr \"Wayne\" #>   ..$ FIPS     : chr \"37191\" #>   ..$ FIPSNO   : num 37191 #>   ..$ CRESS_ID : int 96 #>   ..$ BIR74    : num 6638 #>   ..$ SID74    : num 18 #>   ..$ NWBIR74  : num 2593 #>   ..$ BIR79    : num 8227 #>   ..$ SID79    : num 23 #>   ..$ NWBIR79  : num 3073 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:29, 1:2] -78.2 -78.2 -78.3 -78.3 -78.3 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ wilkes      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.199 #>   ..$ PERIMETER: num 1.98 #>   ..$ CNTY_    : num 1874 #>   ..$ CNTY_ID  : num 1874 #>   ..$ NAME     : chr \"Wilkes\" #>   ..$ FIPS     : chr \"37193\" #>   ..$ FIPSNO   : num 37193 #>   ..$ CRESS_ID : int 97 #>   ..$ BIR74    : num 3146 #>   ..$ SID74    : num 4 #>   ..$ NWBIR74  : num 200 #>   ..$ BIR79    : num 3725 #>   ..$ SID79    : num 7 #>   ..$ NWBIR79  : num 222 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:47, 1:2] -81 -81.1 -81.1 -81.2 -81.2 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ wilson      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.094 #>   ..$ PERIMETER: num 1.31 #>   ..$ CNTY_    : num 1979 #>   ..$ CNTY_ID  : num 1979 #>   ..$ NAME     : chr \"Wilson\" #>   ..$ FIPS     : chr \"37195\" #>   ..$ FIPSNO   : num 37195 #>   ..$ CRESS_ID : int 98 #>   ..$ BIR74    : num 3702 #>   ..$ SID74    : num 11 #>   ..$ NWBIR74  : num 1827 #>   ..$ BIR79    : num 4706 #>   ..$ SID79    : num 13 #>   ..$ NWBIR79  : num 2330 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:19, 1:2] -78.1 -78.1 -78.2 -78.2 -78.2 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>  $ yadkin      : sf [1 × 15] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ AREA     : num 0.086 #>   ..$ PERIMETER: num 1.27 #>   ..$ CNTY_    : num 1893 #>   ..$ CNTY_ID  : num 1893 #>   ..$ NAME     : chr \"Yadkin\" #>   ..$ FIPS     : chr \"37197\" #>   ..$ FIPSNO   : num 37197 #>   ..$ CRESS_ID : int 99 #>   ..$ BIR74    : num 1269 #>   ..$ SID74    : num 1 #>   ..$ NWBIR74  : num 65 #>   ..$ BIR79    : num 1568 #>   ..$ SID79    : num 1 #>   ..$ NWBIR79  : num 76 #>   ..$ geometry :sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:24, 1:2] -80.5 -80.7 -80.9 -80.9 -80.8 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... #>   [list output truncated] # List names match names from grouping column  names(nc_list_name) #>   [1] \"alamance\"     \"alexander\"    \"alleghany\"    \"anson\"        \"ashe\"         #>   [6] \"avery\"        \"beaufort\"     \"bertie\"       \"bladen\"       \"brunswick\"    #>  [11] \"buncombe\"     \"burke\"        \"cabarrus\"     \"caldwell\"     \"camden\"       #>  [16] \"carteret\"     \"caswell\"      \"catawba\"      \"chatham\"      \"cherokee\"     #>  [21] \"chowan\"       \"clay\"         \"cleveland\"    \"columbus\"     \"craven\"       #>  [26] \"cumberland\"   \"currituck\"    \"dare\"         \"davidson\"     \"davie\"        #>  [31] \"duplin\"       \"durham\"       \"edgecombe\"    \"forsyth\"      \"franklin\"     #>  [36] \"gaston\"       \"gates\"        \"graham\"       \"granville\"    \"greene\"       #>  [41] \"guilford\"     \"halifax\"      \"harnett\"      \"haywood\"      \"henderson\"    #>  [46] \"hertford\"     \"hoke\"         \"hyde\"         \"iredell\"      \"jackson\"      #>  [51] \"johnston\"     \"jones\"        \"lee\"          \"lenoir\"       \"lincoln\"      #>  [56] \"macon\"        \"madison\"      \"martin\"       \"mc_dowell\"    \"mecklenburg\"  #>  [61] \"mitchell\"     \"montgomery\"   \"moore\"        \"nash\"         \"new_hanover\"  #>  [66] \"northampton\"  \"onslow\"       \"orange\"       \"pamlico\"      \"pasquotank\"   #>  [71] \"pender\"       \"perquimans\"   \"person\"       \"pitt\"         \"polk\"         #>  [76] \"randolph\"     \"richmond\"     \"robeson\"      \"rockingham\"   \"rowan\"        #>  [81] \"rutherford\"   \"sampson\"      \"scotland\"     \"stanly\"       \"stokes\"       #>  [86] \"surry\"        \"swain\"        \"transylvania\" \"tyrrell\"      \"union\"        #>  [91] \"vance\"        \"wake\"         \"warren\"       \"washington\"   \"watauga\"      #>  [96] \"wayne\"        \"wilkes\"       \"wilson\"       \"yadkin\"       \"yancey\" nc_list <-   as_sf_list(nc, nm = \"North Carolina\")  str(nc_list) #> List of 1 #>  $ north_carolina:Classes 'sf' and 'data.frame': 100 obs. of  15 variables: #>   ..$ AREA     : num [1:100] 0.114 0.061 0.143 0.07 0.153 0.097 0.062 0.091 0.118 0.124 ... #>   ..$ PERIMETER: num [1:100] 1.44 1.23 1.63 2.97 2.21 ... #>   ..$ CNTY_    : num [1:100] 1825 1827 1828 1831 1832 ... #>   ..$ CNTY_ID  : num [1:100] 1825 1827 1828 1831 1832 ... #>   ..$ NAME     : chr [1:100] \"Ashe\" \"Alleghany\" \"Surry\" \"Currituck\" ... #>   ..$ FIPS     : chr [1:100] \"37009\" \"37005\" \"37171\" \"37053\" ... #>   ..$ FIPSNO   : num [1:100] 37009 37005 37171 37053 37131 ... #>   ..$ CRESS_ID : int [1:100] 5 3 86 27 66 46 15 37 93 85 ... #>   ..$ BIR74    : num [1:100] 1091 487 3188 508 1421 ... #>   ..$ SID74    : num [1:100] 1 0 5 1 9 7 0 0 4 1 ... #>   ..$ NWBIR74  : num [1:100] 10 10 208 123 1066 ... #>   ..$ BIR79    : num [1:100] 1364 542 3616 830 1606 ... #>   ..$ SID79    : num [1:100] 0 3 6 2 3 5 2 2 2 5 ... #>   ..$ NWBIR79  : num [1:100] 19 12 260 145 1197 ... #>   ..$ geometry :sfc_MULTIPOLYGON of length 100; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:27, 1:2] -81.5 -81.5 -81.6 -81.6 -81.7 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   .. ..- attr(*, \"names\")= chr [1:14] \"AREA\" \"PERIMETER\" \"CNTY_\" \"CNTY_ID\" ... is_sf_list(nc_list) #> [1] TRUE as_sf(nc_list_name) %>%   slice_head(n = 4) #> Simple feature collection with 4 features and 14 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -81.34754 ymin: 34.80792 xmax: -79.23799 ymax: 36.57286 #> Geodetic CRS:  NAD27 #> # A tibble: 4 × 15 #>    AREA PERIMETER CNTY_ CNTY_ID NAME   FIPS  FIPSNO CRESS_ID BIR74 SID74 NWBIR74 #>   <dbl>     <dbl> <dbl>   <dbl> <chr>  <chr>  <dbl>    <int> <dbl> <dbl>   <dbl> #> 1 0.111      1.39  1904    1904 Alama… 37001  37001        1  4672    13    1243 #> 2 0.066      1.07  1950    1950 Alexa… 37003  37003        2  1333     0     128 #> 3 0.061      1.23  1827    1827 Alleg… 37005  37005        3   487     0      10 #> 4 0.138      1.62  2096    2096 Anson  37007  37007        4  1570    15     952 #> # … with 4 more variables: BIR79 <dbl>, SID79 <dbl>, NWBIR79 <dbl>, #> #   geometry <MULTIPOLYGON [°]>  as_bbox(nc_list) #>      xmin      ymin      xmax      ymax  #> -84.32385  33.88199 -75.45698  36.58965"},{"path":"/articles/working-sf-lists.html","id":"modifying-and-mapping-sf-lists","dir":"Articles","previous_headings":"","what":"Modifying and mapping sf lists","title":"Working with lists of simple feature objects","text":"key functions work sf list objects applying function object list maintain list format, including: st_transform_ext() st_bbox_ext(), st_bbox_asp() st_buffer_ext() functions can also convert sf list list bbox objects reverse. using ext = TRUE parameter, is_sf_list returns TRUE sfc bbox lists well sf lists. Lists can visualized ggplot creating lists layers. approach illustrates results st_buffer_ext function :  get_location also supports creation sf lists using name_col, id_col, name_col (used get_esri_data) grouping column. make_location_data_list function useful combining locations related data paired named lists. example, prior list parks grouped park district can combined list park districts make two lists 3 sf objects. combined object can used create similar maps area using purrr::map2() following example illustrates.  get_location_data works sf lists somewhat limited way support available features function. currently works best data character string can also used name sf object list (combination label parameter). named lists making assembling layered maps ggplot2 especially convenient:","code":"nc_list_bbox <- st_bbox_ext(nc_list_name, asp = 1, class = \"bbox\")[1:4]  is_sf_list(nc_list_bbox) #> [1] FALSE  is_sf_list(nc_list_bbox, ext = TRUE) #> [1] TRUE nc_list_name_buffered <-   st_buffer_ext(x = nc_list_name, dist = 5, unit = \"mi\") ggplot() +   purrr::map(     nc_list_name_buffered,     ~ geom_sf(data = .x, aes(fill = NAME), alpha = 0.2)   ) +   guides(fill = \"none\") park_list <-   get_location(     type = \"parks\",     name_col = \"park_district\",     name = c(\"Patterson\", \"Clifton\", \"Carroll\"),     package = \"mapbaltimore\",     class = \"list\"   )  str(park_list) #> List of 3 #>  $ carroll  : sf [65 × 8] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ name         : chr [1:65] \"Atlantic Ave Park\" \"B & O Slope Park\" \"Calvert & Madison Park\" \"Carroll & Archer Park\" ... #>   ..$ id           : int [1:65] 10 12 31 37 40 53 57 60 75 78 ... #>   ..$ address      : chr [1:65] \"2304 Atlantic Ave\" \"1400 Cathedral St\" \"801 N Calvert St\" \"838 Carroll St\" ... #>   ..$ name_alt     : chr [1:65] NA NA NA NA ... #>   ..$ operator     : chr [1:65] \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" ... #>   ..$ park_district: chr [1:65] \"Carroll\" \"Carroll\" \"Carroll\" \"Carroll\" ... #>   ..$ acres        : Units: [acres] num [1:65] 1.611 0.917 0.159 0.108 2.186 ... #>   ..$ geometry     :sfc_MULTIPOLYGON of length 65; first list element: List of 2 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:18, 1:2] 430354 430353 430270 430345 430351 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:13, 1:2] 430420 430421 430422 430424 430442 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA #>   .. ..- attr(*, \"names\")= chr [1:7] \"name\" \"id\" \"address\" \"name_alt\" ... #>  $ clifton  : sf [47 × 8] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ name         : chr [1:47] \"32nd Street Park\" \"Adams Park\" \"Alhambra Park\" \"Andover & North Hill Park\" ... #>   ..$ id           : int [1:47] 1 2 4 7 14 15 20 22 25 27 ... #>   ..$ address      : chr [1:47] \"301 E 32nd St\" \"1530 Montpelier St\" \"5200 Alhambra Ave\" \"1116 Andover Rd (rear)\" ... #>   ..$ name_alt     : chr [1:47] NA NA NA NA ... #>   ..$ operator     : chr [1:47] \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" ... #>   ..$ park_district: chr [1:47] \"Clifton\" \"Clifton\" \"Clifton\" \"Clifton\" ... #>   ..$ acres        : Units: [acres] num [1:47] 0.169 0.623 0.993 0.603 6.829 ... #>   ..$ geometry     :sfc_MULTIPOLYGON of length 47; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:9, 1:2] 433376 433404 433404 433404 433405 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA #>   .. ..- attr(*, \"names\")= chr [1:7] \"name\" \"id\" \"address\" \"name_alt\" ... #>  $ patterson: sf [44 × 8] (S3: sf/tbl_df/tbl/data.frame) #>   ..$ name         : chr [1:44] \"Ambrose Kennedy Park\" \"Anchorage Promenade Park\" \"Belnor Squares Park\" \"Betty Hyatt Park\" ... #>   ..$ id           : int [1:44] 5 6 17 19 21 23 30 34 36 39 ... #>   ..$ address      : chr [1:44] \"1002 Harford Rd\" \"2339 Boston St (rear)\" \"2800 Pulaski Hwy\" \"1710 E Baltimore St\" ... #>   ..$ name_alt     : chr [1:44] NA NA NA NA ... #>   ..$ operator     : chr [1:44] \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" ... #>   ..$ park_district: chr [1:44] \"Patterson\" \"Patterson\" \"Patterson\" \"Patterson\" ... #>   ..$ acres        : Units: [acres] num [1:44] 1.725 0.297 1.106 1.759 16.817 ... #>   ..$ geometry     :sfc_MULTIPOLYGON of length 44; first list element: List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:33, 1:2] 434189 434192 434195 434197 434201 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"sf_column\")= chr \"geometry\" #>   ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA #>   .. ..- attr(*, \"names\")= chr [1:7] \"name\" \"id\" \"address\" \"name_alt\" ... district_list <-   get_location(     type = \"park_districts\",     name_col = \"name\",     name = c(\"Patterson\", \"Clifton\", \"Carroll\"),     package = \"mapbaltimore\",     class = \"list\"   )  park_district_list <-   make_location_data_list(data = park_list, location = district_list)  str(park_district_list) #> List of 2 #>  $ location:List of 3 #>   ..$ carroll  : sf [1 × 2] (S3: sf/tbl_df/tbl/data.frame) #>   .. ..$ name    : chr \"Carroll\" #>   .. ..$ geometry:sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. .. ..$ :List of 1 #>   .. .. .. ..$ : num [1:454, 1:2] 432805 432819 432875 432908 432943 ... #>   .. .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   .. ..- attr(*, \"sf_column\")= chr \"geometry\" #>   .. ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA #>   .. .. ..- attr(*, \"names\")= chr \"name\" #>   ..$ clifton  : sf [1 × 2] (S3: sf/tbl_df/tbl/data.frame) #>   .. ..$ name    : chr \"Clifton\" #>   .. ..$ geometry:sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. .. ..$ :List of 1 #>   .. .. .. ..$ : num [1:548, 1:2] 440528 440557 440557 440557 440544 ... #>   .. .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   .. ..- attr(*, \"sf_column\")= chr \"geometry\" #>   .. ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA #>   .. .. ..- attr(*, \"names\")= chr \"name\" #>   ..$ patterson: sf [1 × 2] (S3: sf/tbl_df/tbl/data.frame) #>   .. ..$ name    : chr \"Patterson\" #>   .. ..$ geometry:sfc_MULTIPOLYGON of length 1; first list element: List of 1 #>   .. .. ..$ :List of 1 #>   .. .. .. ..$ : num [1:447, 1:2] 436922 436947 437001 437010 437018 ... #>   .. .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   .. ..- attr(*, \"sf_column\")= chr \"geometry\" #>   .. ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA #>   .. .. ..- attr(*, \"names\")= chr \"name\" #>  $ data    :List of 3 #>   ..$ carroll  : sf [65 × 8] (S3: sf/tbl_df/tbl/data.frame) #>   .. ..$ name         : chr [1:65] \"Atlantic Ave Park\" \"B & O Slope Park\" \"Calvert & Madison Park\" \"Carroll & Archer Park\" ... #>   .. ..$ id           : int [1:65] 10 12 31 37 40 53 57 60 75 78 ... #>   .. ..$ address      : chr [1:65] \"2304 Atlantic Ave\" \"1400 Cathedral St\" \"801 N Calvert St\" \"838 Carroll St\" ... #>   .. ..$ name_alt     : chr [1:65] NA NA NA NA ... #>   .. ..$ operator     : chr [1:65] \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" ... #>   .. ..$ park_district: chr [1:65] \"Carroll\" \"Carroll\" \"Carroll\" \"Carroll\" ... #>   .. ..$ acres        : Units: [acres] num [1:65] 1.611 0.917 0.159 0.108 2.186 ... #>   .. ..$ geometry     :sfc_MULTIPOLYGON of length 65; first list element: List of 2 #>   .. .. ..$ :List of 1 #>   .. .. .. ..$ : num [1:18, 1:2] 430354 430353 430270 430345 430351 ... #>   .. .. ..$ :List of 1 #>   .. .. .. ..$ : num [1:13, 1:2] 430420 430421 430422 430424 430442 ... #>   .. .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   .. ..- attr(*, \"sf_column\")= chr \"geometry\" #>   .. ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA #>   .. .. ..- attr(*, \"names\")= chr [1:7] \"name\" \"id\" \"address\" \"name_alt\" ... #>   ..$ clifton  : sf [47 × 8] (S3: sf/tbl_df/tbl/data.frame) #>   .. ..$ name         : chr [1:47] \"32nd Street Park\" \"Adams Park\" \"Alhambra Park\" \"Andover & North Hill Park\" ... #>   .. ..$ id           : int [1:47] 1 2 4 7 14 15 20 22 25 27 ... #>   .. ..$ address      : chr [1:47] \"301 E 32nd St\" \"1530 Montpelier St\" \"5200 Alhambra Ave\" \"1116 Andover Rd (rear)\" ... #>   .. ..$ name_alt     : chr [1:47] NA NA NA NA ... #>   .. ..$ operator     : chr [1:47] \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" ... #>   .. ..$ park_district: chr [1:47] \"Clifton\" \"Clifton\" \"Clifton\" \"Clifton\" ... #>   .. ..$ acres        : Units: [acres] num [1:47] 0.169 0.623 0.993 0.603 6.829 ... #>   .. ..$ geometry     :sfc_MULTIPOLYGON of length 47; first list element: List of 1 #>   .. .. ..$ :List of 1 #>   .. .. .. ..$ : num [1:9, 1:2] 433376 433404 433404 433404 433405 ... #>   .. .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   .. ..- attr(*, \"sf_column\")= chr \"geometry\" #>   .. ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA #>   .. .. ..- attr(*, \"names\")= chr [1:7] \"name\" \"id\" \"address\" \"name_alt\" ... #>   ..$ patterson: sf [44 × 8] (S3: sf/tbl_df/tbl/data.frame) #>   .. ..$ name         : chr [1:44] \"Ambrose Kennedy Park\" \"Anchorage Promenade Park\" \"Belnor Squares Park\" \"Betty Hyatt Park\" ... #>   .. ..$ id           : int [1:44] 5 6 17 19 21 23 30 34 36 39 ... #>   .. ..$ address      : chr [1:44] \"1002 Harford Rd\" \"2339 Boston St (rear)\" \"2800 Pulaski Hwy\" \"1710 E Baltimore St\" ... #>   .. ..$ name_alt     : chr [1:44] NA NA NA NA ... #>   .. ..$ operator     : chr [1:44] \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" \"Baltimore City Department of Recreation and Parks\" ... #>   .. ..$ park_district: chr [1:44] \"Patterson\" \"Patterson\" \"Patterson\" \"Patterson\" ... #>   .. ..$ acres        : Units: [acres] num [1:44] 1.725 0.297 1.106 1.759 16.817 ... #>   .. ..$ geometry     :sfc_MULTIPOLYGON of length 44; first list element: List of 1 #>   .. .. ..$ :List of 1 #>   .. .. .. ..$ : num [1:33, 1:2] 434189 434192 434195 434197 434201 ... #>   .. .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   .. ..- attr(*, \"sf_column\")= chr \"geometry\" #>   .. ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA #>   .. .. ..- attr(*, \"names\")= chr [1:7] \"name\" \"id\" \"address\" \"name_alt\" ... park_district_maps <-   purrr::map2(     park_district_list$data,     park_district_list$location,     ~ ggplot() +       layer_location_data(         data = \"baltimore_city_detailed\",         package = \"mapbaltimore\",         fill = \"gray95\",         color = \"gray55\"       ) +       layer_location_data(         data = .x,         location = .y,         fill = \"forestgreen\",         color = \"lightgreen\",         alpha = 0.6       ) +       layer_neatline(         data = .y,         asp = 1       )   )  park_district_maps[[1]] + park_district_maps[[2]] + park_district_maps[[3]] map_layers <-   map_location_data(     data = c(\"streets\", \"mta_bus_lines\", \"neighborhoods\"),     package = \"mapbaltimore\",     asp = 1,     location = district_list$carroll,     label = \"Carroll District\",     class = \"list\"   ) ggplot() +   layer_location_data(     data = map_layers$carroll_district_streets,     location = district_list$carroll,     fn = ~ filter(.x, (!is.na(sha_class) & (sha_class != \"\"))),     trim = TRUE,  #   mapping = aes(size = sha_class),     color = \"gray40\",     size = 0.2,     fill = NA   ) +   #  sha_class_scale +   layer_location_data(     data = map_layers$carroll_district_neighborhoods,     alpha = 0.4,     color = NA,     mapping = aes(fill = name)   ) +   guides(fill = \"none\") +   layer_location_data(     data = map_layers$carroll_district_mta_bus_lines,     mapping = aes(color = frequent),     size = 0.3,     alpha = 0.3   ) +   guides(color = \"none\") +   layer_neatline(     data = district_list$carroll,     asp = 1,     expand = TRUE   ) #> Warning: location_filter ignores the dist, diag_ratio, and/or asp parameters if #> trim is TRUE."},{"path":"/articles/working-sf-lists.html","id":"working-with-sf-lists-in-combination-with-data-and-location-index-lists","dir":"Articles","previous_headings":"","what":"Working with sf lists in combination with data and location index lists","title":"Working with lists of simple feature objects","text":"","code":"params <- list(   index = list(     data = list(       \"cama\" = \"https://geodata.md.gov/imap/rest/services/PlanningCadastre/MD_ComputerAssistedMassAppraisal/MapServer/1\",       \"cama_bldg\" = \"https://geodata.md.gov/imap/rest/services/PlanningCadastre/MD_ComputerAssistedMassAppraisal/MapServer/0\",       \"parcels\" = \"https://geodata.md.gov/imap/rest/services/PlanningCadastre/MD_ParcelBoundaries/MapServer/0\",       \"edge_of_pavement\" = \"https://gisdata.baltimorecity.gov/egis/rest/services/OpenBaltimore/Edge_of_Pavement/FeatureServer/0\"       # \"property\" = \"https://opendata.baltimorecity.gov/egis/rest/services/NonSpatialTables/RealProperty/FeatureServer/0\"     ),     type = \"named_intersections\",     package = \"mapbaltimore\"   ),   location = list(     name = \"EASTERN AVE & S CONKLING ST\",     label = \"Conkling Plaza\"   ),   data = list(     dist = 150,     crs = 3857   ) )  location <-   get_location(     type = params$index$type,     package = params$index$package,     name = params$location$name,     label = params$location$label   )  # TODO: map_location_data may not be passing the location bounding box correctly # FIXME: When this hit an error from the nonspatial data in the FeatureServer link indexed to property property_data <-   map_location_data(     data = names(params$index$data),     index = params$index$data,     location = location,     dist = params$data$dist,     class = \"list\",     crs = params$data$crs   )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eli Pousson. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pousson E (2022). overedge: Assorted Functions Easier Map Making. R package version 0.0.0.9000.","code":"@Manual{,   title = {overedge: Assorted Functions For Easier Map Making},   author = {Eli Pousson},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"overedge","dir":"","previous_headings":"","what":"Assorted Functions For Easier Map Making","title":"Assorted Functions For Easier Map Making","text":"goal overedge provide useful functions making maps R. collection miscellaneous functions primarily working ggplot2 sf.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Assorted Functions For Easier Map Making","text":"can install development version overedge like :","code":"remotes::install_github(\"elipousson/overedge\")"},{"path":"/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Assorted Functions For Easier Map Making","text":"overedge currently provides variety functions accessing spatial data, modifying simple feature bounding box objects, creating formatting maps ggplot2.","code":""},{"path":"/index.html","id":"make-icon-maps-with-sf-objects-and-ggplot2","dir":"","previous_headings":"Examples","what":"Make icon maps with sf objects and ggplot2","title":"Assorted Functions For Easier Map Making","text":"geom_sf_icon wraps ggsvg::geom_point_svg() provide convenient way make icon maps. can create maps using single named icon matches one icons map_icons.  can also use icon column provided sf object.  Check map_icons see supported icon names.","code":"library(overedge) library(ggplot2) library(sf) #> Linking to GEOS 3.9.1, GDAL 3.4.0, PROJ 8.1.1; sf_use_s2() is TRUE  nc <- st_read(system.file(\"shape/nc.shp\", package = \"sf\")) #> Reading layer `nc' from data source  #>   `/Library/Frameworks/R.framework/Versions/4.1/Resources/library/sf/shape/nc.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 14 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965 #> Geodetic CRS:  NAD27 nc <- st_transform(nc, 3857) theme_set(theme_void())  nc_map <-   ggplot() +   geom_sf(data = nc)  nc_map +   geom_sf_icon(data = nc, icon = \"point-start\", size = 8) nc$icon <- rep(c(\"1\", \"2\", \"3\", \"4\"), nrow(nc) / 4)  nc_map +   geom_sf_icon(data = nc, size = 5) head(map_icons) #>                name #> 1         aerialway #> 2          airfield #> 3           airport #> 4      alcohol-shop #> 5 american-football #> 6    amusement-park #>                                                                              url #> 1         https://raw.githubusercontent.com/mapbox/maki/main/icons/aerialway.svg #> 2          https://raw.githubusercontent.com/mapbox/maki/main/icons/airfield.svg #> 3           https://raw.githubusercontent.com/mapbox/maki/main/icons/airport.svg #> 4      https://raw.githubusercontent.com/mapbox/maki/main/icons/alcohol-shop.svg #> 5 https://raw.githubusercontent.com/mapbox/maki/main/icons/american-football.svg #> 6    https://raw.githubusercontent.com/mapbox/maki/main/icons/amusement-park.svg #>   size style        repo #> 1   15       mapbox/maki #> 2   15       mapbox/maki #> 3   15       mapbox/maki #> 4   15       mapbox/maki #> 5   15       mapbox/maki #> 6   15       mapbox/maki"},{"path":"/index.html","id":"scale-and-rotate-sf-objects","dir":"","previous_headings":"Examples","what":"Scale and rotate sf objects","title":"Assorted Functions For Easier Map Making","text":"st_scale_rotate() convenience function apply affine transformations sf objects.","code":"nc_rotated <- st_scale_rotate(nc, scale = 0.5, rotate = 15)  nc_map +   geom_sf(data = nc_rotated, fill = NA, color = \"red\")"},{"path":"/index.html","id":"create-inscribed-squares-in-sf-objects","dir":"","previous_headings":"Examples","what":"Create inscribed squares in sf objects","title":"Assorted Functions For Easier Map Making","text":"","code":"nc_squares <- st_inscribed_square(nc)  nc_map +   geom_sf(data = nc_squares, fill = NA, color = \"red\")"},{"path":"/index.html","id":"add-a-neatline-to-a-map","dir":"","previous_headings":"Examples","what":"Add a neatline to a map","title":"Assorted Functions For Easier Map Making","text":"layer_neatline() hides major grid lines axis label default. function useful draw neatline around map set aspect ratio.  layer_neatline() can also used focus specific area map option apply buffer distance ratio diagonal distance input data. label_axes hide_grid paramters override set ggplot theme.","code":"nc_map +   layer_neatline(     data = nc,     asp = \"6:4\",     color = \"gray60\", size = 2, linetype = \"dashed\"   ) theme_set(theme_minimal())  nc_map +   layer_neatline(     data = nc[1, ],     diag_ratio = 0.5,     asp = 1,     color = \"black\",     label_axes = \"--EN\",     hide_grid = FALSE   )"},{"path":"/reference/as_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object to a simple feature or bounding box object — as_sf","title":"Convert an object to a simple feature or bounding box object — as_sf","text":"functions pass NULL value without returning error. POINT MULTIPOINT object passed as_bbox 0.00000001 meter buffer applied.","code":""},{"path":"/reference/as_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object to a simple feature or bounding box object — as_sf","text":"","code":"as_sf(x, crs = NULL, sf_col = \"geometry\", ...)  as_bbox(x, crs = NULL, ...)  as_sfc(x, crs = NULL, ...)  as_sf_list(x, nm = \"data\", col = NULL, crs = NULL)"},{"path":"/reference/as_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object to a simple feature or bounding box object — as_sf","text":"x sf, bbox, sfc, raster, sp, data frame object can converted simple feature bounding box object. as_bbox() can also convert vector xmin, ymin, xmax, ymax values. as_sf_list supports sf objects data frames sf list column named \"data\" (typically created using dplyr::group_nest() sf object. crs Coordinate reference system sf, bbox, sfc sf list object return. ... Additional parameters passed sf::st_bbox() calling as_bbox() passed sf::st_sf(), sf::st_as_sf(), df_to_sf() as_sf() (depending class x) nm as_sf_list, name(s) sf list; defaults \"data\". col provided, values grouping column used names. col as_sf_list, name column used group data x sf object used group nest data passing x.","code":""},{"path":"/reference/convert_dist_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert distance from scale to actual units — convert_dist_scale","title":"Convert distance from scale to actual units — convert_dist_scale","text":"Convert distance scale actual units based named standard_scales","code":""},{"path":"/reference/convert_dist_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert distance from scale to actual units — convert_dist_scale","text":"","code":"convert_dist_scale(   dist = NULL,   paper = NULL,   orientation = NULL,   scale = NULL,   scale_unit = \"in\",   actual_unit = NULL,   scale_factor = NULL,   dpi = 120 )"},{"path":"/reference/convert_dist_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert distance from scale to actual units — convert_dist_scale","text":"dist distance convert. paper provided, paper width height used dist. paper Paper, Default: 'letter'. orientation Orientation \"portrait\", \"landscape\", \"square\", Default: 'portrait'. scale Scale name scale_unit \"mm\" (converted cm dividing 10), \"cm\", \"px\" (converted inches dividing dpi), \"\". actual_unit unit supported convert_dist_units scale_factor factor converting scale_unit actual_unit, e.g. 1\" = 1', scale factor 12. optional scale provided; defaults NULL. dpi dots per square inch (used conversion factor \"px\" \"\")","code":""},{"path":"/reference/convert_dist_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert distance from scale to actual units — convert_dist_scale","text":"dist values converted scale_unit actual_unit based scale_factor information standard_scales object. paper provided, return data frame converted distances actual_width actual_height","code":""},{"path":"/reference/convert_dist_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert distances between different units — convert_dist_units","title":"Convert distances between different units — convert_dist_units","text":"Convert distances different units","code":""},{"path":"/reference/convert_dist_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert distances between different units — convert_dist_units","text":"","code":"convert_dist_units(dist, from = NULL, to = \"meter\")"},{"path":"/reference/convert_dist_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert distances between different units — convert_dist_units","text":"dist Numeric units Existing unit dist, Default: NULL. dist units object, numerator used \"\" Unit convert distance , Default: 'meter'","code":""},{"path":"/reference/convert_dist_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert distances between different units — convert_dist_units","text":"Object created units::set_units()","code":""},{"path":"/reference/dist_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Valid distance units — dist_units","title":"Valid distance units — dist_units","text":"subset units supported units package accessible units::valid_udunits() function.","code":""},{"path":"/reference/dist_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Valid distance units — dist_units","text":"","code":"dist_units"},{"path":"/reference/dist_units.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Valid distance units — dist_units","text":"data frame 11 rows 11 variables: symbol symbols symbol_aliases symbol aliases name_singular singular names name_singular_aliases singular name aliases name_plural character plural names name_plural_aliases plural name aliases def short definition definition definition comment comment dimensionless logical indicator dimensionless units source_xml source XML","code":""},{"path":"/reference/geom_sf_icon.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw SVG icons for a simple feature object — geom_sf_icon","title":"Draw SVG icons for a simple feature object — geom_sf_icon","text":"Use  ggsvg::geom_point_svg() function plot icons using centroids input simple feature object set icon location.","code":""},{"path":"/reference/geom_sf_icon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw SVG icons for a simple feature object — geom_sf_icon","text":"","code":"geom_sf_icon(   data = NULL,   iconname_col = \"icon\",   icon = NULL,   px = NULL,   source = NULL,   svg = NULL,   color = \"black\",   crs = NULL,   ... )"},{"path":"/reference/geom_sf_icon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw SVG icons for a simple feature object — geom_sf_icon","text":"data sf object. objects polygon geometry converted points using sf::st_centroid(). iconname_col column name input data use icon name. name matches multiple icons, first match map_icons used. may provide px source value select different match needed , case, icons must use px source value. Note icon column mapped ggplot2::aes(). icon Icon name. Default NULL. icon provided, iconname_col used. px Icon size pixels. See map_icons$px supported options. Optional may necessary differentiate icons duplicate names. source Icon source. See map_icons$repo supported options. Optional may required differentiate icons duplicate names. svg Optional. Custom file path URL SVG pass svg parameter  ggsvg::geom_point_svg().  icon provided, svg used. color SVG color passed  ggsvg::geom_point_svg(). default color set \"black\". crs Coordinate reference system; defaults NULL. ... Additional parameters  ggsvg::geom_point_svg().","code":""},{"path":[]},{"path":"/reference/geom_sf_icon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw SVG icons for a simple feature object — geom_sf_icon","text":"","code":"if (FALSE) { if (interactive()) {   library(sf)   library(ggplot2)   library(overedge)    nc <- st_read(system.file(\"shape/nc.shp\", package = \"sf\"))   ggplot() +     geom_sf_icon(data = nc, icon = \"point-start\", size = 10)     nc$icon <- rep(c(\"1\", \"2\", \"3\", \"4\"), nrow(nc) / 4)   ggplot() +     geom_sf_icon(data = nc, size = 5) } }"},{"path":"/reference/get_admin_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get U.S. State and County boundary data for a location — get_admin_data","title":"Get U.S. State and County boundary data for a location — get_admin_data","text":"Get U.S. states counties using fast query.","code":""},{"path":"/reference/get_admin_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get U.S. State and County boundary data for a location — get_admin_data","text":"","code":"get_states(   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   class = \"df\",   ... )  get_counties(   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   class = \"df\",   ... )"},{"path":"/reference/get_admin_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get U.S. State and County boundary data for a location — get_admin_data","text":"location sf, sfc, bbox object convertible as_sfc dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. class Class data return, \"df\" (default), \"sf\", \"bbox\", \"sfc\"","code":""},{"path":"/reference/get_asp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get aspect ratio from string or based on specific paper and margins — get_asp","title":"Get aspect ratio from string or based on specific paper and margins — get_asp","text":"Get aspect ratio string based specific paper margins","code":""},{"path":"/reference/get_asp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get aspect ratio from string or based on specific paper and margins — get_asp","text":"","code":"get_asp(   asp = NULL,   paper = NULL,   orientation = NULL,   margin = NULL,   unit = NULL,   block_asp = FALSE )"},{"path":"/reference/get_asp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get aspect ratio from string or based on specific paper and margins — get_asp","text":"asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. paper Paper, Default: 'letter'. orientation Orientation \"portrait\", \"landscape\", \"square\", Default: 'portrait'. margin margin style supported get_margin(), numeric vector (length 1 4) passed dist parameter get_margin, margins object. unit Unit margin distance, Default: ''. block_asp TRUE, get aspect ratio map/plot area (including margins); defaults FALSE.","code":""},{"path":"/reference/get_asp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get aspect ratio from string or based on specific paper and margins — get_asp","text":"numeric aspect ratio.","code":""},{"path":"/reference/get_asp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get aspect ratio from string or based on specific paper and margins — get_asp","text":"","code":"get_asp(\"1:2\") #> [1] 0.5  get_asp(11 / 17) #> [1] 0.6470588  get_asp(paper = \"letter\") #> [1] 0.7727273"},{"path":"/reference/get_data_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Check data directory and create if needed — get_data_dir","title":"Check data directory and create if needed — get_data_dir","text":"utility function wraps rappdirs::user_cache_dir.","code":""},{"path":"/reference/get_data_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check data directory and create if needed — get_data_dir","text":"","code":"get_data_dir(path = NULL, package = \"overedge\")"},{"path":"/reference/get_data_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check data directory and create if needed — get_data_dir","text":"path Path directory use data directory. package Package name; defaults \"overedge\"","code":""},{"path":"/reference/get_esri_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Use esri2sf to get data from an ArcGIS FeatureServer or MapServer for a\nlocation — get_esri_data","title":"Use esri2sf to get data from an ArcGIS FeatureServer or MapServer for a\nlocation — get_esri_data","text":"Wraps esri2sf esri2df function download ArcGIS FeatureServer MapServer. Supports spatial filtering bounding box based location filtering location name (location name column provided).","code":""},{"path":"/reference/get_esri_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use esri2sf to get data from an ArcGIS FeatureServer or MapServer for a\nlocation — get_esri_data","text":"","code":"get_esri_data(   location = NULL,   url,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   crs = NULL,   where = NULL,   coords_col = NULL,   name_col = NULL,   name = NULL,   ... )"},{"path":"/reference/get_esri_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use esri2sf to get data from an ArcGIS FeatureServer or MapServer for a\nlocation — get_esri_data","text":"location sf, sfc, bbox object (object convertible as_bbox(). Optional. url FeatureServer MapServer url retrieve data . Passed url parameter esri2sf::esri2sf() esri2df functions. dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. crs coordinate reference system use query; default 4326 query string passed esri2sf, Default: NULL coords_col coordinate columns, e.g. c(\"longitude\", \"latitude\") name_col name ArcGIS FeatureServer MapServer column location names features name location name ... Additional arguments passed esri2sf::esri2df esri2sf::esri2sf","code":""},{"path":[]},{"path":"/reference/get_flickr_photos.html","id":null,"dir":"Reference","previous_headings":"","what":"Use FlickrAPI to get geotagged photos for a location — get_flickr_photos","title":"Use FlickrAPI to get geotagged photos for a location — get_flickr_photos","text":"Set API key using FlickrAPI::set_flickr_api_key() pass api_key parameter. Currently relies fork package https://github.com/elipousson/FlickrAPI","code":""},{"path":"/reference/get_flickr_photos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use FlickrAPI to get geotagged photos for a location — get_flickr_photos","text":"","code":"get_flickr_photos(   api_key = NULL,   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   user_id = NULL,   tags = NULL,   license_id = \"cc0\",   sort = \"date-posted\",   desc = TRUE,   img_size = \"s\",   extras = c(\"description\", \"date_taken\", \"tags\", \"geo\"),   per_page = 100,   page = 1,   orientation = NULL,   geometry = TRUE,   crs = 4326 )"},{"path":"/reference/get_flickr_photos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use FlickrAPI to get geotagged photos for a location — get_flickr_photos","text":"api_key Flickr API key. api_key `NULL`, function uses [getFlickrAPIKey()] use environment variable \"FLICKR_API_KEY\" key. location sf bbox object use creating bounding box getting photos Flickr. dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. user_id NSID user photo search. parameter passed everybody's public photos searched. tags vector tags wish search . license_id license id photos (possible values see Flickr API method flickr.photos.licenses.getInfo). See details information. sort Supported options include \"date-posted\",\"date-taken\", \"interestingness\", \"relevance\" desc TRUE return images descending sort order, FALSE, return ascending sort order. Ignored sort set \"relevance\". img_size Defaults \"s\" (small). Options ranging smallest largest include \"sq\", \"t\", \"s\", \"q\", \"m\", \"n\", \"z\", \"c\", \"l\", \"o\" extras Defaults \"description\", \"date_taken\", \"tags\", \"geo\". per_page Photos return per page search, Default: 100. Maximum 250 location provided 500 otherwise. page page greater length 1, function uses purrr::map_dfr() return results pages may cause issues API access large page range provided. Default: 1 orientation img_size length 1, photos filtered one supported orientations (\"portrait\", \"landscape\", \"square\"); defaults NULL. geometry TRUE, include \"geo\" extras convert photos data frame sf object. crs Coordinate reference system sf object return geometry TRUE.","code":""},{"path":"/reference/get_flickr_photos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use FlickrAPI to get geotagged photos for a location — get_flickr_photos","text":"data frame photo information sf object geometry based latitude longitude geocoded photos.","code":""},{"path":"/reference/get_flickr_photos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use FlickrAPI to get geotagged photos for a location — get_flickr_photos","text":"License id options: license_id can integer 0 10 corresponding license code including: \"c\" (Rights Reserved), \"-bc-sa\" (Attribution-NonCommercial-ShareAlike), \"-nc\" (Attribution-NonCommercial), \"-nc-nd\" (Attribution-NonCommercial-NoDerivs), \"\" (Attribution), \"-sa\" (Attribution-ShareAlike), \"-nd\" (Attribution-NoDerivs), \"nkc\" (known copyright restrictions), \"pd-us\" (United States Government Work), \"cc0\" (Public Domain Dedication), \"pd\" (Public Domain Mark).","code":""},{"path":[]},{"path":"/reference/get_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Get location of a specified type based on name, id, or location — get_location","title":"Get location of a specified type based on name, id, or location — get_location","text":"Filter name id use spatial filter based sf object geocoded street address. Optionally can use index list match type named list URLs sf objects.","code":""},{"path":"/reference/get_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get location of a specified type based on name, id, or location — get_location","text":"","code":"get_location(   type,   name = NULL,   name_col = \"name\",   id = NULL,   id_col = \"id\",   location = NULL,   index = NULL,   union = FALSE,   crs = NULL,   label = NULL,   class = \"sf\",   ... )"},{"path":"/reference/get_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get location of a specified type based on name, id, or location — get_location","text":"type Type location return. Type can sf object, e.g. data frame multiple neighborhoods character string can passed get_location_data. index provided, character can also character string match name list. name Location name return. name_col Column name type name values, Default: 'name' Required name provided. id Location id return. id coerced character numeric match class id_col type. id_col Column name type id values, Default: 'id'. Required id provided. location address, bounding box (bbox), simple feature (sf) object passed st_filter. valid address addresses geocoded geo), converted simple feature object, used spatial filter. bbox objects converted using sf_bbox_to_sf(). Multiple addresses supported. index Optional list used match type data, Default: NULL union TRUE, location geometry unioned st_union names combined single value. Default: FALSE. crs Coordinate reference system return; defaults NULL returns data using coordinate reference system provided type location. label Label optionally added \"label\" column; must length 1 match number rows returned based parameters. union = TRUE, using label recommended. Default: NULL ... Additional parameters passed get_location_data type character index NULL.","code":""},{"path":"/reference/get_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get location of a specified type based on name, id, or location — get_location","text":"simple feature object data provided type.","code":""},{"path":"/reference/get_location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get location of a specified type based on name, id, or location — get_location","text":"","code":"nc <- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\")) #> Reading layer `nc' from data source  #>   `/Library/Frameworks/R.framework/Versions/4.1-arm64/Resources/library/sf/shape/nc.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 14 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965 #> Geodetic CRS:  NAD27 # Check if type as sf object with name/id lookup works get_location(type = nc, name = \"Warren\", name_col = \"NAME\") #> Simple feature collection with 1 feature and 14 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -78.32125 ymin: 36.19595 xmax: -77.89886 ymax: 36.55294 #> Geodetic CRS:  NAD27 #>    AREA PERIMETER CNTY_ CNTY_ID   NAME  FIPS FIPSNO CRESS_ID BIR74 SID74 #> 9 0.118     1.421  1836    1836 Warren 37185  37185       93   968     4 #>   NWBIR74 BIR79 SID79 NWBIR79                       geometry #> 9     748  1190     2     844 MULTIPOLYGON (((-78.30876 3... get_location(type = nc, id = 37185, id_col = \"FIPSNO\") #> Simple feature collection with 1 feature and 14 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -78.32125 ymin: 36.19595 xmax: -77.89886 ymax: 36.55294 #> Geodetic CRS:  NAD27 #>    AREA PERIMETER CNTY_ CNTY_ID   NAME  FIPS FIPSNO CRESS_ID BIR74 SID74 #> 9 0.118     1.421  1836    1836 Warren 37185  37185       93   968     4 #>   NWBIR74 BIR79 SID79 NWBIR79                       geometry #> 9     748  1190     2     844 MULTIPOLYGON (((-78.30876 3...  # Type also supports a range of other formats including  # File path get_location(   type = system.file(\"shape/nc.shp\", package = \"sf\"),   name = \"Hertford\",   name_col = \"NAME\" ) #> Simple feature collection with 1 feature and 14 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -77.21767 ymin: 36.23024 xmax: -76.7075 ymax: 36.55629 #> Geodetic CRS:  NAD27 #> # A tibble: 1 × 15 #>    AREA PERIMETER CNTY_ CNTY_ID NAME   FIPS  FIPSNO CRESS_ID BIR74 SID74 NWBIR74 #>   <dbl>     <dbl> <dbl>   <dbl> <chr>  <chr>  <dbl>    <int> <dbl> <dbl>   <dbl> #> 1 0.097      1.67  1833    1833 Hertf… 37091  37091       46  1452     7     954 #> # … with 4 more variables: BIR79 <dbl>, SID79 <dbl>, NWBIR79 <dbl>, #> #   geometry <POLYGON [°]>  # Index name (if a named list of datasets, urls, or paths is passed to index) get_location(   type = \"smaller\",   name = \"Hertford\",   name_col = \"NAME\",   index = list(     \"smaller\" = dplyr::filter(nc, AREA <= 0.10),     \"larger\" = dplyr::filter(nc, AREA > 0.15)   ) ) #> Simple feature collection with 1 feature and 14 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -77.21767 ymin: 36.23024 xmax: -76.7075 ymax: 36.55629 #> Geodetic CRS:  NAD27 #>    AREA PERIMETER CNTY_ CNTY_ID     NAME  FIPS FIPSNO CRESS_ID BIR74 SID74 #> 3 0.097      1.67  1833    1833 Hertford 37091  37091       46  1452     7 #>   NWBIR74 BIR79 SID79 NWBIR79                       geometry #> 3     954  1838     5    1237 MULTIPOLYGON (((-76.74506 3...  # url may require passing extra parameters to `get_location_data()` # In this example, no location information is passed to get_location() so it warns before returning all types md_parks <-   get_location(   type = \"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Parks/FeatureServer/0\",   location = filter(us_states, abb == \"MD\")$bbox[[1]]  # name_col = \"NAME\", #  name = \"Chesapeake and Ohio Canal National Historic Park\" ) #> Error in data.matrix(data): 'list' object cannot be coerced to type 'double'"},{"path":"/reference/get_location_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data for a location — get_location_data","title":"Get data for a location — get_location_data","text":"Returns data selected area areas optional buffer. crop trim FALSE, function uses st_intersects filter data include full geometry anything overlaps area bbox (area provided).","code":""},{"path":"/reference/get_location_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data for a location — get_location_data","text":"","code":"get_location_data(   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   data = NULL,   url = NULL,   path = NULL,   package = NULL,   filetype = \"gpkg\",   fn = NULL,   crop = TRUE,   trim = FALSE,   from_crs = NULL,   crs = NULL,   class = \"sf\",   label = NULL,   index = NULL,   ... )  map_location_data(   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   data = NULL,   url = NULL,   path = NULL,   package = NULL,   filetype = \"gpkg\",   fn = NULL,   crop = TRUE,   trim = FALSE,   from_crs = NULL,   crs = NULL,   class = \"list\",   label = NULL,   load = FALSE,   index = NULL,   ... )"},{"path":"/reference/get_location_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data for a location — get_location_data","text":"location sf object. multiple areas provided, unioned single sf object using sf::st_union dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. data sf object including data area. data may also url file path. data can name data object , package filetype provided, cached external file. url url FeatureServer MapServer layer pass get_esri_data. url can provided data parameter path path spatial data file supported sf::read_sf package package name. filetype file type supported sf::read_sf. file type must provided extdata cached data. fn Function apply data returning. crop TRUE, data cropped location bounding box sf::st_crop adjusted dist, diag_ratio, asp parameters provided. Default TRUE. trim TRUE, data trimmed area sf::st_intersection. option ignores dist, diag_ratio, asp parameters. Default FALSE. from_crs coordinate reference system data. crs coordinate reference system return class Class object return. index list possible location, data, (optionally) package values. List must named include value named package package must NULL, set package based index. list NULL location /data character numeric values, location data assumed index values index list. index parameter supports nested lists created make_location_data_list (using default key names \"location\" \"data\"). feature fully tested may result errors unexpected results. ... additional parameters passed read_sf_path, read_sf_url, read_sf_pkg location_filter load TRUE class \"list\", load data local environment; defaults FALSE.","code":""},{"path":"/reference/get_location_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get data for a location — get_location_data","text":"Working sf lists data locations: map_data_location makes easier work sf lists. supports data character vector, data sf list location single object, location character vector sf list (including lists bbox sfc objects), data location lists (list created make_location_data_list).","code":""},{"path":"/reference/get_location_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data for a location — get_location_data","text":"","code":"map_location_data(   data = c(\"streets\", \"mta_bus_lines\"),   package = \"mapbaltimore\",   location = mapbaltimore::council_districts[2,],   label = mapbaltimore::council_districts[2,]$name,   load = TRUE ) #> <environment: R_GlobalEnv>"},{"path":"/reference/get_margin.html","id":null,"dir":"Reference","previous_headings":"","what":"Get margins for a ggplot2 plot or map based on style or distance — get_margin","title":"Get margins for a ggplot2 plot or map based on style or distance — get_margin","text":"function works combination get_paper() function make easier position map page saving file. primarily useful using map plot created ggplot2 part print document format composed outside R using page layout application Adobe InDesign.","code":""},{"path":"/reference/get_margin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get margins for a ggplot2 plot or map based on style or distance — get_margin","text":"","code":"get_margin(   margin = NULL,   paper = NULL,   orientation = NULL,   dist = NULL,   unit = \"in\",   plot_width = NULL,   header = 0,   footer = 0 )"},{"path":"/reference/get_margin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get margins for a ggplot2 plot or map based on style or distance — get_margin","text":"margin Margin style (options include \"extrawide\", \"wide\", \"standard\", \"narrow\", \"none\"), Additional \"auto\" option generate margin based line length planned yet implemented. Default: NULL (equivalent \"none\"). paper Paper, Default: 'letter'. orientation Orientation \"portrait\", \"landscape\", \"square\", Default: 'portrait'. dist Margin distance (single value used sides), Default: NULL unit Unit margin distance, Default: ''. plot_width Plot map width units. paper plot_width provided, margins half distance two evenly distributed. sets margin distance height well width work well header footers improved future. header, footer Header footer height units; defaults 0. Please note: headers footers currently supported \"px\" units.","code":""},{"path":"/reference/get_margin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get margins for a ggplot2 plot or map based on style or distance — get_margin","text":"margin element intended use element_rect plot.background theme element.","code":""},{"path":[]},{"path":"/reference/get_margin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get margins for a ggplot2 plot or map based on style or distance — get_margin","text":"","code":"get_margin(\"standard\") #> [1] 1inches 1inches 1inches 1inches  get_margin(\"none\") #> [1] 0inches 0inches 0inches 0inches  get_margin(dist = 25, unit = \"mm\") #> [1] 25mm 25mm 25mm 25mm  get_margin(paper = \"letter\", plot_width = 5.5) #> [1] 1.5inches 1.5inches 1.5inches 1.5inches"},{"path":"/reference/get_open_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data from an open data portal (Socrata) for a location — get_open_data","title":"Get data from an open data portal (Socrata) for a location — get_open_data","text":"get_socrata_data get_open_data source_type set \"socrata\" (currently supported option). get_open_data can return selected dataset using Socrata Query Language (SoQL) parameters tibble sf object. Details SoQL queries found Socrata API documentation https://dev.socrata.com/docs/queries/.","code":""},{"path":"/reference/get_open_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data from an open data portal (Socrata) for a location — get_open_data","text":"","code":"get_open_data(   data = NULL,   source_url = NULL,   source_type = \"socrata\",   select = NULL,   where = NULL,   query = NULL,   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   name_col = NULL,   name = NULL,   coords = c(\"longitude\", \"latitude\"),   geometry = FALSE,   key = NULL,   from_crs = 4326,   crs = NULL )  get_socrata_data(   data = NULL,   source_url = NULL,   select = NULL,   where = NULL,   query = NULL,   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   name_col = NULL,   name = NULL,   coords = c(\"longitude\", \"latitude\"),   geometry = FALSE,   key = NULL,   from_crs = 4326,   crs = NULL )"},{"path":"/reference/get_open_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data from an open data portal (Socrata) for a location — get_open_data","text":"data data set identifier (known resource Socrata). data set \"list\" valid source_url provided, function returns list available resources. source_url data source url. Socrata, base url open data portal. source_type Data source type; defaults \"socrata\" currently supported option. select SODA $select parameter. Set columns returned, similar SELECT SQL. https://dev.socrata.com/docs/queries/select.html SODA $parameter. Filters rows returned, similar . https://dev.socrata.com/docs/queries/.html query SODA $query parameter. full SoQL query string, one parameter. https://dev.socrata.com/docs/queries/query.html location sf bbox obkect dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. name_col name column Socrata data location names (e.g. County) name location name return coords Name(s) column coordinate data, Default: c(\"longitude\", \"latitude\") geometry TRUE latitude/longitude columns available, return sf object. Default FALSE. key API Key; required from_crs Coordinate reference system source data. crs Coordinate reference system return.","code":""},{"path":"/reference/get_open_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data from an open data portal (Socrata) for a location — get_open_data","text":"","code":"## Get Q2 2020 vehicle crash data for Cecil County, Maryland get_open_data(   source_url = \"https://opendata.maryland.gov\",   data = \"65du-s3qu\",   where = \"(year = '2020') AND (quarter = 'Q2')\",   name_col = \"county_desc\",   name = \"Cecil\",   key = Sys.getenv(\"MARYLAND_OPEN_DATA_API_KEY\") ) #> Error: An API key is required."},{"path":"/reference/get_osm_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Use osmdata to get Open Street Map data for a location — get_osm_data","title":"Use osmdata to get Open Street Map data for a location — get_osm_data","text":"Wraps osmdata functions query OSM data adjusted bounding box enclosing ways/relations around center location. timeout nodes_only parameters fully supported currently.","code":""},{"path":"/reference/get_osm_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use osmdata to get Open Street Map data for a location — get_osm_data","text":"","code":"get_osm_data(   location = NULL,   key,   value = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   crs = NULL,   geometry = NULL,   osmdata = FALSE,   enclosing = NULL,   nodes_only = FALSE,   timeout = 120 )  get_osm_boundaries(location, level = NULL, enclosing = \"way\", osmdata = TRUE)"},{"path":"/reference/get_osm_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use osmdata to get Open Street Map data for a location — get_osm_data","text":"location sf, sfc, bbox object. key Feature key overpass API query. value Value feature key; can negated initial exclamation mark, value = \"!\", can also vector, value = c(\"\", \"\"). value = \"\" key = \"building\" values passed osmdata package preset list extracted osmdata::available_tags(). dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. crs Coordinate reference system output data; NULL, data remains Open Street Map coordinate reference system 4326. Default: NULL. geometry Geometry type output (\"polygons\", \"points\", \"lines\", \"multilines\", \"multipolygons\"); multiple geometry types needed set osmdata TRUE. Default NULL. osmdata TRUE return osmdata class object includes overpass API call, metadata including timestamp version numbers, available geometry types; defaults FALSE. enclosing enclosing \"relation\" \"way\", use osmdata::opq_enclosing() function query OSM data (instead osmdata::add_osm_feature(). Defaults NULL. using enclosing, dist, diag_ratio, asp, unit parameters ignored center provided location used query. geometry set automatically based enclosing \"relation\" using \"multipolygon\" \"way\" using \"polygon\" geometry. nodes_only TRUE, query OSM nodes . OSM structures place = \"city\" highway = \"traffic_signals\" represented nodes . Queries built default return nodes, ways, relation, can inefficient node-queries. Setting value TRUE cases makes queries efficient, data returned osm_points list item. timeout may necessary increase value large queries, server may time data delivered. level administrative level (admin_level) boundary return; defaults NULL. See https://wiki.openstreetmap.org/wiki/Key:admin_level information. used get_osm_boundaries.","code":""},{"path":"/reference/get_osm_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use osmdata to get Open Street Map data for a location — get_osm_data","text":"simple feature object features using selected geometry type osmdata object features geometry types.","code":""},{"path":"/reference/get_paper.html","id":null,"dir":"Reference","previous_headings":"","what":"Get standard paper and image sizes — get_paper","title":"Get standard paper and image sizes — get_paper","text":"Use \"paper\" parameter (matching name paper_sizes), standard (optionally including series size) parameter, width, height units. May return multiple paper sizes depending parameters.","code":""},{"path":"/reference/get_paper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get standard paper and image sizes — get_paper","text":"","code":"get_paper(   paper = \"letter\",   orientation = \"portrait\",   standard = NULL,   series = NULL,   size = NULL,   width = NULL,   height = NULL,   units = NULL,   cols = 1,   rows = 1,   gutter = 0,   bbox = NULL,   margin = NULL,   ... )"},{"path":"/reference/get_paper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get standard paper and image sizes — get_paper","text":"paper Paper, Default: 'letter'. orientation Orientation \"portrait\", \"landscape\", \"square\", Default: 'portrait'. standard Size standard, \"ANSI\", \"ISO\", \"British Imperial\", \"JIS\", \"USPS\", \"Facebook\", \"Instagram\", \"Twitter\". series Size series (e.g. ), Default: NULL size Size number (used \"ISO\" \"JIS\" series). Standard, series, size may required return single paper using parameters. width, height Width height units, Default: NULL. units Paper size units, either \"\", \"mm\", \"px\"; defaults NULL (using \"\" width height provided). cols, rows Number expected columns rows paper; used determine row_height section_asp paper data frame returned get_paper rows cols greater 1; defaults NULL. gutter Gutter distance units. Gutter used spacing rows columns (variable spacing currently supported); defaults 0. bbox bounding box use get orientation using sf_bbox_asp() orientation = TRUE. margin Margin style (options include \"extrawide\", \"wide\", \"standard\", \"narrow\", \"none\"), Additional \"auto\" option generate margin based line length planned yet implemented. Default: NULL (equivalent \"none\"). ... Additional parameters passed get_margin. plot_width can passed parameters paper single row. margin returned list column.","code":""},{"path":"/reference/get_paper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get standard paper and image sizes — get_paper","text":"Data frame one paper/image sizes.","code":""},{"path":"/reference/get_paper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get standard paper and image sizes — get_paper","text":"margin provided, block_width, block_height, block_asp calculated included columns returned data frame. Paper can also data frame \"width\", \"height\", \"orientation\", \"units\" columns.","code":""},{"path":"/reference/get_paper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get standard paper and image sizes — get_paper","text":"","code":"get_paper(\"letter\") #> # A tibble: 1 × 16 #>   name   series size  standard units width height   asp  cols col_width  rows #>   <chr>  <chr>  <chr> <chr>    <chr> <dbl>  <dbl> <dbl> <dbl>     <dbl> <dbl> #> 1 Letter NA     NA    ANSI     in      8.5     11 0.773     1       8.5     1 #> # … with 5 more variables: row_height <dbl>, gutter <dbl>, section_asp <dbl>, #> #   orientation <chr>, type <chr>  get_paper(paper = NULL, standard = \"ISO\", series = \"A\", size = 4) #> # A tibble: 1 × 16 #>   name  series size  standard units width height   asp  cols col_width  rows #>   <chr> <chr>  <chr> <chr>    <chr> <dbl>  <dbl> <dbl> <dbl>     <dbl> <dbl> #> 1 A4    A      4     ISO      mm      210    297 0.707     1       210     1 #> # … with 5 more variables: row_height <dbl>, gutter <dbl>, section_asp <dbl>, #> #   orientation <chr>, type <chr>  get_paper(width = 11, height = 17) #> # A tibble: 1 × 16 #>   name   series size  standard units width height   asp  cols col_width  rows #>   <chr>  <chr>  <chr> <chr>    <chr> <dbl>  <dbl> <dbl> <dbl>     <dbl> <dbl> #> 1 Letter NA     NA    ANSI     in      8.5     11 0.773     1       8.5     1 #> # … with 5 more variables: row_height <dbl>, gutter <dbl>, section_asp <dbl>, #> #   orientation <chr>, type <chr>"},{"path":"/reference/get_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Get standard scales and convert to scale distances — get_scale","title":"Get standard scales and convert to scale distances — get_scale","text":"Get standard scales convert scale distances","code":""},{"path":"/reference/get_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get standard scales and convert to scale distances — get_scale","text":"","code":"get_scale(scale = NULL, standard = NULL, series = NULL)"},{"path":"/reference/get_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get standard scales and convert to scale distances — get_scale","text":"scale Scale name standard USGS, Engineering, Architectural series Map series","code":""},{"path":"/reference/get_wiki_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Wikipedia articles for a location — get_wiki_data","title":"Get Wikipedia articles for a location — get_wiki_data","text":"Use Wikipedia API geosearch API get Wikipedia articles location. See https://www.mediawiki.org/wiki/Extension:GeoData information. returns Wikipedia articles coordinates.","code":""},{"path":"/reference/get_wiki_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Wikipedia articles for a location — get_wiki_data","text":"","code":"get_wiki_data(   location,   dist = 100,   diag_ratio = NULL,   asp = NULL,   radius = FALSE,   primary = TRUE,   details = c(\"type\", \"name\", \"region\"),   lang = \"en\",   limit = 50,   geometry = TRUE )"},{"path":"/reference/get_wiki_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Wikipedia articles for a location — get_wiki_data","text":"location sf object. multiple areas provided, unioned single sf object using sf::st_union dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. radius TRUE, use dist buffer around center location. primary TRUE, search primary coordinates. Set primary \"\" \"secondary\" search coordinate types. details Additional detailed return results. Options include \"type\", \"name\", \"country\", \"region\" lang Language search Wikipedia; defaults \"en\". limit Number pages return (max 500); deafaults 50 geometry TRUE, return sf object. FALSE, return dataframe. Defaults FALSE.","code":""},{"path":"/reference/ggsave_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a ggplot2 plot or gt table to file and update file EXIF metadata — ggsave_ext","title":"Save a ggplot2 plot or gt table to file and update file EXIF metadata — ggsave_ext","text":"Save plot map update EXIF metadata title, author, create data. ggsave_ext() also supports creating file name based sentence case name spaces (e.g. \"Baltimore city map\") appending label (e.g. \"baltcity\") prefix output file name.","code":""},{"path":"/reference/ggsave_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a ggplot2 plot or gt table to file and update file EXIF metadata — ggsave_ext","text":"","code":"ggsave_ext(   plot = ggplot2::last_plot(),   name = NULL,   label = NULL,   prefix = NULL,   postfix = NULL,   filename = NULL,   device = NULL,   filetype = NULL,   path = NULL,   paper = NULL,   orientation = \"portrait\",   width,   height,   units = \"in\",   scale = 1,   dpi = 300,   bgcolor = NULL,   exif = FALSE,   title = NULL,   author = NULL,   keywords = NULL,   args = NULL,   ... )  gtsave_ext(   gt_object,   name = NULL,   label = NULL,   prefix = NULL,   postfix = NULL,   filename = NULL,   filetype = NULL,   path = NULL,   ... )"},{"path":"/reference/ggsave_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a ggplot2 plot or gt table to file and update file EXIF metadata — ggsave_ext","text":"plot Plot save, defaults last plot displayed. name Plot name, used create filename (filename NULL) using make_filename() label Label combine name converted snake case janitor::make_clean_names(). label designed identify area shared characteristics across multiple data files, maps, plots. prefix File name prefix. \"date\" adds date prefix, \"time\" adds date/time prefix; defaults NULL. postfix File name postfix; defaults NULL. filename File name create disk. device Device use. Can either device function (e.g. png), one \"eps\", \"ps\", \"tex\" (pictex), \"pdf\", \"jpeg\", \"tiff\", \"png\", \"bmp\", \"svg\" \"wmf\" (windows ). filetype File type extension. path Path directory save plot : path filename combined create fully qualified file name. Defaults working directory. paper Paper matching name paper_sizes (e.g. \"letter\"). case sensitive. orientation Page orientation (\"portrait\", \"landscape\", \"square\"). width Plot size units (\"\", \"cm\", \"mm\", \"px\"). supplied, uses size current graphics device. height Plot size units (\"\", \"cm\", \"mm\", \"px\"). supplied, uses size current graphics device. units Plot size units (\"\", \"cm\", \"mm\", \"px\"). supplied, uses size current graphics device. scale Multiplicative scaling factor. dpi Plot resolution. Also accepts string input: \"retina\" (320), \"print\" (300), \"screen\" (72). Applies raster output types. bgcolor Background color optionally override plot.background theme element. exif TRUE, EXIF metadata exported file updated exifr package; defaults FALSE. title Title add file metadata exiftoolr, Default: NULL. author Author add file metadata exiftoolr, Default: NULL. keywords Keyword(s) added file metadata exiftoolr, Default: NULL. args Alternate arguments passed exiftoolr::exif_call(). args NULL, title, author, date, keywords ignored; defaults NULL. ... Additional parameters passed ggplot2::ggsave() gt::gtsave(). gt_object gt table save file.","code":""},{"path":"/reference/ggsave_ext.html","id":"gtsave-ext","dir":"Reference","previous_headings":"","what":"gtsave_ext","title":"Save a ggplot2 plot or gt table to file and update file EXIF metadata — ggsave_ext","text":"gtsave_ext wraps equivalent function gt::gtsave() similar structure creating custom file names. function currently support EXIF metadata updates although option may added future.","code":""},{"path":[]},{"path":"/reference/ggsave_ext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a ggplot2 plot or gt table to file and update file EXIF metadata — ggsave_ext","text":"","code":"if (FALSE) { if (interactive()) {   neighborhoods <-     get_location(       type = \"neighborhoods\",       package = \"mapbaltimore\"     )    ggplot2::ggplot() +     ggplot2::geom_sf(data = neighborhoods)    ggsave_ext(     name = \"neighborhoods\",     label = \"Baltimore City\",     author = \"Thomas H. Poppleton\",     device = \"pdf\",     paper = \"letter\"   ) } }"},{"path":"/reference/is_geom_type.html","id":null,"dir":"Reference","previous_headings":"","what":"What geometry type is this feature? — is_geom_type","title":"What geometry type is this feature? — is_geom_type","text":"flexible wrapper sf::st_geometry_type.","code":""},{"path":"/reference/is_geom_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"What geometry type is this feature? — is_geom_type","text":"","code":"is_geom_type(x, ext = TRUE, type = NULL, by_geometry = FALSE)  is_point(x, by_geometry = FALSE)  is_multipoint(x, by_geometry = FALSE)  is_string(x, by_geometry = FALSE)  is_multistring(x, by_geometry = FALSE)  is_polygon(x, by_geometry = FALSE)  is_multipolygon(x, by_geometry = FALSE)"},{"path":"/reference/is_geom_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"What geometry type is this feature? — is_geom_type","text":"x sf sfc object passed sf::st_geometry_type ext st_geom_type, ext TRUE check NULL, return list checks POINTS, POLYGONS, LINESTRING, returned types. type \"POINT\", check geometry type POINT. available geometry types; case sensitive; Default: NULL by_geometry Passed sf::st_geometry_type; defaults FALSE","code":""},{"path":"/reference/is_geom_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"What geometry type is this feature? — is_geom_type","text":"Returns vector geometry types; gives warning object uses multiple types.","code":""},{"path":"/reference/is_gg.html","id":null,"dir":"Reference","previous_headings":"","what":"Check ggplot objects and ggplot lists — is_gg","title":"Check ggplot objects and ggplot lists — is_gg","text":"Functions checking object ggplot2 object type . functions may removed alternatives can identified different package.","code":""},{"path":"/reference/is_gg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check ggplot objects and ggplot lists — is_gg","text":"","code":"is_gg_layer(x)  is_gg_sf_layer(x)  is_gg_scale(x)  is_gg_theme(x)  is_gg_component(x)  is_gg_list(x)"},{"path":"/reference/is_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"What is the class or spatial attributes of this feature? — is_sf","title":"What is the class or spatial attributes of this feature? — is_sf","text":"class spatial attributes feature?","code":""},{"path":"/reference/is_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"What is the class or spatial attributes of this feature? — is_sf","text":"","code":"is_sf(x, ext = FALSE, null.ok = FALSE)  is_sfc(x, null.ok = FALSE)  is_bbox(x, null.ok = FALSE)  is_sf_list(x, is_named = FALSE, ext = FALSE, null.ok = FALSE)  is_raster(x, null.ok = FALSE)  is_sp(x, null.ok = FALSE)  is_same_crs(x, y)  is_same_area(x, y)  is_same_dist(x, y, dist = NULL)"},{"path":"/reference/is_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"What is the class or spatial attributes of this feature? — is_sf","text":"x sf, sfc, bbox object. ext TRUE, check x sf, sfc, bbox class object ; defaults FALSE. (used is_sf) null.ok TRUE x NULL, return TRUE; defaults FALSE. is_named TRUE, check sf list named; defaults FALSE. y sf object character numeric object supported sf::st_crs can compared x. (used is_same_crs)","code":""},{"path":"/reference/is_sf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"What is the class or spatial attributes of this feature? — is_sf","text":"is_sf: x sf class object? is_bbox: x bbox class object? is_sf_list: x list sf class objects (without names)?","code":""},{"path":"/reference/labs_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Add labels to a ggplot2 location map — labs_ext","title":"Add labels to a ggplot2 location map — labs_ext","text":"helper function converts strings glue strings title, subtitle, caption. progress.","code":""},{"path":"/reference/labs_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add labels to a ggplot2 location map — labs_ext","text":"","code":"labs_ext(   title = ggplot2::waiver(),   subtitle = ggplot2::waiver(),   caption = ggplot2::waiver(),   tag = ggplot2::waiver(),   alt = ggplot2::waiver(),   location = NULL,   name_col = NULL,   source = NULL,   ... )"},{"path":"/reference/labs_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add labels to a ggplot2 location map — labs_ext","text":"title text title. subtitle text subtitle plot displayed title. caption text caption displayed bottom-right plot default. tag text tag label displayed top-left plot default. alt Text used generation alt-text plot. See get_alt_text examples. location sf bbox object character string name_col Column name holding name identifier distinct places within simple feature collection provided location. supported bbox objects. source Data source(s). yet used supported function. ... list new name-value pairs. name aesthetic.","code":""},{"path":"/reference/layer_location_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer location data into a ggplot2 map — layer_location_data","title":"Layer location data into a ggplot2 map — layer_location_data","text":"Helper function make ggplot2 layer data returned get_location_data. text geoms, required aesthetic mapping set based name_col values passed mapping take precedence.","code":""},{"path":"/reference/layer_location_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer location data into a ggplot2 map — layer_location_data","text":"","code":"layer_location_data(   mapping = NULL,   data = NULL,   label = NULL,   geom = \"sf\",   location = NULL,   dist = NULL,   diag_ratio = NULL,   unit = \"meter\",   asp = NULL,   package = NULL,   filetype = NULL,   fn = NULL,   crop = TRUE,   trim = FALSE,   from_crs = NULL,   crs = NULL,   label_col = \"name\",   ... )"},{"path":"/reference/layer_location_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer location data into a ggplot2 map — layer_location_data","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data sf object including data area. data may also url file path. data can name data object , package filetype provided, cached external file. label label area (appended data prefix data string) geom ggplot2 geom use, Default: 'sf'. Options include \"sf\" (geom_sf), \"icon\" (geom_sf_icon), \"text\" (geom_sf_text), \"label\" (geom_sf_label), \"textsf\", \"labelsf\", \"text_repel\", \"label_repel\". location sf object. multiple areas provided, unioned single sf object using sf::st_union dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit unit adjust location dist diag_ratio; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. package package name. filetype file type supported sf::read_sf. file type must provided extdata cached data. fn Function apply data returning. crop TRUE, data cropped location bounding box sf::st_crop adjusted dist, diag_ratio, asp parameters provided. Default TRUE. trim TRUE, data trimmed area sf::st_intersection. option ignores dist, diag_ratio, asp parameters. Default FALSE. from_crs coordinate reference system data. crs coordinate reference system return label_col Column name id column text labels pass text geom. ... Parameters passed selected geom","code":""},{"path":"/reference/layer_location_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer location data into a ggplot2 map — layer_location_data","text":"ggplot2 geom","code":""},{"path":[]},{"path":"/reference/layer_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a mask layer based on a simple feature object — layer_mask","title":"Create a mask layer based on a simple feature object — layer_mask","text":"Returns mask area areas simple feature object.","code":""},{"path":"/reference/layer_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a mask layer based on a simple feature object — layer_mask","text":"","code":"layer_mask(   data = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   crs = NULL,   fill = \"white\",   color = NA,   alpha = 0.5,   mask = NULL,   neatline = FALSE,   ... )"},{"path":"/reference/layer_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a mask layer based on a simple feature object — layer_mask","text":"data sf, sfc, bbox object. dist, diag_ratio, /asp provided, data adjusted set boundaries mask. data provided, mask required. dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. crs Coordinate reference system bounding box return fill mask fill color; defaults \"white\" color mask edge color; defaults NA alpha mask alpha/transparency; defaults 0.5 mask sf bbox object define edge mask. diag_ratio, dist, asp parameters ignored mask provided. defaults NULL neatline TRUE, add layer_neatline expand = TRUE; defaults FALSE. ... Additional parameters pass geom_sf","code":""},{"path":"/reference/layer_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a mask layer based on a simple feature object — layer_mask","text":"geom_sf function.","code":""},{"path":[]},{"path":"/reference/layer_neatline.html","id":null,"dir":"Reference","previous_headings":"","what":"Set map limits to a simple feature or bounding box with a specified distance\nbuffer, aspect ratio, and panel border — layer_neatline","title":"Set map limits to a simple feature or bounding box with a specified distance\nbuffer, aspect ratio, and panel border — layer_neatline","text":"Set limits map bounding box x using coord_sf. Optionally, adjust x size applying buffer /adjust aspect ratio limiting bounding box match set aspect ratio.","code":""},{"path":"/reference/layer_neatline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set map limits to a simple feature or bounding box with a specified distance\nbuffer, aspect ratio, and panel border — layer_neatline","text":"","code":"layer_neatline(   data = NULL,   dist = NULL,   diag_ratio = NULL,   unit = \"meter\",   asp = NULL,   crs = NULL,   color = \"black\",   bgcolor = \"white\",   size = 1,   linetype = \"solid\",   expand = FALSE,   hide_grid = TRUE,   label_axes = \"----\",   ... )"},{"path":"/reference/layer_neatline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set map limits to a simple feature or bounding box with a specified distance\nbuffer, aspect ratio, and panel border — layer_neatline","text":"data sf bbox class object dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Buffer units; defaults meter. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. crs Coordinate reference system use coord_sf. color Color panel border, Default: 'black' bgcolor Fill color panel background; defaults \"white\". \"none\", panel background set ggplot2::element_blank() size Size panel border, Default: 1 linetype Line type panel border, Default: 'solid' expand Default FALSE. TRUE, function adds scale_y_continuous scale_x_continuous expand map extent provided parameters. hide_grid TRUE, hide major grid lines. Default: TRUE label_axes description axes label passed coord_sf; defaults '----' hides axes labels. ... Additional parameters pass coord_sf.","code":""},{"path":"/reference/layer_neatline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set map limits to a simple feature or bounding box with a specified distance\nbuffer, aspect ratio, and panel border — layer_neatline","text":"coord_sf function xlim ylim parameters","code":""},{"path":[]},{"path":"/reference/layer_neatline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set map limits to a simple feature or bounding box with a specified distance\nbuffer, aspect ratio, and panel border — layer_neatline","text":"","code":"if (FALSE) { if (interactive()) {   library(ggplot2)    nc <- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\"))   ggplot() +     geom_sf(data = nc) +     layer_neatline(data = nc[1, ], asp = 1, color = \"red\") } }"},{"path":"/reference/layer_scaled.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 layer scaled to a paper and orientation for a location — layer_scaled","title":"Create a ggplot2 layer scaled to a paper and orientation for a location — layer_scaled","text":"Uses layer_neatline, standard_scales, convert_dist_scale.","code":""},{"path":"/reference/layer_scaled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 layer scaled to a paper and orientation for a location — layer_scaled","text":"","code":"layer_scaled(   data = NULL,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   crs = NULL,   scale = NULL,   paper = NULL,   orientation = NULL,   clip = FALSE )"},{"path":"/reference/layer_scaled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 layer scaled to a paper and orientation for a location — layer_scaled","text":"data sf bbox class object dist distance convert. paper provided, paper width height used dist. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. crs Coordinate reference system bounding box return scale Scale name paper Paper, Default: 'letter'. orientation Orientation \"portrait\", \"landscape\", \"square\", Default: 'portrait'. clip TRUE, create scaled layer even data cut ; defaults FALSE.","code":""},{"path":[]},{"path":"/reference/location_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter, crop, or trim data to a location — location_filter","title":"Filter, crop, or trim data to a location — location_filter","text":"Location can :","code":""},{"path":"/reference/location_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter, crop, or trim data to a location — location_filter","text":"","code":"location_filter(   data,   location = NULL,   dist = NULL,   diag_ratio = NULL,   asp = NULL,   unit = \"meter\",   crs = NULL,   trim = FALSE,   crop = TRUE,   ... )"},{"path":"/reference/location_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter, crop, or trim data to a location — location_filter","text":"data Data filter location. location sf, sfc, bbox object character string address, county GeoID, state name, abbreviation, GeoID (dist parameters ignored location character string). dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" crs Coordinate reference system bounding box return trim TRUE, data trimmed area sf::st_intersection. option ignores dist, diag_ratio, asp parameters. Default FALSE. crop TRUE, data cropped location bounding box sf::st_crop adjusted dist, diag_ratio, asp parameters provided. Default TRUE. ... Additional parameters; bbox (used instead location adjusted location), county state (used get_counties get_states), join (passed sf::st_filter)","code":""},{"path":"/reference/location_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter, crop, or trim data to a location — location_filter","text":"sf, bbox, sfc object U.S. state (name, abbreviation, GeoID) county (GeoID) address","code":""},{"path":"/reference/make_filename.html","id":null,"dir":"Reference","previous_headings":"","what":"Make file name and path with optional label, prefix, or postfix — make_filename","title":"Make file name and path with optional label, prefix, or postfix — make_filename","text":"helper function create consistent file names plots created ggsave_ext() data files exported write_sf_ext().","code":""},{"path":"/reference/make_filename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make file name and path with optional label, prefix, or postfix — make_filename","text":"","code":"make_filename(   name = NULL,   label = NULL,   filetype = NULL,   filename = NULL,   path = NULL,   prefix = NULL,   postfix = NULL,   cache = FALSE )"},{"path":"/reference/make_filename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make file name and path with optional label, prefix, or postfix — make_filename","text":"name Name make file name converted snake case janitor::make_clean_names(), e.g. \"Residential zoning map\" becomes \"residential_zoning_map\" label Label combine name converted snake case janitor::make_clean_names(). label designed identify area shared characteristics across multiple data files, maps, plots. filetype File type extension. filename File name; file name NULL, name file type required. path Path file data directory. prefix File name prefix. \"date\" adds date prefix, \"time\" adds date/time prefix; defaults NULL. postfix File name postfix; defaults NULL. cache TRUE, path set overedge cache directory using get_data_dir(); defaults FALSE.","code":""},{"path":[]},{"path":"/reference/make_location_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a list of data and corresponding locations — make_location_data_list","title":"Make a list of data and corresponding locations — make_location_data_list","text":"function converts data location lists sf objects using make_sf_list. location_col, data_col, col (sets value), provided col passed make_sf_list allow creation sf list sf data frame using dplyr::group_nest().","code":""},{"path":"/reference/make_location_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a list of data and corresponding locations — make_location_data_list","text":"","code":"make_location_data_list(   data = NULL,   location = NULL,   key = c(\"location\", \"data\"),   ... )"},{"path":"/reference/make_location_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a list of data and corresponding locations — make_location_data_list","text":"data, location sf object list sf objects data corresponding locations. key Names location data returned list. ... Pass location_col /data_col group nest data provided location data. Use col set value.","code":""},{"path":"/reference/make_location_data_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a list of data and corresponding locations — make_location_data_list","text":"location data length length, combined single list. either one length 1 , length 1 object repeated match length longer object. Different length objects neither length 1 gives warning.","code":""},{"path":"/reference/make_location_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a grid over a location bounding box — make_location_grid","title":"Make a grid over a location bounding box — make_location_grid","text":"Create grid id column optionally set number columns rows.","code":""},{"path":"/reference/make_location_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a grid over a location bounding box — make_location_grid","text":"","code":"make_location_grid(   location = NULL,   dist = NULL,   diag_ratio = NULL,   asp = NULL,   unit = \"meter\",   crs = NULL,   cols = NULL,   rows = NULL,   gutter = 0,   rev = TRUE,   n = NULL,   cellsize = NULL,   square = TRUE,   ... )"},{"path":"/reference/make_location_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a grid over a location bounding box — make_location_grid","text":"location sf, sfc, bbox object, Default: NULL. Required. dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" crs Coordinate reference system bounding box return cols, rows Used set n either NULL; defaults NULL. row id added columns grid provided. gutter Distance units column cell; gutter effectively serves margin negative buffer applied cells (including edges grid). rev TRUE, id, row, col numbers assigned left right top bottom. n n NULL square TRUE, grid set automatically 10 cells wide, Default: NULL ... Additional parameters passed sf::st_make_grid","code":""},{"path":[]},{"path":"/reference/make_location_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a grid over a location bounding box — make_location_grid","text":"","code":"# Make a 4 by 5 grid covering a mile buffer around a location make_location_grid(   location = mapbaltimore::council_districts[1, ],   dist = 1,   unit = \"mile\",   cols = 4,   rows = 5 ) #> Simple feature collection with 20 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 423285 ymin: 176205.9 xmax: 429949.3 ymax: 187003.2 #> Projected CRS: NAD83(HARN) / Maryland #> First 10 features: #>    id col row                       geometry #> 1   1   1   1 POLYGON ((423285 184843.7, ... #> 2   2   2   1 POLYGON ((424951.1 184843.7... #> 3   3   3   1 POLYGON ((426617.1 184843.7... #> 4   4   4   1 POLYGON ((428283.2 184843.7... #> 5   5   1   2 POLYGON ((423285 182684.3, ... #> 6   6   2   2 POLYGON ((424951.1 182684.3... #> 7   7   3   2 POLYGON ((426617.1 182684.3... #> 8   8   4   2 POLYGON ((428283.2 182684.3... #> 9   9   1   3 POLYGON ((423285 180524.8, ... #> 10 10   2   3 POLYGON ((424951.1 180524.8...  # Make a 2 by 2 grid across a location with a 1000 meter gutter between each cell make_location_grid(   location = mapbaltimore::baltimore_city,   dist = 500,   unit = \"meter\",   cols = 2,   rows = 2,   gutter = 1000 ) #> Simple feature collection with 4 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 424860.6 ymin: 169994.6 xmax: 440631.8 ymax: 189429.9 #> Projected CRS: NAD83(HARN) / Maryland #>   id col row                       geometry #> 1  1   1   1 POLYGON ((424860.6 180212.3... #> 2  2   2   1 POLYGON ((433246.2 180212.3... #> 3  3   1   2 POLYGON ((424860.6 169994.6... #> 4  4   2   2 POLYGON ((433246.2 169994.6..."},{"path":"/reference/make_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Make map markers from a simple feature object — make_markers","title":"Make map markers from a simple feature object — make_markers","text":"Make map markers simple feature object","code":""},{"path":"/reference/make_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make map markers from a simple feature object — make_markers","text":"","code":"make_markers(   data,   groupname_col = NULL,   group_meta = NULL,   group_join = sf::st_intersects,   geocode = FALSE,   address_col = \"address\",   point = TRUE,   crs = NULL,   fn = NULL,   ... )"},{"path":"/reference/make_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make map markers from a simple feature object — make_markers","text":"data Data markers, passed data parameter get_location_data() groupname_col Group column name, used join group metadata group_meta non-spatial data frame; Default: NULL group_meta Group metadata data frame sf object intersect markers; Default: NULL group_join join function used sf::st_join() group_meta sf object, Default: sf::st_intersects geocode TRUE, geocode data using tidygeocoder::geo convert sf df_to_sf, Default: FALSE address_col Address column, used geocode TRUE Default: 'address' point TRUE, convert geometry \"POINT\" sf::st_centroid(), Default: TRUE crs Coordinate reference system markers, Default: NULL fn Function apply data results; gives warning data grouped; Default: NULL ... Additional parameters passed get_location_data()","code":""},{"path":"/reference/map_icons.html","id":null,"dir":"Reference","previous_headings":"","what":"Map icons — map_icons","title":"Map icons — map_icons","text":"index map icons four sources: mapbox/maki ideditor/temaki manifestinteractive/weather-underground-icons openstreetmap/map-icons openstreetmap/lane-icons Esri/calcite-point-symbols icon sources use open licenses. Maki, Temaki, OSM lane icons use CC0 license. Weather Underground Icons use MIT license. OSM map icons use unspecified PD style license. Calcite icons available Esri Master License Agreement (MLA).","code":""},{"path":"/reference/map_icons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map icons — map_icons","text":"","code":"map_icons"},{"path":"/reference/map_icons.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Map icons — map_icons","text":"data frame 1855 rows 5 variables: name Icon name url Icon URL GitHub repo style Icon style (Weather Underground icons ) size Icon width/height (pixels) repo GitHub repository icon collection","code":""},{"path":"/reference/mapview_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Use mapview to interactively explore spatial data — mapview_ext","title":"Use mapview to interactively explore spatial data — mapview_ext","text":"wrapper mapview::mapview","code":""},{"path":"/reference/mapview_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use mapview to interactively explore spatial data — mapview_ext","text":"","code":"mapview_col(x, nm = \"data\", col = NULL, ...)  mapview_exif(path = NULL, filetype = \"jpeg\", popup = TRUE, ...)  mapview_flickr(   x = NULL,   user_id = NULL,   tags = NULL,   api_key = NULL,   img_size = \"s\",   num = 25,   popup = TRUE,   ... )  make_img_leafpop(images, popup = TRUE)"},{"path":"/reference/mapview_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use mapview to interactively explore spatial data — mapview_ext","text":"x Raster* Spatial* Satellite sf stars object list combination . Furthermore,   can also data.frame, numeric vector character string pointing tile image folder file disk.   missing, blank map drawn. value NULL return NULL. nm Character vector. x sf list, filter mapview data named nm. NULL, mapview displays first item sf list; defaults \"data\". col Column name passed zcol parameter, Default: NULL ... Arguments passed mapview::mapview   path path folder one files EXIF location metadata filetype file extension file type; defaults \"jpg\" popup TRUE, add popup image leaflet map; defaults TRUE. user_id NSID user photo search. parameter passed everybody's public photos searched. tags vector tags wish search . api_key Flickr API key. api_key `NULL`, function uses [getFlickrAPIKey()] use environment variable \"FLICKR_API_KEY\" key. img_size Defaults \"s\" (small). Options ranging smallest largest include \"sq\", \"t\", \"s\", \"q\", \"m\", \"n\", \"z\", \"c\", \"l\", \"o\"","code":""},{"path":[]},{"path":"/reference/number_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort and number features — number_features","title":"Sort and number features — number_features","text":"Used layer_number_markers","code":""},{"path":"/reference/number_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort and number features — number_features","text":"","code":"number_features(   data,   col = NULL,   number = TRUE,   sort = \"lon\",   desc = NULL,   ... )"},{"path":"/reference/number_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort and number features — number_features","text":"data Marker data number TRUE, number markers, Default: TRUE desc TRUE, sort descending; set FALSE sort \"lon\" TRUE sort \"lat\" value, default NULL groupname_col Group column name, Default: NULL sort_col Sort column name, Default: 'lon'","code":""},{"path":"/reference/number_markers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort and number features — number_features","text":"sf object number column ordered sort.","code":""},{"path":"/reference/osm_building_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenStreetMap building tags — osm_building_tags","title":"OpenStreetMap building tags — osm_building_tags","text":"Used get_osm_data() key = \"building\".","code":""},{"path":"/reference/osm_building_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenStreetMap building tags — osm_building_tags","text":"","code":"osm_building_tags"},{"path":"/reference/osm_building_tags.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OpenStreetMap building tags — osm_building_tags","text":"character vector length 84","code":""},{"path":"/reference/osm_building_tags.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenStreetMap building tags — osm_building_tags","text":"information building key https://wiki.openstreetmap.org/wiki/Key:building","code":""},{"path":"/reference/overedge-package.html","id":null,"dir":"Reference","previous_headings":"","what":"overedge: Assorted Functions For Easier Map Making — overedge-package","title":"overedge: Assorted Functions For Easier Map Making — overedge-package","text":"Assorted functions support data wrangling visualization map making focus ggplot2 sf packages.","code":""},{"path":"/reference/overedge-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"overedge: Assorted Functions For Easier Map Making — overedge-package","text":"Maintainer: Eli Pousson eli.pousson@gmail.com (ORCID)","code":""},{"path":"/reference/paper_sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard paper and image sizes — paper_sizes","title":"Standard paper and image sizes — paper_sizes","text":"Reference table standard paper, postcard, photo print, social media image sizes, get_paper() ggsave_ext() functions. Derived visioguy/PaperSizes repo, Adobe UK guide photo sizes sources.","code":""},{"path":"/reference/paper_sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard paper and image sizes — paper_sizes","text":"","code":"paper_sizes"},{"path":"/reference/paper_sizes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Standard paper and image sizes — paper_sizes","text":"data frame 85 rows 9 variables: name Name paper series Series standard Standard size Size series units Units (\"\", \"mm\", \"px\") dimensions width Width units height Height units orientation Portrait (width greater height), landscape, square type Type (paper, postcard, print, social)","code":""},{"path":"/reference/read_sf_exif.html","id":null,"dir":"Reference","previous_headings":"","what":"Read EXIF location data from images to a simple feature object — read_sf_exif","title":"Read EXIF location data from images to a simple feature object — read_sf_exif","text":"Read EXIF data folder images.","code":""},{"path":"/reference/read_sf_exif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read EXIF location data from images to a simple feature object — read_sf_exif","text":"","code":"read_sf_exif(   path = NULL,   filetype = NULL,   bbox = NULL,   sort = \"lon\",   tags = NULL,   ... )  write_exif(   path = NULL,   filetype = NULL,   title = NULL,   author = NULL,   date = NULL,   keywords = NULL,   args = NULL,   overwrite = TRUE )"},{"path":"/reference/read_sf_exif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read EXIF location data from images to a simple feature object — read_sf_exif","text":"path path folder one files EXIF location metadata filetype file extension file type; defaults \"jpg\" bbox bounding box crop sf file (excluding images location data outside bounding box). bbox provided returned data match crs bbox. sort variable sort . Currently supports \"lon\" (default), \"lat\", \"filename\" ... Additional EXIF tags pass exiftoolr::exif_read title Title add file metadata exiftoolr, Default: NULL. author Author add file metadata exiftoolr, Default: NULL. date Date add file metadata exiftoolr (currently working), Default: NULL. keywords Keyword(s) added file metadata exiftoolr, Default: NULL. args Alternate arguments passed exiftoolr::exif_call(). args NULL, title, author, date, keywords ignored; defaults NULL. overwrite TRUE, overwrite existing EXIF metadata present provided fields; defaults TRUE","code":""},{"path":"/reference/read_sf_exif.html","id":"writing-exif-metadata","dir":"Reference","previous_headings":"","what":"Writing EXIF metadata","title":"Read EXIF location data from images to a simple feature object — read_sf_exif","text":"NA","code":""},{"path":[]},{"path":"/reference/read_sf_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Read spatial data in a bounding box to a simple feature object — read_sf_ext","title":"Read spatial data in a bounding box to a simple feature object — read_sf_ext","text":"extended version sf::read_sf() support reading spatial data based file path, url (spatial data ArcGIS FeatureServer MapServer, Google Sheet coordinate columns), data name associated package. Optionally provide bounding box filter data (supported data types).","code":""},{"path":"/reference/read_sf_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read spatial data in a bounding box to a simple feature object — read_sf_ext","text":"","code":"read_sf_path(path, bbox = NULL, ...)  read_sf_url(url, bbox = NULL, coords = NULL, ...)  read_sf_pkg(data, bbox = NULL, package, filetype = \"gpkg\", ...)  read_sf_download(   url,   bbox = NULL,   filename = NULL,   path = NULL,   filetype = \"geojson\",   prefix = \"date\",   method = \"auto\",   unzip = FALSE,   ... )"},{"path":"/reference/read_sf_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read spatial data in a bounding box to a simple feature object — read_sf_ext","text":"path file path; used read_sf_path() . bbox bounding box object; Default: NULL. \"bbox\" provided, read_sf returns features intersecting bounding box. ... additional parameters passed multiple functions; see details. url url spatial data file ArcGIS FeatureServer MapServer access get_esri_data(); used read_sf_url() coords Character vector coordinate values; used read_sf_url() \"url\" Google Sheet. data character; name data; used read_sf_pkg() package character; package name; used read_sf_pkg() filetype file type supported sf::read_sf()., Default: 'gpkg'; used read_sf_pkg() required data package cache directory extdata system files. filename File name; file name NULL, name file type required. prefix File name prefix. \"date\" adds date prefix, \"time\" adds date/time prefix; defaults NULL. method Method used downloading files.  Current     download methods \"internal\", \"wininet\" (Windows     ) \"libcurl\", \"wget\" \"curl\",     value \"auto\": see ‘Details’ ‘Note’. method can also set option     \"download.file.method\": see options().","code":""},{"path":"/reference/read_sf_ext.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read spatial data in a bounding box to a simple feature object — read_sf_ext","text":"Reading data package: read_sf_pkg looks three types package data: Data loaded package External data extdata system files folder. Cached data cache directory returned rappdirs::user_cache_dir Additional ... parameters: read_sf_pkg read_sf_download pass additional parameters read_sf_path supports query, name_col, name, table. name name_col ignored query parameter provided. table provided, expected layer name created based file path. read_sf_url pass , name_col, name ArcGIS FeatureServer MapServer url (passed get_esri_data) sheet url Google Sheet (passed googlesheets4::read_sheet), query wkt filter parameter url type (passed sf::read_sf).","code":""},{"path":[]},{"path":"/reference/sf_bbox_misc.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure, transform, and convert bounding boxes — sf_bbox_misc","title":"Measure, transform, and convert bounding boxes — sf_bbox_misc","text":"Simple bounding box functions can use :","code":""},{"path":"/reference/sf_bbox_misc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure, transform, and convert bounding boxes — sf_bbox_misc","text":"","code":"sf_bbox_asp(bbox, orientation = FALSE)  sf_bbox_dist(bbox, from, to, units = FALSE)  sf_bbox_xdist(bbox, units = FALSE)  sf_bbox_ydist(bbox, units = FALSE)  sf_bbox_diagdist(bbox, units = FALSE)  sf_bbox_transform(bbox, crs = NULL)  sf_bbox_to_sf(bbox, sf_col = \"geometry\")  sf_bbox_to_sfc(bbox)  sf_bbox_to_wkt(bbox)  sf_bbox_to_lonlat_query(bbox, coords = c(\"longitude\", \"latitude\"), crs = 4326)  sf_bbox_shift(   bbox,   x_nudge = 0,   y_nudge = 0,   side = c(\"all\", \"top\", \"bottom\", \"left\", \"right\"),   dir = NULL )  sf_bbox_contract(bbox, x_nudge = 0, y_nudge = 0)  sf_bbox_expand(bbox, x_nudge = 0, y_nudge = 0)"},{"path":"/reference/sf_bbox_misc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure, transform, and convert bounding boxes — sf_bbox_misc","text":"bbox bbox object orientation TRUE, sf_bbox_asp returns suggested orientation based aspect ratio (< 0.9 \"portrait\"; > 1.1 \"landscape\"; else \"square\"); defaults FALSE. , xy pairs (e.g. c(\"xmax\", \"ymax) defining points measure distance . units TRUE, distance functions return units. FALSE (default), distance functions return numeric values. crs coordinate reference system use query; default 4326 coords query column names coordinates. e,g, c(\"X\", \"Y\") c(\"lat\", \"lon\") x_nudge, y_nudge Length 1 2 numeric vector; unitless. side one sides shift: \"top\", \"bottom\", \"left\", \"right\", \"\" dir \"\", contract bbox x_nudge y_nudge. \"\", expand bbox x_nudge y_nudge. dir NULL; absolute values used x_nudge y_nudge. Defaults NULL.","code":""},{"path":"/reference/sf_bbox_misc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Measure, transform, and convert bounding boxes — sf_bbox_misc","text":"sf object","code":""},{"path":"/reference/sf_bbox_misc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Measure, transform, and convert bounding boxes — sf_bbox_misc","text":"Measure distances (sf_bbox_dist, sf_bbox_xdist, sf_bbox_ydist, sf_bbox_diagdist) Get aspect ratio (sf_bbox_asp) Transform coordinate reference system (sf_bbox_transform) Convert bounding box SQL style query (sf_bbox_to_lonlat_query), well known text (sf_bbox_to_wkt), simple feature object (sf_bbox_to_sf) Shift, expand, contract bounding box (sf_bbox_shift, sf_bbox_expand, sf_bbox_contract) functions additional parameters sf_bbox_to_lonlat_query sf_bbox_dist. functions take bbox parameter.","code":""},{"path":[]},{"path":"/reference/sf_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert between simple feature and data frame objects — sf_to_df","title":"Convert between simple feature and data frame objects — sf_to_df","text":"Helper function convert simple feature object data frame dropping geometry, converting geometry well known text, (geometry type POINT) getting coordinates centroid point surface. sfc object provided,\"drop\" geometry option supported. check_coords helper function used df_to_sf suggest appropriate coordinate column names based column names provided data frame.","code":""},{"path":"/reference/sf_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert between simple feature and data frame objects — sf_to_df","text":"","code":"sf_to_df(   x,   crs = 4326,   coords = c(\"lon\", \"lat\"),   geometry = \"centroid\",   keep_all = TRUE )  df_to_sf(   x,   crs = NULL,   coords = c(\"lon\", \"lat\"),   into = NULL,   sep = \",\",   rev = TRUE,   coords_crs = 4326,   remove_coords = FALSE )  check_coords(x = NULL, coords = NULL, rev = FALSE)"},{"path":"/reference/sf_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert between simple feature and data frame objects — sf_to_df","text":"x sf sfc object data frame lat/lon coordinates single column two separated columns crs cCordinate reference system, Default: 4326 coords Coordinate columns input dataframe output sf object (geometry 'centroid' 'point') Default: c(\"lon\", \"lat\") geometry Type geometry include data frame. options include \"drop\", \"wkt\", \"centroid\", \"point\", Default: 'centroid' keep_all FALSE, drop columns named coords, Default: TRUE coords single column name longitude latitude, used names new columns coords separated . Passed separate sep coords single column name longitude latitude, sep used separator coordinate values. Passed separate rev TRUE, reverse c(\"lat\", \"lon\") coords c(\"lon\", \"lat\"). check_coords .","code":""},{"path":"/reference/sf_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert between simple feature and data frame objects — sf_to_df","text":"sf_to_df() returns data frame geometry dropped converted wkt coordinates centroid point surface; df_to_sf()returns simple feature object POINT geometry","code":""},{"path":[]},{"path":"/reference/sf_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert between simple feature and data frame objects — sf_to_df","text":"","code":"if (FALSE) { if (interactive()) {   nc <- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\"))   nc_df <- ggspatial::df_spatial(nc)    df_to_sf(nc_df, coords = c(\"x\", \"y\"))    nc_df$xy <- paste(nc_df$x, nc_df$y, sep = \",\")    df_to_sf(nc_df, coords = \"xy\", into = c(\"lon\", \"lat\")) } }"},{"path":"/reference/st_bbox_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a bounding box buffered to match an aspect ratio — st_bbox_ext","title":"Get a bounding box buffered to match an aspect ratio — st_bbox_ext","text":"Takes area sf object bounding box returns bounding box matches provided aspect ratio contains area bounding box provided.","code":""},{"path":"/reference/st_bbox_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a bounding box buffered to match an aspect ratio — st_bbox_ext","text":"","code":"st_bbox_ext(   x = NULL,   dist = NULL,   diag_ratio = NULL,   asp = NULL,   unit = NULL,   crs = NULL,   class = \"bbox\",   from = NULL )  st_bbox_asp(x = NULL, asp = NULL, class = \"bbox\")"},{"path":"/reference/st_bbox_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a bounding box buffered to match an aspect ratio — st_bbox_ext","text":"x object sf, bbox, sfc, raster, sp object data frame can converted sf object list sf, bbox, sfc objects. st_bbox_asp also supports vectors format bbox object. dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" crs Coordinate reference system bounding box return class Class object return (sf bbox); defaults \"bbox\".","code":""},{"path":"/reference/st_bbox_ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a bounding box buffered to match an aspect ratio — st_bbox_ext","text":"Class bbox object","code":""},{"path":"/reference/st_bbox_ext.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a bounding box buffered to match an aspect ratio — st_bbox_ext","text":"Common aspect ratios include \"1:1\" (1), \"4:6\" (0.666), \"8.5:11\", \"16:9\" (1.777). asp parameter supports numeric values character strings ratios matching format \"width:height\".","code":""},{"path":"/reference/st_bearing.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bearing from simple feature objects with LINESTRING geometry — st_bearing","title":"Get bearing from simple feature objects with LINESTRING geometry — st_bearing","text":"Get bearing simple feature objects LINESTRING geometry","code":""},{"path":"/reference/st_bearing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bearing from simple feature objects with LINESTRING geometry — st_bearing","text":"","code":"st_bearing(x, dir = FALSE, crs = 4326)"},{"path":"/reference/st_bearing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bearing from simple feature objects with LINESTRING geometry — st_bearing","text":"x sf object. dir Logical indicator whether include direction bearing; FALSE, return absolute (positive) bearing value. TRUE, return negative positive bearing values. Default: FALSE. crs Coordinate reference system passed sf::st_coordinates() (must geographic projected). Default: 4326.","code":""},{"path":[]},{"path":"/reference/st_bearing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get bearing from simple feature objects with LINESTRING geometry — st_bearing","text":"","code":"if (FALSE) { if (interactive()) {   library(ggplot2)    nc <- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\"))   nc_pts <- sf::st_centroid(nc)   nc_line <-     sf::st_as_sf(       sf::st_cast(         sf::st_union(c(nc_pts[1, ]$geometry, nc_pts[30, ]$geometry)),         \"LINESTRING\"       )     )    ggplot() +     geom_sf(data = nc) +     geom_sf(data = nc_pts) +     geom_sf(data = st_bearing(nc_line), aes(color = bearing)) } }"},{"path":"/reference/st_buffer_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Buffer a simple feature or bounding box object — st_buffer_ext","title":"Buffer a simple feature or bounding box object — st_buffer_ext","text":"Return sf object buffer based dist proportion diagonal distance defined diag_ratio. x uses geographic coordinates, coordinate reference system transformed EPSG:3857 transformed back original CRS buffer applied.","code":""},{"path":"/reference/st_buffer_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Buffer a simple feature or bounding box object — st_buffer_ext","text":"","code":"st_buffer_ext(   x,   dist = NULL,   diag_ratio = NULL,   unit = \"meter\",   dist_limits = NULL,   single_side = FALSE,   ... )  st_edge(x, dist = NULL, diag_ratio = NULL, unit = \"meter\", ...)"},{"path":"/reference/st_buffer_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Buffer a simple feature or bounding box object — st_buffer_ext","text":"x sf bbox object. dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit Units buffer. Supported options include \"meter\", \"foot\", \"kilometer\", \"mile\", \"nautical mile\" Common abbreviations (e.g. \"km\" instead \"kilometer\") also supported. Distance units converted units matching GDAL units x; defaults \"meter\" dist_limits Numeric vector length (minimum maximum values used lower upper limits distance buffer). Units must match provided units; defaults NULL. single_side TRUE, single-sided buffers returned linear geometries, case negative dist values give buffers right-hand side, positive left. ... additional parameters passed sf::st_buffer()","code":""},{"path":"/reference/st_buffer_ext.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Buffer a simple feature or bounding box object — st_buffer_ext","text":"st_edge variation st_buffer_ext dist diag_ratio used define width edge return either outside existing geometry (positive dist values) inside existing geometry (negative dist values).","code":""},{"path":"/reference/st_cast_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast geometry to another type — st_cast_ext","title":"Cast geometry to another type — st_cast_ext","text":"Wrapper sf::st_cast() currently supports casting MULTIPOLYGON POLYGON MULTIPOLYGON POLYGON POINT , simplify = FALSE, can cast MULTIPOINT LINESTRING. different basic functionality st_cast development may improve utility function.","code":""},{"path":"/reference/st_cast_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast geometry to another type — st_cast_ext","text":"","code":"st_cast_ext(x, to = \"POINT\", simplify = TRUE, ...)"},{"path":"/reference/st_cast_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast geometry to another type — st_cast_ext","text":"x sf sfc object cast another type. character; target type, missing, simplification tried; x type sfg (.e., single geometry) needs specified. simplify TRUE, simplify geometry type; defaults TRUE. ... ignored","code":""},{"path":[]},{"path":"/reference/st_clip.html","id":null,"dir":"Reference","previous_headings":"","what":"Clip the side or corner of a simple feature or bounding box object — st_clip","title":"Clip the side or corner of a simple feature or bounding box object — st_clip","text":"Clip based corner object bounding box.","code":""},{"path":"/reference/st_clip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clip the side or corner of a simple feature or bounding box object — st_clip","text":"","code":"st_clip(   x,   clip = NULL,   keep = NULL,   flip = FALSE,   dist = NULL,   diag_ratio = NULL )"},{"path":"/reference/st_clip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clip the side or corner of a simple feature or bounding box object — st_clip","text":"x sf bbox object clip clip Character string describing part area clip remove. Options include c(\"top\", \"right\", \"bottom\", \"left\", \"topright\", \"bottomright\", \"bottomleft\", \"topleft\"). NULL, area clipped full edge can returned. keep Alternate way defining clip (naming section keep). flip Logical. Default FALSE. TRUE, clip area kept instead removed. keep provided, flip automatically set TRUE. dist Numeric. Distance use edge. Default NULL meters. Use negative values inside edge positive numbers outside edge. diag_ratio Alternate way define edge distance.","code":""},{"path":"/reference/st_clip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clip the side or corner of a simple feature or bounding box object — st_clip","text":"sf object clipped based parameters","code":""},{"path":"/reference/st_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Get coordinates for a simple feature or bounding box object — st_coords","title":"Get coordinates for a simple feature or bounding box object — st_coords","text":"extended version st_coords supports binding coordinates object, optionally dropping geometry, returning wkt point surface (geometry = \"surface point\") instead centroid.","code":""},{"path":"/reference/st_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get coordinates for a simple feature or bounding box object — st_coords","text":"","code":"st_coords(   x,   coords = NULL,   geometry = NULL,   crs = NULL,   keep_all = TRUE,   drop = TRUE )"},{"path":"/reference/st_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get coordinates for a simple feature or bounding box object — st_coords","text":"x sf, bbox, sfc object coords Column names use coordinates results, Default: NULL; set c(\"lon\", \"lat\") check_coords geometry geometry use coordinates \"centroid\", \"surface point\", alternatively \"wkt\"; defaults NULL (\"centroid\") crs Coordinate reference system use coordinates; defaults NULL. keep_all TRUE, bind coordinates columns provided object x, Default: TRUE. drop TRUE x sf object, drop geometry Default: TRUE.","code":""},{"path":"/reference/st_erase.html","id":null,"dir":"Reference","previous_headings":"","what":"Erase an area of a simple feature object — st_erase","title":"Erase an area of a simple feature object — st_erase","text":"extended version sf::st_difference uses flip parameter optionally call sf::st_intersection combines unions second object default. st_trim st_erase flip set TRUE.","code":""},{"path":"/reference/st_erase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Erase an area of a simple feature object — st_erase","text":"","code":"st_erase(x, y, flip = FALSE, union = TRUE)  st_trim(x, y, union = TRUE)"},{"path":"/reference/st_erase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Erase an area of a simple feature object — st_erase","text":"x sf object y sf object flip TRUE, use st_intersection; FALSE use st_difference, Default: FALSE union TRUE, use st_combine st_union y applying difference/intersection, Default: FALSE","code":""},{"path":"/reference/st_misc.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify the geometry of a simple feature or bounding box object — st_misc","title":"Modify the geometry of a simple feature or bounding box object — st_misc","text":"Support bbox sf objects inputs.","code":""},{"path":"/reference/st_misc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify the geometry of a simple feature or bounding box object — st_misc","text":"","code":"st_scale_rotate(x, scale = 1, rotate = 0)  st_center(x, ext = TRUE, ...)  st_square(x, scale = 1, rotate = 0, inscribed = FALSE)  st_inscribed_square(x, scale = 1, rotate = 0)  st_circle(x, scale = 1, inscribed = FALSE)  st_circumscribed_circle(x, scale = 1)"},{"path":"/reference/st_misc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify the geometry of a simple feature or bounding box object — st_misc","text":"x sf, sfc, bbox object scale numeric; scale factor, Default: 1 rotate numeric; degrees rotate (-360 360), Default: 0 ext TRUE, st_center returns list centroid sfc object, sf object (lon lat values), original geometry (x), original crs. objects; defaults TRUE. FALSE, return sf object. ... Additional parameters passed sf::st_centroid() st_center inscribed TRUE, make circle square inscribed within x, FALSE, make circumscribed.","code":""},{"path":"/reference/st_misc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify the geometry of a simple feature or bounding box object — st_misc","text":"Scale rotate simple feature bounding box object using affine transformations Get center point sf object Get circumscribed square approximate inscribed square sf object Get circumscribed circle incscribed circle sf object st_inscribed_square wraps sf::st_inscribed_circle() limits circle 1 segment per quadrant (nQuadSegs = 1) rotates resulting geometry 45 degrees provide (mostly) inscribed square. different rotation value can provided change orientation shape, e.g. rotate = -45 return diamond shape. st_square wraps st_bbox_ext asp = 1.","code":""},{"path":[]},{"path":"/reference/st_misc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify the geometry of a simple feature or bounding box object — st_misc","text":"","code":"library(ggplot2)  nc <- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\")) #> Reading layer `nc' from data source  #>   `/Library/Frameworks/R.framework/Versions/4.1-arm64/Resources/library/sf/shape/nc.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 14 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965 #> Geodetic CRS:  NAD27 nc_rotated <- st_scale_rotate(nc, scale = 0.5, rotate = 15)  ggplot2::ggplot() +   ggplot2::geom_sf(data = nc) +   ggplot2::geom_sf(data = nc_rotated, fill = NA, color = \"red\")"},{"path":"/reference/st_transform_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform or convert coordinates of a simple feature or bounding box object — st_transform_ext","title":"Transform or convert coordinates of a simple feature or bounding box object — st_transform_ext","text":"Take sf, sfc, bbox object transform coordinate reference system match object provided crs.","code":""},{"path":"/reference/st_transform_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform or convert coordinates of a simple feature or bounding box object — st_transform_ext","text":"","code":"st_transform_ext(x = NULL, crs = NULL, class = NULL)"},{"path":"/reference/st_transform_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform or convert coordinates of a simple feature or bounding box object — st_transform_ext","text":"x sf, sfc, bbox object, list sf objects. crs character numeric reference coordinate reference system supported sf::st_crs() another  sf, sfc, bbox object used provide crs. class Class object return (sf bbox). x sf list, returned object remains list may converted bbox class = \"sf\".","code":""},{"path":"/reference/st_transform_ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform or convert coordinates of a simple feature or bounding box object — st_transform_ext","text":"sf, sfc, bbox object transformed new coordinate reference system.","code":""},{"path":[]},{"path":"/reference/standard_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard map, architectural, and engineering scales — standard_scales","title":"Standard map, architectural, and engineering scales — standard_scales","text":"Standard map scales derived USGS 2002 report map scales https://pubs.usgs.gov/fs/2002/0015/report.pdf","code":""},{"path":"/reference/standard_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard map, architectural, and engineering scales — standard_scales","text":"","code":"standard_scales"},{"path":"/reference/standard_scales.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Standard map, architectural, and engineering scales — standard_scales","text":"data frame 32 rows 16 variables: scale Scale name standard Standard (USGS, architectural, engineering) series Series name (USGS map scales ) actual_ft Scale distance 1 ft actual. actual_ft_unit Unit scale 1 ft actual. scale_in Actual distance 1 scale. scale_in_unit Unit actual distance 1 scale. scale_in_accuracy Accuracy 1 scale (approximate exact) scale_cm Actual distance 1 cm scale. scale_cm_unit Unit actual distance 1 cm scale. scale_cm_accuracy Accuracy 1 cm scale (approximate exact) size_latlon Standard size latitude/longitude size_latlon_unit Unit latitude/longitude size (minutes degrees) area_approx Approximate actual area area_approx_unit Approximate area unit series_status Series status (select USGS map series \"abandoned\")","code":""},{"path":"/reference/standard_scales.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standard map, architectural, and engineering scales — standard_scales","text":"Common architectural engineering scales derived FEMA guide using scales https://www.usfa.fema.gov/downloads/pdf/nfa/engineer-architect-scales.pdf","code":""},{"path":"/reference/theme_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify the text, margins, or legend for a ggplot theme — theme_ext","title":"Modify the text, margins, or legend for a ggplot theme — theme_ext","text":"Helper functions modifying ggplot theme. \"replace\" \"update\" options method parameter currently working; keeping method = NULL method = \"set\" recommended.","code":""},{"path":"/reference/theme_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify the text, margins, or legend for a ggplot theme — theme_ext","text":"","code":"theme_text(   font_family = NULL,   color = \"black\",   geom_text = TRUE,   hjust = NULL,   vjust = NULL,   method = NULL )  theme_margin(   margin = \"standard\",   paper = NULL,   orientation = NULL,   dist = NULL,   unit = \"in\",   plot_width = NULL,   header = 0,   footer = 0,   fill = NA,   color = NA,   size = 0,   method = NULL )  theme_legend(   position = NULL,   justification = NULL,   margin = 10,   unit = \"pt\",   inset = TRUE,   bgcolor = \"white\",   title = list(face = \"bold\", align = 0),   method = NULL )"},{"path":"/reference/theme_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify the text, margins, or legend for a ggplot theme — theme_ext","text":"font_family Font family, Default: 'Helvetica' NULL, font_family pulled current set theme helpful resetting text families theme. color Color text elements (passed element_text theme_text), plot.background (passed element_rect theme_margin). Default: NA. geom_text TRUE, update text family geom_text, geom_sf_text, geom_label, geom_sf_label match font_family color. FALSE, make changes theme. Default: TRUE. method Method name ggplot2 geom function use modifying theme (\"set\", \"update\", \"replace\"); defaults NULL. margin Margin distance, margin style supported get_margin() margin object; defaults 10. paper Paper, Default: 'letter'. orientation Orientation \"portrait\", \"landscape\", \"square\", Default: 'portrait'. dist Margin distance (single value used sides), Default: NULL unit Legend margin units; defaults 'pt'. plot_width Plot map width units. paper plot_width provided, margins half distance two evenly distributed. sets margin distance height well width work well header footers improved future. header Header footer height units; defaults 0. Please note: headers footers currently supported \"px\" units. footer Header footer height units; defaults 0. Please note: headers footers currently supported \"px\" units. fill Fill plot.background theme element passed element_rect Default: NA. size Size number (used \"ISO\" \"JIS\" series). Standard, series, size may required return single paper using parameters. position Legend position (“left”,“top”, “right”, “bottom”) two-element numeric vector set position using Normalized Parent Coordinates (\"npc\"); defaults NULL justification NULL, justification set \"center\"; defaults NULL. Use justification set legend position inset = FALSE. Supports \"topleft\", \"bottomleft\", \"topright\", \"bottomright\" values. inset TRUE position \"topleft\", \"bottomleft\", \"topright\", \"bottomright\", place legend inset position; defaults TRUE. bgcolor Fill color legend background; defaults 'white'.","code":""},{"path":[]},{"path":"/reference/us_counties.html","id":null,"dir":"Reference","previous_headings":"","what":"U.S. County boundaries (1:5 mi scale, bbox and wkt) — us_counties","title":"U.S. County boundaries (1:5 mi scale, bbox and wkt) — us_counties","text":"U.S. County boundaries data downloaded tigris::counties.","code":""},{"path":"/reference/us_counties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"U.S. County boundaries (1:5 mi scale, bbox and wkt) — us_counties","text":"","code":"us_counties"},{"path":"/reference/us_counties.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"U.S. County boundaries (1:5 mi scale, bbox and wkt) — us_counties","text":"data frame 3220 rows 7 variables: name County name geoid County GeoID countyfp County FIPS statefp State FIPS abb_state State abbreviation (USPS) bbox Bounding box wkt Well known text","code":""},{"path":"/reference/us_states.html","id":null,"dir":"Reference","previous_headings":"","what":"U.S. State boundaries (1:5 mi scale, bbox and wkt) — us_states","title":"U.S. State boundaries (1:5 mi scale, bbox and wkt) — us_states","text":"U.S. State boundaries data downloaded tigris::states.","code":""},{"path":"/reference/us_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"U.S. State boundaries (1:5 mi scale, bbox and wkt) — us_states","text":"","code":"us_states"},{"path":"/reference/us_states.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"U.S. State boundaries (1:5 mi scale, bbox and wkt) — us_states","text":"data frame 52 rows 6 variables: name State name geoid State GeoID statefp State FIPS abb State abbreviation (USPS) bbox Bounding box wkt Well known text","code":""},{"path":"/reference/write_sf_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Write or cache a simple feature object to a file — write_sf_ext","title":"Write or cache a simple feature object to a file — write_sf_ext","text":"write_sf_ext write_sf_cache helper functions wrap sf::write_sf function provide additional options including consistent file naming make_filename() features including:","code":""},{"path":"/reference/write_sf_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write or cache a simple feature object to a file — write_sf_ext","text":"","code":"write_sf_ext(   data,   name = NULL,   label = NULL,   prefix = NULL,   postfix = NULL,   filename = NULL,   filetype = \"geojson\",   path = NULL,   cache = FALSE,   overwrite = FALSE )  write_sf_cache(   data,   data_dir = NULL,   overwrite = FALSE,   name = NULL,   label = NULL,   filetype = NULL,   filename = NULL,   prefix = NULL,   postfix = NULL )"},{"path":"/reference/write_sf_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write or cache a simple feature object to a file — write_sf_ext","text":"data sf object write. name Name make file name converted snake case janitor::make_clean_names(), e.g. \"Residential zoning map\" becomes \"residential_zoning_map\" label Label combine name converted snake case janitor::make_clean_names(). label designed identify area shared characteristics across multiple data files, maps, plots. prefix File name prefix. \"date\" adds date prefix, \"time\" adds date/time prefix; defaults NULL. postfix File name postfix; defaults NULL. filename File name use. filename provided data sf object make sure include file type, e.g. \"data.gpkg\" \"data.csv\". Objects simple features written RDS readr::write_rds(). filetype File type write cache, Default: 'geojson' write_sf_ext() path Path file data directory. cache TRUE, write sf object file cache directory; defaults FALSE. overwrite Logical. Default FALSE. TRUE, overwrite existing cached files use file name. data_dir cache data directory, defaults user_cache_dir data_dir NULL. (used write_sf_cache; default used cache = TRUE write_sf_ext)","code":""},{"path":"/reference/write_sf_ext.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write or cache a simple feature object to a file — write_sf_ext","text":"data sf object, optionally save RDS file. filetype \"csv\" filename ends \".csv\" file automatically converted dataframe using df_to_sf(); filetype \"gsheet\" file converted turned new Google SHeet document (Google account authorized googlesheets4 package). cache TRUE use write_sf_cache cache file writing copy path provided. data named sf list, pass name sf object list name parameter keep parameters consistent write file object list.","code":""},{"path":[]}]
