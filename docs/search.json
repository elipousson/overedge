[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 overedge authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eli Pousson. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pousson E (2022). overedge: Assorted Functions Easier Map Making. R package version 0.0.0.9000.","code":"@Manual{,   title = {overedge: Assorted Functions For Easier Map Making},   author = {Eli Pousson},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"overedge","dir":"","previous_headings":"","what":"Assorted Functions For Easier Map Making","title":"Assorted Functions For Easier Map Making","text":"goal overedge provide useful functions making maps R. collection miscellaneous functions primarily working ggplot2 sf.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Assorted Functions For Easier Map Making","text":"can install development version overedge like :","code":"remotes::install_github(\"elipousson/overedge\")"},{"path":"/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Assorted Functions For Easier Map Making","text":"overedge currently provides just functions.","code":""},{"path":"/index.html","id":"make-icon-maps-with-sf-objects-and-ggplot2","dir":"","previous_headings":"Examples","what":"Make icon maps with sf objects and ggplot2","title":"Assorted Functions For Easier Map Making","text":"geom_sf_icon wraps ggsvg::geom_point_svg() provide convenient way make icon maps. can create maps using single named icon matches one icons map_icons.  can also use icon column provided sf object.  Check map_icons see supported icon names.","code":"library(overedge) library(ggplot2) library(sf) #> Warning: package 'sf' was built under R version 4.1.1 #> Linking to GEOS 3.9.1, GDAL 3.2.3, PROJ 7.2.1; sf_use_s2() is TRUE  nc <- st_read(system.file(\"shape/nc.shp\", package=\"sf\")) #> Reading layer `nc' from data source  #>   `/Library/Frameworks/R.framework/Versions/4.1-arm64/Resources/library/sf/shape/nc.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 14 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965 #> Geodetic CRS:  NAD27 nc <- st_transform(nc, 2264) theme_set(theme_void())  nc_map <-   ggplot() +   geom_sf(data = nc)  nc_map +   geom_sf_icon(data = nc, icon = \"point-start\", size = 8) #> Warning: Converting data from MULTIPOLYGON to POINT with `sf::st_centroid()`. nc$icon <- rep(c(\"1\", \"2\", \"3\", \"4\"), nrow(nc)/4)  nc_map +   geom_sf_icon(data = nc, size = 5) #> Warning: Converting data from MULTIPOLYGON to POINT with `sf::st_centroid()`. head(map_icons) #>                name #> 1         aerialway #> 2          airfield #> 3           airport #> 4      alcohol-shop #> 5 american-football #> 6    amusement-park #>                                                                              url #> 1         https://raw.githubusercontent.com/mapbox/maki/main/icons/aerialway.svg #> 2          https://raw.githubusercontent.com/mapbox/maki/main/icons/airfield.svg #> 3           https://raw.githubusercontent.com/mapbox/maki/main/icons/airport.svg #> 4      https://raw.githubusercontent.com/mapbox/maki/main/icons/alcohol-shop.svg #> 5 https://raw.githubusercontent.com/mapbox/maki/main/icons/american-football.svg #> 6    https://raw.githubusercontent.com/mapbox/maki/main/icons/amusement-park.svg #>   size style        repo #> 1   15       mapbox/maki #> 2   15       mapbox/maki #> 3   15       mapbox/maki #> 4   15       mapbox/maki #> 5   15       mapbox/maki #> 6   15       mapbox/maki"},{"path":"/index.html","id":"scale-and-rotate-sf-objects","dir":"","previous_headings":"Examples","what":"Scale and rotate sf objects","title":"Assorted Functions For Easier Map Making","text":"st_scale_rotate() convenience function apply affine transformations sf objects.","code":"nc_rotated <- st_scale_rotate(nc, scale = 0.5, rotate = 15)  nc_map +   geom_sf(data = nc_rotated, fill = NA, color = \"red\")"},{"path":"/index.html","id":"create-inscribed-squares-in-sf-objects","dir":"","previous_headings":"Examples","what":"Create inscribed squares in sf objects","title":"Assorted Functions For Easier Map Making","text":"","code":"nc_squares <- st_inscribed_square(nc)  nc_map +   geom_sf(data = nc_squares, fill = NA, color = \"red\")"},{"path":"/index.html","id":"add-a-neatline-to-a-map","dir":"","previous_headings":"Examples","what":"Add a neatline to a map","title":"Assorted Functions For Easier Map Making","text":"layer_neatline() hides major grid lines axis label default. function useful draw neatline around map set aspect ratio. layer_neatline() can also used focus specific area map option apply buffer distance ratio diagonal distance input data. label_axes hide_grid paramters override set ggplot theme.","code":"nc_map +   layer_neatline(data = nc,                  asp = \"6:4\",                  color = \"gray60\", size = 2, linetype = \"dashed\") theme_set(theme_minimal())  nc_map +   layer_neatline(data = nc[1,],                  diag_ratio = 0.5, asp = 1,                  color = \"black\",                  label_axes = \"--EN\", hide_grid = FALSE)"},{"path":"/reference/df_to_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data frame with coordinates to simple feature object — df_to_sf","title":"Convert data frame with coordinates to simple feature object — df_to_sf","text":"Convert data frame coordinates simple feature object","code":""},{"path":"/reference/df_to_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data frame with coordinates to simple feature object — df_to_sf","text":"","code":"df_to_sf(   x,   coords = c(\"LONGITUD\", \"LATITUDE\"),   into = NULL,   sep = \",\",   lonlat = TRUE,   crs = 4326 )"},{"path":"/reference/df_to_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data frame with coordinates to simple feature object — df_to_sf","text":"x data frame lat/lon coordinates 1 combined 2 separated columns coords character string names longitude latitude column columns, Default: c('LONGITUD', 'LATITUDE') coords single column name longitude latitude, used names new columns coords separated . Passed tidyr::separate(). sep coords single column name longitude latitude, sep used separator coordinate values. Passed tidyr::separate(). lonlat coords ordered latitude, longitude order latitude, longitude order, set FALSE. Default TRUE. crs coordinate reference system returned sf object, Default: 4326","code":""},{"path":"/reference/df_to_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data frame with coordinates to simple feature object — df_to_sf","text":"sf object","code":""},{"path":"/reference/df_to_sf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert data frame with coordinates to simple feature object — df_to_sf","text":"DETAILS","code":""},{"path":[]},{"path":"/reference/df_to_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data frame with coordinates to simple feature object — df_to_sf","text":"","code":"if (FALSE) { if (interactive()) {   nc <- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\"))   nc_df <- ggspatial::df_spatial(nc)    df_to_sf(nc_df, coords = c(\"x\", \"y\"))    nc_df$xy <- paste(nc_df$x, nc_df$y, sep = \",\")    df_to_sf(nc_df, coords = \"xy\", into = c(\"lon\", \"lat\")) } }"},{"path":"/reference/geom_sf_icon.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw SVG icons for simple feature objects — geom_sf_icon","title":"Draw SVG icons for simple feature objects — geom_sf_icon","text":"Use geom_point_svg() function plot icons using centroids input simple feature object set icon location.","code":""},{"path":"/reference/geom_sf_icon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw SVG icons for simple feature objects — geom_sf_icon","text":"","code":"geom_sf_icon(   data = NULL,   iconname_col = \"icon\",   icon = NULL,   px = NULL,   source = NULL,   svg = NULL,   ... )"},{"path":"/reference/geom_sf_icon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw SVG icons for simple feature objects — geom_sf_icon","text":"data sf object. geometry type data POINT, object used . , object converted POINT using st_centroid(). iconname_col column name input data use icon name. name matches multiple icons, first match map_icons used. may provide px source value select different match needed , case, icons must use px source value. Note icon column mapped aes(). icon Icon name. Default NULL. icon provided, iconname_col used. px Icon size pixels. See map_icons$px supported options. Optional may necessary differentiate icons duplicate names. source Icon source. See map_icons$repo supported options. Optional may required differentiate icons duplicate names. svg Optional. Custom file path URL SVG pass svg parameter ggsvg::geom_point_svg().  icon provided, svg used. ... Additional parameters ggsvg::geom_point_svg()","code":""},{"path":[]},{"path":"/reference/geom_sf_icon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw SVG icons for simple feature objects — geom_sf_icon","text":"","code":"if (FALSE) { if (interactive()) {   library(sf)   library(ggplot2)   library(overedge)    nc <- st_read(system.file(\"shape/nc.shp\", package = \"sf\"))   ggplot() +     geom_sf_icon(data = nc, icon = \"point-start\", size = 10)     nc$icon <- rep(c(\"1\", \"2\", \"3\", \"4\"), nrow(nc) / 4)   ggplot() +     geom_sf_icon(data = nc, size = 5) } }"},{"path":"/reference/layer_neatline.html","id":null,"dir":"Reference","previous_headings":"","what":"Set map limits to sf or bbox object with optional adjustments and panel border — layer_neatline","title":"Set map limits to sf or bbox object with optional adjustments and panel border — layer_neatline","text":"Set limits map bounding box x using coord_sf. Optionally, adjust x size applying buffer /adjust aspect ratio limiting bounding box match set aspect ratio.","code":""},{"path":"/reference/layer_neatline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set map limits to sf or bbox object with optional adjustments and panel border — layer_neatline","text":"","code":"layer_neatline(   data = NULL,   dist = NULL,   diag_ratio = NULL,   asp = NULL,   crs = NULL,   color = \"black\",   size = 1,   linetype = \"solid\",   expand = FALSE,   hide_grid = TRUE,   label_axes = \"----\",   ... )"},{"path":"/reference/layer_neatline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set map limits to sf or bbox object with optional adjustments and panel border — layer_neatline","text":"data sf bbox class object dist buffer distance units. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). crs Coordinate reference system use coord_sf. color color panel border, Default: 'black' size size panel border, Default: 1 linetype line type panel border, Default: 'solid' expand Default FALSE. TRUE, use scale_y_continuous scale_x_continuous expand map extent provided parameters. hide_grid logical. TRUE, hide major grid lines. Default: TRUE label_axes label_axes passed coord_sf, Default: '----' hides axes labels. ... Additional parameters pass coord_sf.","code":""},{"path":"/reference/layer_neatline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set map limits to sf or bbox object with optional adjustments and panel border — layer_neatline","text":"ggplot2::coord_sf() function xlim ylim parameters","code":""},{"path":[]},{"path":"/reference/layer_neatline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set map limits to sf or bbox object with optional adjustments and panel border — layer_neatline","text":"","code":"if (FALSE) { if(interactive()){  library(ggplot2)    nc <- sf::st_read(system.file(\"shape/nc.shp\", package=\"sf\"))   ggplot() +     geom_sf(data = nc) +     layer_neatline(data = nc[1,], asp = 1, color = \"red\")    } }"},{"path":"/reference/map_icons.html","id":null,"dir":"Reference","previous_headings":"","what":"Map icons — map_icons","title":"Map icons — map_icons","text":"index map icons four sources: mapbox/maki ideditor/temaki manifestinteractive/weather-underground-icons openstreetmap/map-icons openstreetmap/lane-icons Esri/calcite-point-symbols icon sources use open licenses. Maki, Temaki, OSM lane icons use CC0 license. Weather Underground Icons use MIT license. OSM map icons use unspecified PD style license. Calcite icons available Esri Master License Agreement (MLA).","code":""},{"path":"/reference/map_icons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map icons — map_icons","text":"","code":"map_icons"},{"path":"/reference/map_icons.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Map icons — map_icons","text":"data frame 1855 rows 5 variables: name Icon name url Icon URL GitHub repo style Icon style (Weather Underground icons ) size Icon width/height (pixels) repo GitHub repository icon collection","code":""},{"path":"/reference/overedge-package.html","id":null,"dir":"Reference","previous_headings":"","what":"overedge: Assorted Functions For Easier Map Making — overedge-package","title":"overedge: Assorted Functions For Easier Map Making — overedge-package","text":"Assorted functions support data wrangling visualization map making focus ggplot2 sf packages.","code":""},{"path":"/reference/overedge-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"overedge: Assorted Functions For Easier Map Making — overedge-package","text":"Maintainer: Eli Pousson eli.pousson@gmail.com (ORCID)","code":""},{"path":"/reference/st_bbox_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bounding box buffered and adjusted to aspect ratio — st_bbox_adj","title":"Get bounding box buffered and adjusted to aspect ratio — st_bbox_adj","text":"Get bounding box buffered adjusted match aspect ratio","code":""},{"path":"/reference/st_bbox_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bounding box buffered and adjusted to aspect ratio — st_bbox_adj","text":"","code":"st_bbox_adj(   x = NULL,   dist = NULL,   diag_ratio = NULL,   asp = NULL,   unit = NULL,   crs = NULL )"},{"path":"/reference/st_bbox_adj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bounding box buffered and adjusted to aspect ratio — st_bbox_adj","text":"x sf adjust dist buffer distance units. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). unit Units passed units::set_units(). Default \"metre\" Must match units CRS provided object. crs Coordinate reference system bounding box return","code":""},{"path":"/reference/st_bbox_adj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bounding box buffered and adjusted to aspect ratio — st_bbox_adj","text":"Class bbox object","code":""},{"path":"/reference/st_bbox_adj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get bounding box buffered and adjusted to aspect ratio — st_bbox_adj","text":"Takes area sf object bounding box returns bounding box matches provided aspect ratio contains area bounding box provided. Common aspect ratios include \"1:1\" (1), \"4:6\" (0.666), \"8.5:11\", \"16:9\" (1.777). asp parameter supports numeric values character strings ratios matching format \"width:height\".","code":""},{"path":"/reference/st_bbox_asp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bounding box adjusted to match aspect ratio — st_bbox_asp","title":"Get bounding box adjusted to match aspect ratio — st_bbox_asp","text":"Get bbox sf bbox object adjusted match aspect ratio","code":""},{"path":"/reference/st_bbox_asp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bounding box adjusted to match aspect ratio — st_bbox_asp","text":"","code":"st_bbox_asp(x = NULL, asp = NULL)"},{"path":"/reference/st_bbox_asp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bounding box adjusted to match aspect ratio — st_bbox_asp","text":"x sf bbox object asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\").","code":""},{"path":"/reference/st_bbox_asp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bounding box adjusted to match aspect ratio — st_bbox_asp","text":"bbox object","code":""},{"path":"/reference/st_bbox_asp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get bounding box adjusted to match aspect ratio — st_bbox_asp","text":"Takes area  sf bbox object returns bounding box matches aspect ratio provided asp contains area bounding box provided. Common aspect ratios include \"1:1\" (1), \"4:6\" (0.666), \"8.5:11\", \"16:9\" (1.777). asp parameter supports numeric values character strings ratios matching format \"width:height\".","code":""},{"path":"/reference/st_bearing.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bearing of sf object with LINESTRING geometry — st_bearing","title":"Get bearing of sf object with LINESTRING geometry — st_bearing","text":"Get bearing sf object LINESTRING geometry","code":""},{"path":"/reference/st_bearing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bearing of sf object with LINESTRING geometry — st_bearing","text":"","code":"st_bearing(x, dir = FALSE, crs = 4326)"},{"path":"/reference/st_bearing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bearing of sf object with LINESTRING geometry — st_bearing","text":"x object class sf dir logical; FALSE, return absolute (positive) bearing value. TRUE, return negative positive bearing values. Default: FALSE. crs Coordinate reference system passed sf::st_coordinates() (must geographic projected). Default: 4326","code":""},{"path":[]},{"path":"/reference/st_bearing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get bearing of sf object with LINESTRING geometry — st_bearing","text":"","code":"if (FALSE) { if(interactive()){  library(ggplot2)   nc <- sf::st_read(system.file(\"shape/nc.shp\", package=\"sf\"))  nc_pts <- sf::st_centroid(nc)  nc_line <-    sf::st_as_sf(      sf::st_cast(sf::st_union(c(nc_pts[1,]$geometry, nc_pts[30,]$geometry)), \"LINESTRING\")      )   ggplot() +    geom_sf(data = nc) +    geom_sf(data = nc_pts) +    geom_sf(data = st_bearing(nc_line), aes(color = bearing))  } }"},{"path":"/reference/st_buffer_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Get buffered sf or bbox object — st_buffer_ext","title":"Get buffered sf or bbox object — st_buffer_ext","text":"Return sf object buffer based dist proportion diagonal distance defined diag_ratio.","code":""},{"path":"/reference/st_buffer_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get buffered sf or bbox object — st_buffer_ext","text":"","code":"st_buffer_ext(x, dist = NULL, diag_ratio = NULL, unit = \"metre\")"},{"path":"/reference/st_buffer_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get buffered sf or bbox object — st_buffer_ext","text":"x sf bbox object. dist buffer distance units. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. unit Units passed units::set_units(). Default \"metre\" Must match units CRS provided object.","code":""},{"path":"/reference/st_inscribed_square.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an inscribed square in a simple feature object — st_inscribed_square","title":"Create an inscribed square in a simple feature object — st_inscribed_square","text":"function wraps sf::st_inscribed_circle() limits circle 1 segment per quadrant (nQuadSegs = 1) rotates resulting geometry 45 degrees provide (mostly) inscribed square. different rotation value can provided change orientation shap, e.g. rotate = -45 return diamond shape.","code":""},{"path":"/reference/st_inscribed_square.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an inscribed square in a simple feature object — st_inscribed_square","text":"","code":"st_inscribed_square(x, rotate = 0)"},{"path":"/reference/st_inscribed_square.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an inscribed square in a simple feature object — st_inscribed_square","text":"x object class sf rotate numeric; degrees rotate square geometry, Default: 0","code":""},{"path":[]},{"path":"/reference/st_inscribed_square.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an inscribed square in a simple feature object — st_inscribed_square","text":"","code":"if (FALSE) { if(interactive()){  library(ggplot2)   nc <- sf::st_read(system.file(\"shape/nc.shp\", package=\"sf\"))  nc_squares <- st_inscribed_square(sf::st_transform(nc, 2264))   ggplot() +   geom_sf(data = nc) +   geom_sf(data = nc_squares, fill = NA, color = \"red\")  } }"},{"path":"/reference/st_scale_rotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale or rotate a simple feature object — st_scale_rotate","title":"Scale or rotate a simple feature object — st_scale_rotate","text":"Scale rotate simple feature object using affine transformations","code":""},{"path":"/reference/st_scale_rotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale or rotate a simple feature object — st_scale_rotate","text":"","code":"st_scale_rotate(x, scale = 1, rotate = 0)"},{"path":"/reference/st_scale_rotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale or rotate a simple feature object — st_scale_rotate","text":"x object class sf scale numeric; scale factor, Default: 1 rotate numeric; degrees rotate (-360 360), Default: 0","code":""},{"path":"/reference/st_scale_rotate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scale or rotate a simple feature object — st_scale_rotate","text":"DETAILS","code":""},{"path":[]},{"path":"/reference/st_scale_rotate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale or rotate a simple feature object — st_scale_rotate","text":"","code":"if (FALSE) { if(interactive()){  library(ggplot2)   nc <- sf::st_read(system.file(\"shape/nc.shp\", package=\"sf\"))  nc_rotated <- st_scale_rotate(nc, scale = 0.5, rotate = 15)   ggplot() +   geom_sf(data = nc) +   geom_sf(data = nc_rotated, fill = NA, color = \"red\")  } }"}]
